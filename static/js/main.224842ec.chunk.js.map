{"version":3,"sources":["serviceWorker.js","components/Char.js","constants.js","actions.js","containers/CharList.js","inputChecker.js","jap-char.js","containers/CharInput.js","components/NavBar.js","components/Music.js","components/Hint.js","components/Signin.js","components/Register.js","components/WordCard.js","components/OutsideAlerter.js","containers/App.js","reducers.js","index.js"],"names":["Boolean","window","location","hostname","match","Char","className","this","props","cardState","char","React","Component","REGISTER_URL","SIGNIN_URL","MEDIA_BASE_URL_WORD","pressSpace","context","type","time","Date","now","updateChar","japchar","romaji","currentJapChar","currentRomaji","updateWord","word","romajiList","cardStateList","map","item","payload","CharList","componentDidMount","setNewWordTime","componentDidUpdate","prevProps","JSON","stringify","charsToRead","setCardState","idx","indexCurrentCard","concat","state","dispatchTime","charsArrayDisplay","Grid","key","container","direction","justify","alignItems","spacing","connect","changeCardState","dispatch","katakanaToRomaji","ア","イ","ウ","エ","オ","ン","カ","キ","ク","ケ","コ","サ","シ","ス","セ","ソ","タ","チ","ツ","テ","ト","ナ","ニ","ヌ","ネ","ノ","ハ","ヒ","フ","ヘ","ホ","マ","ミ","ム","メ","モ","ヤ","ユ","ヨ","ラ","リ","ル","レ","ロ","ワ","ヲ","TrieNode","parent","children","end","Trie","root","prototype","getWord","output","node","unshift","join","insert","i","length","contains","find","prefix","findAllWords","arr","child","SpellCheckerBuffer","charAndRomaji","checkFunction","dict","buffer","charTrie","Object","values","forEach","element","pendingChars","Array","isArray","sp","console","log","checkInput","katakanaHint","imageLink","shortHint","CharInput","convertTimeToScoreDelta","charTimestamp","score_delta","onCorrectChar","onWrongInput","onWordCompletion","currentWord","setCurrentChar","onCompleteChar","newRomaji","onKeyDown","event","onIncorrectCard","curWrongChar","onInputBoxChange","onSpacePress","wordCompleted","onHintedCard","onEnterPress","updateCharScore","updateWordScore","audioIsPlaying","user_uid","preventDefault","lastCardState","which","String","fromCharCode","toLowerCase","onKeyPress","target","value","slice","curRomaji","formRef","createRef","Input","placeholder","inputProps","onChange","autoFocus","inputRef","onPaste","changeGeneralState","pressKey","onIncorrectChar","userChar","currentChar","userInput","typeWrongAnswer","completionType","pressEnter","forwardRef","useStyles","makeStyles","theme","flexGrow","title","NavBar","onRouteChange","classes","AppBar","position","Toolbar","Typography","variant","color","align","Button","onClick","Music","play","audio","Audio","audioLink","togglePlay","setState","onAudioPlay","pause","onAudioPause","addEventListener","noStoreUpdateWhenEnded","setTimeout","delay","removeEventListener","maxWidth","media","height","Hint","currentHintedChar","sentenceFragments","replace","split","modified_romaji","Card","CardActionArea","CardMedia","component","alt","image","CardContent","Signin","onEmailInput","signInEmail","emailErrorMsg","onPasswordInput","signInPassword","passwordErrorMsg","sendSigninInfoToBackend","fetch","method","headers","body","email","password","then","response","json","data","keys","loadUser","catch","error","onSignIn","Paper","paper2","elevation","Container","CssBaseline","paper","form","noValidate","TextField","helperText","margin","required","fullWidth","id","label","name","autoComplete","FormControlLabel","control","Checkbox","submit","xs","Link","href","withStyles","fontFamily","backfround","marginTop","display","flexDirection","marginBottom","padding","breakpoints","up","width","marginLeft","marginRight","Register","onNameInput","nameErrorMsg","sendFormDataToBackEnd","onFormSubmit","validateEmail","nameError","emailError","passwordError","test","minWidth","bullet","transform","fontSize","pos","OutlinedCard","wordInfo","word_audio_duration","document","createElement","innerHTML","sentenceSegments","sentence_expression","parseAudio","audio_string","gutterBottom","vocab_meaning","vocab_pos","vocab_sound_local","sentence_sound_local","sentence_meaning","OutsideAlerter","handleClickOutside","componentWillUnmount","setWrapperRef","wrapperRef","focusInputBox","ref","App","route","parseJapaneseWord","c","c_romaji","push","scoreDeltaList","charScoreDeltaList","res","unix_time","currentWord_unix_time","requestNewWord","userInfo","vocab_kana","curKana","charAt","currentWordInfo","duration","err","user","joined","prevState","charInputRef","current","focus","showHint","displayWordInfo","displayMessage","renderRoute","initialInputBox","inputBox","keyPressed","initialGeneralState","initialCardState","hintedCharList","wrongCharList","prevTimestamp","allCharTimestamp","rootReducer","combineReducers","action","changeInputBox","newTimestamp","logger","createLogger","store","createStore","applyMiddleware","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.224842ec.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport \"../containers/App.css\";\nimport \"./Char.css\";\n\nclass Char extends React.Component {\n  render() {\n    const className = `tmw5 center bg-white br3 pa3 pa4-ns mv3 ba b--black-10 ${this.props.cardState}`;\n    return (\n      <div className={className}>\n        <h1 className=\"char\">{this.props.char}</h1>\n      </div>\n    );\n  }\n}\n\nexport default Char;\n","export const USER_INPUT = \"USER_INPUT\";\r\n\r\nconst method = \"tuanHeroku\";\r\n\r\nvar REGISTER_URL = \"https://localhost:3000/register\";\r\nvar SIGNIN_URL = \"https://localhost:3000/signin\";\r\nvar PROFILE_URL = \"https://localhost:3000/profile/\";\r\nvar GETWORD_URL = \"https://shrouded-harbor-11572.herokuapp.com/getnextword\";\r\nvar CHARSCORE_URL = \"https://shrouded-harbor-11572.herokuapp.com/charscore\";\r\nvar WORDSCORE_URL = \"https://shrouded-harbor-11572.herokuapp.com/wordscore\";\r\nvar MEDIA_BASE_URL_SENTENCE =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/sentence-sound/\";\r\nvar MEDIA_BASE_URL_WORD =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/word-sound/\";\r\n// source: https://www.learn-japanese-adventure.com/learn-how-to-speak-japanese.html\r\nvar MEDIA_BASE_URL_CHAR =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/character-sound/kanasound-\"; // add {romaji}.mp3\r\nvar WORD_LINK =\r\n  \"https://www.reddit.com/r/LearnJapanese/comments/s2iop/heres_a_spreadsheet_of_the_6000_most_common/c4ak0xd/\";\r\nvar TOFUGU_LINK = \"https://www.tofugu.com/japanese/learn-katakana/\";\r\n\r\nswitch (method) {\r\n  case \"local\":\r\n    break;\r\n  case \"tuanHeroku\":\r\n    REGISTER_URL = \"https://shrouded-harbor-11572.herokuapp.com/register\";\r\n    SIGNIN_URL = \"https://shrouded-harbor-11572.herokuapp.com/signin\";\r\n    PROFILE_URL = \"https://shrouded-harbor-11572.herokuapp.com/profile/\";\r\n    break;\r\n  case \"lienHeroku\":\r\n    REGISTER_URL = \"https://peaceful-sands-25473.herokuapp.com/register\";\r\n    SIGNIN_URL = \"https://peaceful-sands-25473.herokuapp.com/signin\";\r\n    PROFILE_URL = \"https://peaceful-sands-25473.herokuapp.com/profile/\";\r\n    break;\r\n  default:\r\n    console.log(\"method should be either tuanHeroku, lienHeroku, or local\");\r\n    break;\r\n}\r\n\r\nexport {\r\n  REGISTER_URL,\r\n  SIGNIN_URL,\r\n  PROFILE_URL,\r\n  GETWORD_URL,\r\n  MEDIA_BASE_URL_SENTENCE,\r\n  MEDIA_BASE_URL_WORD,\r\n  MEDIA_BASE_URL_CHAR,\r\n  CHARSCORE_URL,\r\n  WORDSCORE_URL,\r\n  WORD_LINK,\r\n  TOFUGU_LINK,\r\n};\r\n","import { USER_INPUT } from \"./constants.js\";\r\n\r\nexport const typeAnswer = (text) => {\r\n  return {\r\n    type: USER_INPUT,\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const pressSpace = (context) => {\r\n  switch (context) {\r\n    case \"REQUEST_HINT\":\r\n      return {\r\n        type: \"SPACE_PRESS_FOR_HINT\",\r\n        time: Date.now(),\r\n      };\r\n    case \"CONTINUE_AFTER_ERROR\":\r\n      return {\r\n        type: \"SPACE_PRESS_TO_CONTINUE\",\r\n        time: Date.now(),\r\n      };\r\n    case \"CONTINUE_AFTER_COMPLETE\":\r\n      return {\r\n        type: \"SPACE_PRESS_TO_GO_NEXT\",\r\n        time: Date.now(),\r\n      };\r\n    default:\r\n      return {\r\n        type: \"SPACE_PRESS\",\r\n      };\r\n  }\r\n};\r\n\r\nexport const updateChar = (japchar, romaji) => {\r\n  return {\r\n    type: \"CHAR_UPDATE\",\r\n    currentJapChar: japchar,\r\n    currentRomaji: romaji,\r\n  };\r\n};\r\n\r\nexport const pressEnter = (time) => {\r\n  return {\r\n    type: \"ENTER_PRESS\",\r\n    time: time,\r\n  };\r\n};\r\n\r\nexport const typeWrongAnswer = (userChar, currentChar) => {\r\n  return {\r\n    type: \"WRONG_INPUT\",\r\n    userInput: userChar,\r\n    currentChar: currentChar,\r\n    time: Date.now(),\r\n  };\r\n};\r\n\r\nexport const completeWord = () => {\r\n  return {\r\n    type: \"COMPLETE_WORD\",\r\n    time: Date.now(), // when user complete last character Card\r\n  };\r\n};\r\n\r\nexport const updateWord = (word, romajiList) => {\r\n  const cardStateList = romajiList.map((item) => \"\");\r\n  return {\r\n    type: \"UPDATE_WORD\",\r\n    payload: word,\r\n    romajiList: romajiList,\r\n    cardStateList: cardStateList,\r\n  };\r\n};\r\n\r\nexport const completeChar = (timestamp, completionType) => {\r\n  return {\r\n    type: \"COMPLETE_CHAR\",\r\n    time: timestamp,\r\n    completionType: completionType,\r\n  };\r\n};\r\n\r\nexport const setNewWordTime = (time) => {\r\n  return {\r\n    type: \"SET_NEW_WORD_TIME\",\r\n    time: time,\r\n  };\r\n};\r\n\r\nexport const onAudioPlay = () => {\r\n  return {\r\n    type: \"PLAY_AUDIO\",\r\n  };\r\n};\r\n\r\nexport const onAudioPause = () => {\r\n  return {\r\n    type: \"PAUSE_AUDIO\",\r\n  };\r\n};\r\n\r\nexport const pressKey = (key) => {\r\n  return {\r\n    type: \"PRESS_KEY\",\r\n    payload: key,\r\n  };\r\n};\r\n\r\nexport const onCorrectChar = () => {\r\n  return {\r\n    type: \"INPUT_CORRECT_CHAR\",\r\n  };\r\n};\r\n\r\nexport const onIncorrectChar = () => {\r\n  return {\r\n    type: \"INPUT_INCORRECT_CHAR\",\r\n  };\r\n};\r\n","import React from \"react\";\nimport Char from \"../components/Char.js\";\nimport { Grid } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { setNewWordTime } from \"../actions\";\n\nconst mapStateToProps = (state) => {\n  return {\n    // charTimestamp: state.changeCardState.charTimestamp,\n    // keyPressed: state.changeInputBox.keyPressed,\n    indexCurrentCard: state.changeCardState.indexCurrentCard,\n    cardStateList: state.changeCardState.cardStateList,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setNewWordTime: (time) => {\n      dispatch(setNewWordTime(time));\n    },\n  };\n};\n\nclass CharList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dispatchTime: 0,\n    };\n  }\n\n  componentDidMount = () => {\n    this.props.setNewWordTime(Date.now());\n  };\n\n  componentDidUpdate = (prevProps) => {\n    if (\n      JSON.stringify(this.props.charsToRead) !==\n      JSON.stringify(prevProps.charsToRead)\n    ) {\n      this.props.setNewWordTime(Date.now());\n    }\n  };\n\n  setCardState = (idx) => {\n    const { indexCurrentCard, cardStateList } = this.props;\n    var className = \"\";\n    if (idx === indexCurrentCard) {\n      className = className.concat(` highlighted `);\n    }\n    var cardState = cardStateList[idx];\n    className = className.concat(` ${cardState} `);\n    return className;\n  };\n\n  render() {\n    const charsArrayDisplay = this.props.charsToRead.map((item, idx) => {\n      return (\n        <Grid item key={idx}>\n          <Char char={item.char} key={idx} cardState={this.setCardState(idx)} />\n        </Grid>\n      );\n    });\n\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing=\"1\"\n      >\n        {charsArrayDisplay}\n      </Grid>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CharList);\n","// Trie.js - super simple JS implementation\r\n// https://en.wikipedia.org/wiki/Trie\r\n// https://gist.github.com/tpae/72e1c54471e88b689f85ad2b3940a8f0\r\n\r\n// -----------------------------------------\r\n\r\nconst katakanaToRomaji = {\r\n  ア: \"a\",\r\n  イ: \"i\",\r\n  ウ: \"u\",\r\n  エ: \"e\",\r\n  オ: \"o\",\r\n  ン: \"nn\",\r\n  カ: \"ka\",\r\n  キ: \"ki\",\r\n  ク: \"ku\",\r\n  ケ: \"ke\",\r\n  コ: \"ko\",\r\n  サ: \"sa\",\r\n  シ: \"shi\",\r\n  ス: \"su\",\r\n  セ: \"se\",\r\n  ソ: \"so\",\r\n  タ: \"ta\",\r\n  チ: \"chi\",\r\n  ツ: \"tsu\",\r\n  テ: \"te\",\r\n  ト: \"to\",\r\n  ナ: \"na\",\r\n  ニ: \"ni\",\r\n  ヌ: \"nu\",\r\n  ネ: \"ne\",\r\n  ノ: \"no\",\r\n  ハ: \"ha\",\r\n  ヒ: \"hi\",\r\n  フ: \"fu\",\r\n  ヘ: \"he\",\r\n  ホ: \"ho\",\r\n  マ: \"ma\",\r\n  ミ: \"mi\",\r\n  ム: \"mu\",\r\n  メ: \"me\",\r\n  モ: \"mo\",\r\n  ヤ: \"ya\",\r\n  ユ: \"yu\",\r\n  ヨ: \"yo\",\r\n  ラ: \"ra\",\r\n  リ: \"ri\",\r\n  ル: \"ru\",\r\n  レ: \"re\",\r\n  ロ: \"ro\",\r\n  ワ: \"wa\",\r\n  ヲ: \"wo\",\r\n};\r\n\r\n// we start with the TrieNode\r\nfunction TrieNode(key) {\r\n  // the \"key\" value will be the character in sequence\r\n  this.key = key;\r\n\r\n  // we keep a reference to parent\r\n  this.parent = null;\r\n\r\n  // we have hash of children\r\n  this.children = {};\r\n\r\n  // check to see if the node is at the end\r\n  this.end = false;\r\n}\r\n\r\n// iterates through the parents to get the word.\r\n// time complexity: O(k), k = word length\r\nTrieNode.prototype.getWord = function () {\r\n  var output = [];\r\n  var node = this;\r\n\r\n  while (node !== null) {\r\n    output.unshift(node.key);\r\n    node = node.parent;\r\n  }\r\n\r\n  return output.join(\"\");\r\n};\r\n\r\n// -----------------------------------------\r\n\r\n// we implement Trie with just a simple root with null value.\r\nfunction Trie() {\r\n  this.root = new TrieNode(null);\r\n}\r\n\r\n// inserts a word into the trie.\r\n// time complexity: O(k), k = word length\r\nTrie.prototype.insert = function (word) {\r\n  var node = this.root; // we start at the root\r\n\r\n  // for every character in the word\r\n  for (var i = 0; i < word.length; i++) {\r\n    // check to see if character node exists in children.\r\n    if (!node.children[word[i]]) {\r\n      // if it doesn't exist, we then create it.\r\n      node.children[word[i]] = new TrieNode(word[i]);\r\n\r\n      // we also assign the parent to the child node.\r\n      node.children[word[i]].parent = node;\r\n    }\r\n\r\n    // proceed to the next depth in the trie.\r\n    node = node.children[word[i]];\r\n\r\n    // finally, we check to see if it's the last word.\r\n    if (i == word.length - 1) {\r\n      // if it is, we set the end flag to true.\r\n      node.end = true;\r\n    }\r\n  }\r\n};\r\n\r\n// check if it contains a whole word.\r\n// time complexity: O(k), k = word length\r\nTrie.prototype.contains = function (word) {\r\n  var node = this.root;\r\n\r\n  // for every character in the word\r\n  for (var i = 0; i < word.length; i++) {\r\n    // check to see if character node exists in children.\r\n    if (node.children[word[i]]) {\r\n      // if it exists, proceed to the next depth of the trie.\r\n      node = node.children[word[i]];\r\n    } else {\r\n      // doesn't exist, return false since it's not a valid word.\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // we finished going through all the words, but is it a whole word?\r\n  return node.end;\r\n};\r\n\r\n// returns every word with given prefix\r\n// time complexity: O(p + n), p = prefix length, n = number of child paths\r\nTrie.prototype.find = function (prefix) {\r\n  var node = this.root;\r\n  var output = [];\r\n\r\n  // for every character in the prefix\r\n  for (var i = 0; i < prefix.length; i++) {\r\n    // make sure prefix actually has words\r\n    if (node.children[prefix[i]]) {\r\n      node = node.children[prefix[i]];\r\n    } else {\r\n      // there's none. just return it.\r\n      return output;\r\n    }\r\n  }\r\n\r\n  // recursively find all words in the node\r\n  findAllWords(node, output);\r\n\r\n  return output;\r\n};\r\n\r\n// recursive function to find all words in the given node.\r\nfunction findAllWords(node, arr) {\r\n  // base case, if node is at a word, push to output\r\n  if (node.end) {\r\n    arr.unshift(node.getWord());\r\n  }\r\n\r\n  // iterate through each children, call recursive findAllWords\r\n  for (var child in node.children) {\r\n    findAllWords(node.children[child], arr);\r\n  }\r\n}\r\n\r\n// -----------------------------------------\r\n\r\n// instantiate our trie\r\n//   var trie = new Trie();\r\n\r\n//   // insert few values\r\n//   trie.insert(\"hello\");\r\n//   trie.insert(\"helium\");\r\n\r\n// check contains method\r\n//console.log(trie.contains(\"helium\"));  // true\r\n//console.log(trie.contains(\"kickass\")); // false\r\n\r\n// check find method\r\n//console.log(trie.find(\"hel\"));  // [ 'helium', 'hello' ]\r\n//console.log(trie.find(\"hell\")); // [ 'hello' ]\r\n\r\nclass SpellCheckerBuffer {\r\n  constructor(charAndRomaji, checkFunction) {\r\n    this.dict = charAndRomaji;\r\n    this.checkFunction = checkFunction;\r\n    this.buffer = \"\";\r\n    this.charTrie = new Trie();\r\n    Object.values(this.dict).forEach((element) => {\r\n      this.charTrie.insert(element);\r\n    });\r\n    //console.log(this.charTrie.find(\"\"));\r\n  }\r\n  checkInput(char) {\r\n    this.buffer += char;\r\n    if (this.charTrie.contains(this.buffer)) {\r\n      this.checkFunction(this.buffer);\r\n      this.buffer = \"\";\r\n    } else {\r\n      var pendingChars = this.charTrie.find(this.buffer);\r\n      if (!Array.isArray(pendingChars) || !pendingChars.length) {\r\n        this.checkFunction(this.buffer);\r\n        this.buffer = \"\";\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction isCorrect(char) {\r\n  if (Object.values(katakanaToRomaji).includes(char)) {\r\n    console.log(`${char} true`);\r\n  } else {\r\n    console.log(`${char} false`);\r\n  }\r\n}\r\n\r\nconst sp = new SpellCheckerBuffer(katakanaToRomaji, console.log);\r\nsp.checkInput(\"n\");\r\nsp.checkInput(\"i\");\r\nsp.checkInput(\"n\");\r\nsp.checkInput(\"a\");\r\nsp.checkInput(\"t\");\r\nsp.checkInput(\"s\");\r\nsp.checkInput(\"u\");\r\n\r\nexport default SpellCheckerBuffer;\r\n","const katakanaToRomaji = {\r\n  ア: \"a\",\r\n  イ: \"i\",\r\n  ウ: \"u\",\r\n  エ: \"e\",\r\n  オ: \"o\",\r\n  カ: \"ka\",\r\n  キ: \"ki\",\r\n  ク: \"ku\",\r\n  ケ: \"ke\",\r\n  コ: \"ko\",\r\n  サ: \"sa\",\r\n  シ: \"shi\",\r\n  ス: \"su\",\r\n  セ: \"se\",\r\n  ソ: \"so\",\r\n  タ: \"ta\",\r\n  チ: \"chi\",\r\n  ツ: \"tsu\",\r\n  テ: \"te\",\r\n  ト: \"to\",\r\n  ナ: \"na\",\r\n  ニ: \"ni\",\r\n  ヌ: \"nu\",\r\n  ネ: \"ne\",\r\n  ノ: \"no\",\r\n  ハ: \"ha\",\r\n  ヒ: \"hi\",\r\n  フ: \"fu\",\r\n  ヘ: \"he\",\r\n  ホ: \"ho\",\r\n  マ: \"ma\",\r\n  ミ: \"mi\",\r\n  ム: \"mu\",\r\n  メ: \"me\",\r\n  モ: \"mo\",\r\n  ヤ: \"ya\",\r\n  ユ: \"yu\",\r\n  ヨ: \"yo\",\r\n  ラ: \"ra\",\r\n  リ: \"ri\",\r\n  ル: \"ru\",\r\n  レ: \"re\",\r\n  ロ: \"ro\",\r\n  ワ: \"wa\",\r\n  ヲ: \"wo\",\r\n  ン: \"nn\",\r\n};\r\n\r\nconst katakanaHint = {\r\n  ア: {\r\n    romaji: \"a\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A2.jpg\",\r\n    shortHint: \"Find the capital 'A'\",\r\n  },\r\n  イ: {\r\n    romaji: \"i\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A4.jpg\",\r\n    shortHint: \"It looks like an <u>ea</u>gle (i)\",\r\n  },\r\n  ウ: {\r\n    romaji: \"u\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AB.jpg\",\r\n    shortHint: \"ウ looks like う (u)\",\r\n  },\r\n  エ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A8.jpg\",\r\n    shortHint:\r\n      \"Imagine this is the girders an <u>e</u> engineer would use to build buildings\",\r\n  },\r\n  オ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AA.jpg\",\r\n    shortHint:\r\n      'A dude flapping open his trench coat to flash you. \"<u>Oh</u> MY GOD!\" you say. ',\r\n  },\r\n  カ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AB.jpg\",\r\n    shortHint: \"It looks just like the Hiragana か\",\r\n  },\r\n  キ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AD.jpg\",\r\n    shortHint: \"A key (ki)\",\r\n  },\r\n  ク: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AF.jpg\",\r\n    shortHint: \"A long <u>coo</u>ks's (ku) hat\",\r\n  },\r\n  ケ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B1.jpg\",\r\n    shortHint: \"It looks like the letter <u>K</u> (ke)\",\r\n  },\r\n  コ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B3.jpg\",\r\n    shortHint: \"Two 90 degrees <u>co</u>rners (ko)\",\r\n  },\r\n  サ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B5.jpg\",\r\n    shortHint: \"Three <u>sa</u>rdines stacked on top of each other\",\r\n  },\r\n  シ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B7.jpg\",\r\n    shortHint: \"<u>She</u> has a very werid face (shi)\",\r\n  },\r\n  ス: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B9.jpg\",\r\n    shortHint: \"A hanger where you hang up your fancy <u>su</u>it (su)\",\r\n  },\r\n  セ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BB.jpg\",\r\n    shortHint: \"It looks like the Hiragana せ\",\r\n  },\r\n  ソ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BD.jpg\",\r\n    shortHint: \"One needle and a long thread which you use to <u>sew</u> (so)\",\r\n  },\r\n  タ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BF.jpg\",\r\n    shortHint: \"A <u>ti</u>dal wave racing across the sea (ta)\",\r\n  },\r\n  チ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%81.jpg\",\r\n    shortHint: \"A <u>chee</u>rleader doing a <u>chee</u>r (chi)\",\r\n  },\r\n  ツ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%84.jpg\",\r\n    shortHint: \"<u>Two</u> (tsu) needles\",\r\n  },\r\n  テ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%86.jpg\",\r\n    shortHint: \"A <u>te</u>lephone pole\",\r\n  },\r\n  ト: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%88.jpg\",\r\n    shortHint: \"A <u>to</u>tem pole\",\r\n  },\r\n  ナ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8A.jpg\",\r\n    shortHint: \"A majestic <u>na</u>rwhal\",\r\n  },\r\n  ニ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8B.jpg\",\r\n    shortHint: \"Two <u>nee</u>dles (ni) laying on their side\",\r\n  },\r\n  ヌ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8C.jpg\",\r\n    shortHint:\r\n      \"The chopsticks are grabbing onto some <u>noo</u>dles & pulling them out of a bowl. (nu)\",\r\n  },\r\n  ネ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8D.jpg\",\r\n    shortHint: \"A <u>ne</u>cromancer has summoned this zombie\",\r\n  },\r\n  ノ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8E.jpg\",\r\n    shortHint: \"A really long <u>no</u>se\",\r\n  },\r\n  ハ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8F.jpg\",\r\n    shortHint: \"A rice paddy <u>ha</u>t\",\r\n  },\r\n  ヒ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%92.jpg\",\r\n    shortHint: \"<u>He</u> (hi) has no head. <u>He</u> is reaching out to you.\",\r\n  },\r\n  フ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%95.jpg\",\r\n    shortHint: \"A <u>fu</u>nny looking owl\",\r\n  },\r\n  ヘ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%98.jpg\",\r\n    shortHint: \"This looks like the Hiragana へ\",\r\n  },\r\n  ホ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9B.jpg\",\r\n    shortHint: \"A <u>ho</u>ly cross\",\r\n  },\r\n  マ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9E.jpg\",\r\n    shortHint: \"Look at all those angles! Those lengths! All that <u>ma</u>th!\",\r\n  },\r\n  ミ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9F.jpg\",\r\n    shortHint: \"Three <u>mi</u>ssiles, flying towards you. Be careful!\",\r\n  },\r\n  ム: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A0.jpg\",\r\n    shortHint: \"It is shaped like a pile of poop. Cow poop. <u>Moo</u>. (mu)\",\r\n  },\r\n  メ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A1.jpg\",\r\n    shortHint: 'め <u>Me</u> is Japnese for \"eye\"',\r\n  },\r\n  モ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A2.jpg\",\r\n    shortHint: \"This looks like the Hiragana も\",\r\n  },\r\n  ヤ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A4.jpg\",\r\n    shortHint: \"This looks just like the Hiragana や\",\r\n  },\r\n  ユ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A6.jpg\",\r\n    shortHint: \"You (yu) have a hook for a hand\",\r\n  },\r\n  ヨ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A8.jpg\",\r\n    shortHint: \"A <u>yo</u>gurt containers\",\r\n  },\r\n  ラ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A9.jpg\",\r\n    shortHint: \"It is a <u>ra</u>ptor wearing sweet <u>ra</u>y-bans\",\r\n  },\r\n  リ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AA.jpg\",\r\n    shortHint: \"It looks like the Hiragana り\",\r\n  },\r\n  ル: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AB.jpg\",\r\n    shortHint:\r\n      \"There are two <u>rou</u>tes (ru) you can take. Route 1 & Route 2.\",\r\n  },\r\n  レ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AC.jpg\",\r\n    shortHint: \"Look at that beautiful <u>re</u>d hair that <u>Re</u>i has!\",\r\n  },\r\n  ロ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AD.jpg\",\r\n    shortHint:\r\n      \"This <u>ro</u>ad goes around in a square, never ending. What a terrible <u>ro</u>ad this is.\",\r\n  },\r\n  ワ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AF.jpg\",\r\n    shortHint:\r\n      \"You often begin your question with the word <u>wha</u>t (wa). <u>Wha</u>t are you doing?\",\r\n  },\r\n  ヲ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%B2.jpg\",\r\n    shortHint: \"A dog <u>wo</u>ofing (wo) so hard its tongue is flying out\",\r\n  },\r\n  ン: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%B3.jpg\",\r\n    shortHint: \"This guy only has one eye. <u>N</u>oooo!\",\r\n  },\r\n};\r\n\r\nexport { katakanaToRomaji, katakanaHint };\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport { Input } from \"@material-ui/core\";\nimport SpellCheckerBuffer from \"../inputChecker\";\nimport { katakanaToRomaji } from \"../jap-char\";\nimport {\n  pressKey,\n  onCorrectChar,\n  onIncorrectChar,\n  typeAnswer,\n  pressSpace,\n  typeWrongAnswer,\n  completeChar,\n  pressEnter,\n  updateChar,\n  updateWord,\n  completeWord,\n} from \"../actions\";\n\nconst mapStatestoProps = (state) => {\n  return {\n    indexCurrentCard: state.changeCardState.indexCurrentCard,\n    romajiList: state.changeCardState.romajiList,\n    cardStateList: state.changeCardState.cardStateList,\n    curWrongChar: state.changeCardState.curWrongChar,\n    onIncorrectCard: state.changeCardState.onIncorrectCard,\n    wordCompleted: state.changeCardState.wordCompleted,\n    onHintedCard: state.changeCardState.onHintedCard,\n    currentRomaji: state.changeCardState.currentRomaji,\n    currentWord: state.changeCardState.currentWord,\n    charTimestamp: state.changeCardState.charTimestamp,\n    audioIsPlaying: state.changeGeneralState.audioIsPlaying,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onInputBoxChange: (event) => {\n      dispatch(typeAnswer(event.target.value));\n    },\n    onKeyPress: (key) => {\n      dispatch(pressKey(key));\n    },\n    onCorrectChar: () => {\n      dispatch(onCorrectChar());\n    },\n    onIncorrectChar: () => {\n      dispatch(onIncorrectChar());\n    },\n    onSpacePress: (context) => {\n      dispatch(pressSpace(context));\n    },\n    onWrongInput: (userChar, currentChar) => {\n      dispatch(typeWrongAnswer(userChar, currentChar));\n    },\n    onSpacePress: (context) => {\n      dispatch(pressSpace(context));\n    },\n    onCompleteChar: (time, type) => {\n      dispatch(completeChar(time, type));\n    },\n    onEnterPress: (time) => {\n      dispatch(pressEnter(time));\n    },\n    setCurrentChar: (japchar, romaji) => {\n      dispatch(updateChar(japchar, romaji));\n    },\n    updateWord: (word, romajiList) => {\n      dispatch(updateWord(word, romajiList));\n    },\n    onWordCompletion: () => {\n      dispatch(completeWord());\n    },\n  };\n};\n\nclass CharInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formRef = React.createRef();\n    this.sp = new SpellCheckerBuffer(katakanaToRomaji, this.checkFunction);\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentChar,\n      romajiList,\n      indexCurrentCard,\n      currentWord,\n    } = this.props;\n\n    const curRomaji = romajiList[indexCurrentCard];\n    const curKana = currentWord[indexCurrentCard];\n    setCurrentChar(curKana, curRomaji);\n  }\n\n  convertTimeToScoreDelta = (charTimestamp) => {\n    return charTimestamp.map((item) => {\n      var score_delta = 20000 / item.time;\n      if (item.type === \"hinted\") {\n        score_delta *= -1;\n      }\n      return {\n        char: item.char,\n        score_delta: score_delta,\n      };\n    });\n  };\n\n  checkFunction = (char) => {\n    const {\n      romajiList,\n      indexCurrentCard,\n      onCorrectChar,\n      onWrongInput,\n      onWordCompletion,\n      currentWord,\n      setCurrentChar,\n      onCompleteChar,\n    } = this.props;\n\n    if (char === romajiList[indexCurrentCard]) {\n      onCorrectChar();\n      onCompleteChar(Date.now(), \"correct\");\n      const newRomaji = romajiList[indexCurrentCard + 1];\n      const newKana = currentWord[indexCurrentCard + 1];\n      setCurrentChar(newKana, newRomaji);\n      if (indexCurrentCard === romajiList.length - 1) {\n        onWordCompletion();\n      }\n    } else {\n      // onIncorrectChar();\n      onWrongInput(char, romajiList[indexCurrentCard]);\n    }\n  };\n\n  onKeyDown = (event) => {\n    const {\n      onIncorrectCard,\n      curWrongChar,\n      onInputBoxChange,\n      onSpacePress,\n      onCompleteChar,\n      wordCompleted,\n      onHintedCard,\n      currentRomaji,\n      onEnterPress,\n      currentWord,\n      romajiList,\n      indexCurrentCard,\n      setCurrentChar,\n      charTimestamp,\n      updateWord,\n      updateCharScore,\n      updateWordScore,\n      onWordCompletion,\n      audioIsPlaying,\n      user_uid,\n      cardStateList,\n    } = this.props;\n\n    // disable input\n    if (audioIsPlaying) {\n      event.preventDefault();\n      return;\n    }\n\n    if (wordCompleted) {\n      event.preventDefault();\n    }\n    var lastCardState = cardStateList[cardStateList.length - 1];\n\n    if (\n      indexCurrentCard === romajiList.length - 1 &&\n      (lastCardState === \"correct\" || lastCardState === \"hinted\")\n    ) {\n      onWordCompletion();\n    }\n\n    // if user types a-z keys\n    if (\n      event.which >= 65 &&\n      event.which <= 90 &&\n      !onIncorrectCard &&\n      !wordCompleted &&\n      !onHintedCard\n    ) {\n      var key = String.fromCharCode(event.which).toLowerCase();\n      this.props.onKeyPress(key);\n      this.sp.checkInput(key);\n    } else {\n      event.preventDefault();\n\n      // handle SPACE press\n      if (event.which === 32) {\n        if (onIncorrectCard) {\n          // continue after error\n          event.target.value = event.target.value.slice(\n            0,\n            -curWrongChar.length\n          );\n          onInputBoxChange(event);\n          onSpacePress(\"CONTINUE_AFTER_ERROR\");\n        } else if (!onIncorrectCard && !onHintedCard && !wordCompleted) {\n          // ask for hint\n          onSpacePress(\"REQUEST_HINT\");\n          onCompleteChar(Date.now(), \"hinted\");\n        } else if (wordCompleted) {\n          // move on to next word\n          updateWord(\"\", [\"\"]);\n          const scoreDeltaList = this.convertTimeToScoreDelta(charTimestamp);\n          updateCharScore(user_uid, scoreDeltaList);\n          updateWordScore(user_uid, currentWord);\n\n          onSpacePress(\"CONTINUE_AFTER_COMPLETE\");\n\n          event.target.value = \"\";\n          onInputBoxChange(event);\n          const newRomaji = romajiList[0];\n          const newKana = currentWord[0];\n          setCurrentChar(newKana, newRomaji);\n        }\n      }\n\n      // handle ENTER press\n      if (event.which === 13) {\n        if (onHintedCard) {\n          if (indexCurrentCard === romajiList.length - 1) {\n            onWordCompletion();\n          }\n          // autofill correct answer\n          event.target.value = event.target.value.concat(currentRomaji);\n          onInputBoxChange(event);\n          onEnterPress(Date.now());\n\n          const curRomaji = romajiList[indexCurrentCard + 1];\n          const curKana = currentWord[indexCurrentCard + 1];\n          setCurrentChar(curKana, curRomaji);\n        }\n      }\n    }\n  };\n\n  render() {\n    return (\n      <form>\n        <Input\n          placeholder=\"Start typing here...\"\n          inputProps={{ \"aria-label\": \"description\" }}\n          onChange={this.props.onInputBoxChange}\n          onKeyDown={this.onKeyDown}\n          autoFocus\n          inputRef={this.formRef}\n          onPaste={(event) => {\n            event.preventDefault();\n          }}\n        />\n      </form>\n    );\n  }\n}\n\nexport default connect(mapStatestoProps, mapDispatchToProps, null, {\n  forwardRef: true,\n})(CharInput);\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst NavBar = ({ onRouteChange }) => {\n  const classes = useStyles();\n\n  return (\n    <div className = {classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title} align=\"left\">\n            Japanese vs. English words\n          </Typography>\n          <Button\n            color=\"inherit\"\n            onClick={() => onRouteChange(\"signin\")}\n          >\n            Signout\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\nexport default NavBar;\n","// Taken from this https://stackoverflow.com/questions/47686345/playing-sound-in-reactjs\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { onAudioPlay, onAudioPause } from \"../actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    audioIsPlaying: state.changeGeneralState.audioIsPlaying,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAudioPlay: () => {\r\n      dispatch(onAudioPlay());\r\n    },\r\n    onAudioPause: () => {\r\n      dispatch(onAudioPause());\r\n    },\r\n  };\r\n};\r\n\r\nclass Music extends React.Component {\r\n  state = {\r\n    play: false,\r\n    audio: new Audio(`${this.props.audioLink}`),\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.state.audio.addEventListener(\"ended\", () => {\r\n      this.setState({ play: false });\r\n      if (!this.props.noStoreUpdateWhenEnded) {\r\n        this.props.onAudioPause();\r\n      }\r\n    });\r\n    setTimeout(() => {\r\n      this.state.audio.play();\r\n      this.props.onAudioPlay();\r\n    }, this.props.delay);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.state.audio.removeEventListener(\"ended\", () =>\r\n      this.setState({ play: false })\r\n    );\r\n  }\r\n\r\n  togglePlay = () => {\r\n    this.setState({ play: !this.state.play }, () => {\r\n      if (this.state.play) {\r\n        this.state.audio.play();\r\n        this.props.onAudioPlay();\r\n      } else {\r\n        this.state.audio.pause();\r\n        this.props.onAudioPause();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.togglePlay}>\r\n          {this.state.play ? \"Pause Audio\" : \"Play Audio\"}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Music);\r\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Music from \"./Music\";\nimport { katakanaToRomaji, katakanaHint } from \"../jap-char\";\nimport { MEDIA_BASE_URL_CHAR } from \"../constants\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 320,\n  },\n  media: {\n    height: 200,\n  },\n});\n\nconst parseoutUnderlineText = (sentence) => {\n  // replace <b> and </b> with comma\n  sentence = sentence.replace(/<\\/?u>/g, \",\");\n  return sentence.split(\",\");\n};\n\nexport default function Hint({ currentHintedChar }) {\n  const classes = useStyles();\n  const romaji = katakanaToRomaji[currentHintedChar];\n  const sentenceFragments = parseoutUnderlineText(\n    katakanaHint[currentHintedChar].shortHint\n  );\n  const modified_romaji = romaji === \"nn\" ? \"n\" : romaji;\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          component=\"img\"\n          alt=\"Hint for character\"\n          image={katakanaHint[currentHintedChar].imageLink}\n          title=\"Hint for character\"\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {sentenceFragments[0]}\n            <u>{sentenceFragments[1]}</u>\n            {sentenceFragments[2]}\n          </Typography>\n          <br></br>\n          <Music\n            audioLink={MEDIA_BASE_URL_CHAR + modified_romaji + \".mp3\"}\n            delay={0}\n            noStoreUpdateWhenEnded={false}\n          />\n        </CardContent>\n      </CardActionArea>\n      {/* <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions> */}\n    </Card>\n  );\n}\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { SIGNIN_URL } from \"../constants\";\r\nimport { sizing } from \"@material-ui/system\";\r\n\r\nconst useStyles = (theme) => ({\r\n  container: {\r\n    fontFamily: \"Roboto\",\r\n    backfround: \"white\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper2: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 500,\r\n      height: 450,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\",\r\n      emailErrorMsg: \"\",\r\n      passwordErrorMsg: \"\",\r\n    };\r\n  }\r\n\r\n  onEmailInput = (event) => {\r\n    this.setState({ signInEmail: event.target.value, emailErrorMsg: \"\" });\r\n  };\r\n\r\n  onPasswordInput = (event) => {\r\n    this.setState({ signInPassword: event.target.value, passwordErrorMsg: \"\" });\r\n  };\r\n\r\n  sendSigninInfoToBackend = () => {\r\n    const { signInEmail, signInPassword } = this.state;\r\n\r\n    fetch(SIGNIN_URL, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: signInEmail,\r\n        password: signInPassword,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (Object.keys(data).length === 4) {\r\n          this.props.loadUser(data);\r\n          this.props.onRouteChange(\"home\");\r\n          this.setState({\r\n            emailErrorMsg: \"\",\r\n            passwordErrorMsg: \"\",\r\n          });\r\n        } else {\r\n          // there is an error loggin in\r\n          console.log(\"Login Failed\", data);\r\n          if (data === \"email is not yet registered\") {\r\n            this.setState({ emailErrorMsg: data });\r\n          } else if (data === \"incorrect password\") {\r\n            this.setState({\r\n              passwordErrorMsg: data,\r\n              emailErrorMsg: \"\",\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error!\", error);\r\n      });\r\n  };\r\n\r\n  onSignIn = (event) => {\r\n    event.preventDefault();\r\n    const { signInEmail, signInPassword } = this.state;\r\n\r\n    // check that fields are not empty\r\n    if (!signInEmail) {\r\n      this.setState({ emailErrorMsg: \"please fill out your email\" });\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n    if (!signInPassword) {\r\n      this.setState({ passwordErrorMsg: \"please fill out your password\" });\r\n    } else {\r\n      this.setState({ passwordErrorMsg: \"\" });\r\n    }\r\n\r\n    if (signInEmail && signInPassword) {\r\n      this.sendSigninInfoToBackend();\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Paper className={classes.paper2} elevation={3}>\r\n        <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <form className={classes.form} noValidate>\r\n              <TextField\r\n                error={this.state.emailErrorMsg}\r\n                helperText={this.state.emailErrorMsg}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onChange={this.onEmailInput}\r\n              />\r\n              <TextField\r\n                error={this.state.passwordErrorMsg}\r\n                helperText={this.state.passwordErrorMsg}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={this.onPasswordInput}\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={this.onSignIn}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n              >\r\n                <Grid item xs>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    {\"Forgot password?\"}\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link\r\n                    component=\"button\"\r\n                    variant=\"body2\"\r\n                    onClick={() => this.props.onRouteChange(\"register\")}\r\n                  >\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Signin);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { REGISTER_URL } from \"../constants\";\r\n\r\nconst useStyles = (theme) => ({\r\n  container: {\r\n    fontFamily: \"Roboto\",\r\n    backfround: \"white\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper2: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 500,\r\n      height: 450,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      nameError: false,\r\n      emailError: false,\r\n      passwordError: false,\r\n      nameErrorMsg: \"\",\r\n      emailErrorMsg: \"\",\r\n      passwordErrorMsg: \"\",\r\n    };\r\n  }\r\n\r\n  validateEmail(email) {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  onNameInput = (event) => {\r\n    this.setState({ name: event.target.value, nameErrorMsg: \"\" });\r\n  };\r\n\r\n  onEmailInput = (event) => {\r\n    this.setState({ email: event.target.value, emailErrorMsg: \"\" });\r\n  };\r\n\r\n  onPasswordInput = (event) => {\r\n    this.setState({ password: event.target.value, passwordErrorMsg: \"\" });\r\n  };\r\n\r\n  sendFormDataToBackEnd = () => {\r\n    const { name, email, password } = this.state;\r\n\r\n    fetch(REGISTER_URL, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (Object.keys(data).length === 4) {\r\n          this.setState({ emailErrorMsg: \"\" });\r\n          this.props.loadUser(data);\r\n          this.props.onRouteChange(\"home\");\r\n        } else {\r\n          // if user already exist\r\n          this.setState({ emailErrorMsg: data });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error!\", error);\r\n      });\r\n  };\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { name, email, password } = this.state;\r\n\r\n    if (!name) {\r\n      this.setState({ nameErrorMsg: \"please fill out your name\" });\r\n    } else {\r\n      this.setState({ nameErrorMsg: \"\" });\r\n    }\r\n    if (!email) {\r\n      this.setState({ emailErrorMsg: \"please fill out your email\" });\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n    if (!password) {\r\n      this.setState({ passwordErrorMsg: \"please fill out your password\" });\r\n    } else {\r\n      this.setState({ passwordErrorMsg: \"\" });\r\n    }\r\n\r\n    if (!this.validateEmail(email)) {\r\n      this.setState({ emailErrorMsg: \"please enter a valid email address\" });\r\n      return;\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n\r\n    if (name && password && email) {\r\n      this.sendFormDataToBackEnd();\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { nameErrorMsg, emailErrorMsg, passwordErrorMsg } = this.state;\r\n    return (\r\n      <Paper className={classes.paper2}>\r\n        <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Register\r\n            </Typography>\r\n            <form className={classes.form} noValidate>\r\n              <TextField\r\n                error={nameErrorMsg}\r\n                helperText={nameErrorMsg}\r\n                variant=\"outlined\"\r\n                id=\"name\"\r\n                label=\"Your Name\"\r\n                autoFocus\r\n                required\r\n                fullWidth\r\n                onChange={this.onNameInput}\r\n              />\r\n              <TextField\r\n                error={emailErrorMsg}\r\n                helperText={emailErrorMsg}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={this.onEmailInput}\r\n              />\r\n              <TextField\r\n                error={passwordErrorMsg}\r\n                helperText={passwordErrorMsg}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={this.onPasswordInput}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={this.onFormSubmit}\r\n              >\r\n                Register\r\n              </Button>\r\n              <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <Link\r\n                    component=\"button\"\r\n                    variant=\"body2\"\r\n                    onClick={() => this.props.onRouteChange(\"signin\")}\r\n                  >\r\n                    {\"Already registered? Sign In\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Register);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Music from \"./Music\";\r\nimport { MEDIA_BASE_URL_SENTENCE, MEDIA_BASE_URL_WORD } from \"../constants\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nconst parseoutBoldText = (sentence) => {\r\n  // replace <b> and </b> with comma\r\n  sentence = sentence.replace(/<\\/?b>/g, \",\");\r\n  return sentence.split(\",\");\r\n};\r\n\r\nexport default function OutlinedCard({ wordInfo, word_audio_duration }) {\r\n  const classes = useStyles();\r\n\r\n  var el = document.createElement(\"html\");\r\n  el.innerHTML = \"<b>bolded text</b>\";\r\n  const sentenceSegments = parseoutBoldText(wordInfo.sentence_expression);\r\n\r\n  const parseAudio = (audio_string) => {\r\n    return audio_string.slice(7, audio_string.length - 1);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          Word Meaning\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {wordInfo.vocab_meaning} ({wordInfo.vocab_pos})\r\n          <Music\r\n            audioLink={`${MEDIA_BASE_URL_WORD}${parseAudio(\r\n              wordInfo.vocab_sound_local\r\n            )}`}\r\n            noStoreUpdateWhenEnded={true}\r\n          />\r\n        </Typography>\r\n        <br></br>\r\n\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          Sample Sentence\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {sentenceSegments[0]}\r\n          <b>\r\n            <u>{sentenceSegments[1]}</u>\r\n          </b>\r\n          {sentenceSegments[2]}\r\n          <Music\r\n            audioLink={`${MEDIA_BASE_URL_SENTENCE}${parseAudio(\r\n              wordInfo.sentence_sound_local\r\n            )}`}\r\n            delay={word_audio_duration * 1000 + 500}\r\n          />\r\n        </Typography>\r\n        <br></br>\r\n\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          Sentence Meaning\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {wordInfo.sentence_meaning}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","// https://stackoverflow.com/questions/32553158/detect-click-outside-react-component\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { isCompositeComponent } from \"react-dom/test-utils\";\r\n\r\nclass OutsideAlerter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  };\r\n\r\n  setWrapperRef = (node) => {\r\n    // console.log(\"setWrapperRef\", node);\r\n    // console.log(\"this\", this);\r\n    this.wrapperRef = node;\r\n  };\r\n\r\n  handleClickOutside = (event) => {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      // for some reason, need setTimeout to work, even if 0 delay\r\n      setTimeout(() => {\r\n        this.props.focusInputBox();\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <div ref={this.setWrapperRef}>{this.props.children}</div>;\r\n  }\r\n}\r\n\r\nOutsideAlerter.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default OutsideAlerter;\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CharList from \"./CharList.js\";\nimport CharInput from \"./CharInput\";\nimport NavBar from \"../components/NavBar\";\nimport Hint from \"../components/Hint\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { katakanaToRomaji } from \"../jap-char.js\";\nimport Signin from \"../components/Signin\";\nimport Register from \"../components/Register\";\nimport WordCard from \"../components/WordCard\";\nimport OutsideAlerter from \"../components/OutsideAlerter\";\nimport \"./App.css\";\nimport { updateChar, updateWord } from \"../actions\";\nimport {\n  GETWORD_URL,\n  CHARSCORE_URL,\n  WORDSCORE_URL,\n  TOFUGU_LINK,\n  WORD_LINK,\n  MEDIA_BASE_URL_WORD,\n} from \"../constants\";\n\nconst mapStateToProps = (state) => {\n  return {\n    currentJapChar: state.changeCardState.currentJapChar,\n    onIncorrectCard: state.changeCardState.onIncorrectCard,\n    curWrongChar: state.changeCardState.curWrongChar,\n    onHintedCard: state.changeCardState.onHintedCard,\n    wordCompleted: state.changeCardState.wordCompleted,\n    currentWord: state.changeCardState.currentWord,\n    charTimestamp: state.changeCardState.charTimestamp,\n    audioIsPlaying: state.changeGeneralState.audioIsPlaying,\n    indexCurrentCard: state.changeCardState.indexCurrentCard,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCurrentChar: (japchar, romaji) => {\n      dispatch(updateChar(japchar, romaji));\n    },\n    updateWord: (word, romajiList) => {\n      dispatch(updateWord(word, romajiList));\n    },\n  };\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: \"signin\",\n      userInfo: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        joined: \"\",\n      },\n      currentWordInfo: null,\n    };\n    this.charInputRef = React.createRef();\n  }\n\n  onRouteChange = (route) => {\n    this.setState({ route: route });\n  };\n\n  parseJapaneseWord = (word) => {\n    var charsToRead = [];\n    for (const c of word) {\n      var c_romaji = katakanaToRomaji[c] || \"??\";\n      charsToRead.push({ char: c, romaji: c_romaji });\n    }\n    return charsToRead;\n  };\n\n  convertTimeToScoreDelta = (charTimestamp) => {\n    return charTimestamp.map((item) => {\n      var score_delta = 20000 / item.time;\n      if (item.type === \"hinted\") {\n        score_delta *= -1;\n      }\n      return {\n        char: item.char,\n        score_delta: score_delta,\n      };\n    });\n  };\n\n  updateCharScore = (user_uid, scoreDeltaList) => {\n    fetch(CHARSCORE_URL, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_uid: user_uid,\n        charScoreDeltaList: scoreDeltaList,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"Update Char Score:\", data);\n      })\n      .catch((error) => {\n        console.log(\"Failed to update char score\", error);\n      });\n  };\n\n  updateWordScore = (user_uid, word) => {\n    fetch(WORDSCORE_URL, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_uid: user_uid,\n        word: word,\n        unix_time: this.state.currentWord_unix_time,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"Update Word Score:\", data);\n        // once score is updated, request new word\n        this.requestNewWord();\n      })\n      .catch((error) => {\n        console.log(\"Failed to update word score\", error);\n      });\n  };\n\n  parseAudio = (audio_string) => {\n    return audio_string.slice(7, audio_string.length - 1);\n  };\n\n  requestNewWord = () => {\n    const { setCurrentChar, indexCurrentCard, updateWord } = this.props;\n    var romajiList = [];\n\n    fetch(GETWORD_URL, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_uid: this.state.userInfo.id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((word) => {\n        var unix_time = Date.now();\n        romajiList = this.parseJapaneseWord(word.vocab_kana).map(\n          (item) => item.romaji\n        );\n        updateWord(word.vocab_kana, romajiList);\n        const curRomaji = romajiList[indexCurrentCard];\n        const curKana = word.vocab_kana.charAt(indexCurrentCard);\n        setCurrentChar(curKana, curRomaji);\n\n        this.setState({ currentWordInfo: word });\n        this.setState({ currentWord_unix_time: unix_time });\n        const word_audio = new Audio(\n          `${MEDIA_BASE_URL_WORD}${this.parseAudio(word.vocab_sound_local)}`\n        );\n        word_audio.addEventListener(\"loadedmetadata\", (event) => {\n          this.setState({\n            word_audio_duration: event.target.duration,\n          });\n        });\n        // console.log(\n        //   `Request new word: ${word.vocab_kana} at time ${unix_time}`\n        // );\n        console.log(\n          \"CURRENT WORD CHEAT\",\n          this.parseJapaneseWord(word.vocab_kana)\n        );\n      })\n      .catch((err) => {\n        console.log(\"Error in getting next word\", err);\n      });\n  };\n\n  loadUser = (user) => {\n    const { user_uid, name, email, joined } = user;\n    this.setState((prevState) => {\n      let userInfo = { ...prevState.userInfo };\n      userInfo.name = name;\n      userInfo.id = user_uid;\n      userInfo.email = email;\n      userInfo.joined = joined;\n      return { userInfo };\n    });\n    console.log(\"userInfo\", this.state.userInfo);\n    this.requestNewWord();\n  };\n\n  focusInputBox = () => {\n    this.charInputRef.current.formRef.current.focus();\n  };\n\n  showHint = () => {\n    if (this.props.onHintedCard) {\n      return <Hint currentHintedChar={this.props.currentJapChar} />;\n    }\n  };\n\n  displayWordInfo = () => {\n    if (this.props.wordCompleted) {\n      return (\n        <WordCard\n          wordInfo={this.state.currentWordInfo}\n          word_audio_duration={this.state.word_audio_duration}\n        />\n      );\n    }\n  };\n\n  displayMessage = () => {\n    const {\n      onIncorrectCard,\n      curWrongChar,\n      onHintedCard,\n      wordCompleted,\n      audioIsPlaying,\n    } = this.props;\n\n    if (onIncorrectCard) {\n      return (\n        <div>\n          <p>{`This character is not \"${curWrongChar}\"`}</p>\n          <p>press SPACE to try again</p>\n        </div>\n      );\n    } else if (onHintedCard && !audioIsPlaying) {\n      return <p>press ENTER to continue</p>;\n    } else if (wordCompleted && !audioIsPlaying) {\n      return <p>press SPACE to continue</p>;\n    } else if (!onHintedCard && !wordCompleted) {\n      return <p>You can press SPACE for hint</p>;\n    } else {\n      return <p></p>;\n    }\n  };\n\n  renderRoute = (route) => {\n    switch (route) {\n      case \"signin\":\n        return (\n          <Signin onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n        );\n      case \"register\":\n        return (\n          <Register\n            onRouteChange={this.onRouteChange}\n            loadUser={this.loadUser}\n          />\n        );\n      case \"home\":\n        const { currentWord } = this.props;\n\n        return (\n          <div>\n            <NavBar onRouteChange={this.onRouteChange} />\n            <div className=\"tmw5 center bg-white br3 pa1 ma1 ba b--black-10 o-40 tl\">\n              <Paper elevation={0} />\n              <p>Welcome, {this.state.userInfo.name}! </p>\n              <ul>\n                <li>\n                  Press SPACE to learn the character in the highlighted card\n                </li>\n                <li>\n                  Type the character as fast as you can if you've already known\n                  the character\n                </li>\n              </ul>\n            </div>\n\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Paper elevation={0} />\n              <OutsideAlerter focusInputBox={this.focusInputBox}>\n                <CharInput\n                  updateCharScore={this.updateCharScore}\n                  updateWordScore={this.updateWordScore}\n                  user_uid={this.state.userInfo.id}\n                  ref={this.charInputRef}\n                />\n              </OutsideAlerter>\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CharList charsToRead={this.parseJapaneseWord(currentWord)} />\n                </Grid>\n                <div>{this.displayMessage()}</div>\n                <Grid item>\n                  <Paper elevation={1} />\n                  {this.showHint()}\n                </Grid>\n                <div>{this.displayWordInfo()}</div>\n              </Grid>\n            </Grid>\n            <footer id=\"footer\">\n              <p>\n                Mnemonics taken from <a href={TOFUGU_LINK}>tofugu.com</a>\n              </p>\n              <p>\n                Japanese words taken from{\" \"}\n                <a href={WORD_LINK}>reddit.com/r/LearnJapanese</a>\n              </p>\n            </footer>\n          </div>\n        );\n      default:\n        return <div>Default</div>;\n    }\n  };\n\n  render() {\n    return <div className=\"tc\">{this.renderRoute(this.state.route)}</div>;\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { USER_INPUT } from \"./constants\";\r\n// import update from \"react-addons-update\";\r\n\r\nconst initialInputBox = {\r\n  inputBox: \"\",\r\n  keyPressed: \"\",\r\n};\r\n\r\nconst initialGeneralState = {\r\n  audioIsPlaying: false,\r\n};\r\n\r\nconst initialCardState = {\r\n  currentJapChar: \"コ\",\r\n  currentRomaji: \"\",\r\n  hintedCharList: [],\r\n  wrongCharList: {},\r\n  onIncorrectCard: false,\r\n  curWrongChar: \"\",\r\n  onHintedCard: false,\r\n  wordCompleted: false,\r\n  currentWord: \"\",\r\n  prevTimestamp: null,\r\n  charTimestamp: [],\r\n  allCharTimestamp: [],\r\n  romajiList: [],\r\n  indexCurrentCard: 0,\r\n  cardStateList: [],\r\n};\r\n\r\nexport const changeGeneralState = (\r\n  state = initialGeneralState,\r\n  action = {}\r\n) => {\r\n  switch (action.type) {\r\n    case \"PLAY_AUDIO\":\r\n      return { ...state, audioIsPlaying: true };\r\n    case \"PAUSE_AUDIO\":\r\n      return { ...state, audioIsPlaying: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const changeInputBox = (state = initialInputBox, action = {}) => {\r\n  switch (action.type) {\r\n    case USER_INPUT:\r\n      return { ...state, inputBox: action.payload };\r\n    case \"PRESS_KEY\":\r\n      return { ...state, keyPressed: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const changeCardState = (state = initialCardState, action = {}) => {\r\n  switch (action.type) {\r\n    case \"CHAR_UPDATE\":\r\n      return {\r\n        ...state,\r\n        currentJapChar: action.currentJapChar,\r\n        currentRomaji: action.currentRomaji,\r\n      };\r\n    case \"ENTER_PRESS\":\r\n      state.cardStateList[state.indexCurrentCard] = \"hinted\";\r\n      return {\r\n        ...state,\r\n        hintedCharList: [...state.hintedCharList, state.currentRomaji],\r\n        onHintedCard: false,\r\n        prevTimestamp: action.time,\r\n        indexCurrentCard: state.indexCurrentCard + 1,\r\n      };\r\n    case \"WRONG_INPUT\":\r\n      state.wrongCharList[action.currentChar] = action.userInput;\r\n      state.cardStateList[state.indexCurrentCard] = \"incorrect\";\r\n      return {\r\n        ...state,\r\n        onIncorrectCard: true,\r\n        curWrongChar: action.userInput,\r\n      };\r\n    case \"SPACE_PRESS_TO_CONTINUE\":\r\n      state.cardStateList[state.indexCurrentCard] = \"\";\r\n      return { ...state, onIncorrectCard: false };\r\n    case \"SPACE_PRESS_FOR_HINT\":\r\n      return { ...state, onHintedCard: true };\r\n    case \"SPACE_PRESS_TO_GO_NEXT\":\r\n      return {\r\n        ...state,\r\n        wordCompleted: false,\r\n        charTimestamp: [],\r\n        allCharTimestamp: [...state.allCharTimestamp, state.charTimestamp],\r\n        prevTimestamp: action.time,\r\n        hintedCharList: [],\r\n      };\r\n    case \"COMPLETE_WORD\":\r\n      return { ...state, wordCompleted: true };\r\n    case \"UPDATE_WORD\":\r\n      return {\r\n        ...state,\r\n        currentWord: action.payload,\r\n        romajiList: action.romajiList,\r\n        cardStateList: action.cardStateList,\r\n        indexCurrentCard: 0,\r\n      };\r\n    case \"COMPLETE_CHAR\":\r\n      const newTimestamp = {\r\n        char: state.currentJapChar,\r\n        time: action.time - state.prevTimestamp,\r\n        type: action.completionType,\r\n      };\r\n      console.log(\"TIME STAMP\", newTimestamp);\r\n      return {\r\n        ...state,\r\n        charTimestamp: [...state.charTimestamp, newTimestamp],\r\n        prevTimestamp: action.time,\r\n      };\r\n    case \"SET_NEW_WORD_TIME\":\r\n      return { ...state, prevTimestamp: action.time };\r\n    case \"INPUT_CORRECT_CHAR\":\r\n      // state.cardStateList[state.indexCurrentCard] = \"correct\";\r\n      return {\r\n        ...state,\r\n        indexCurrentCard: state.indexCurrentCard + 1,\r\n        cardStateList: state.cardStateList.map((item, idx) =>\r\n          idx === state.indexCurrentCard ? \"correct\" : item\r\n        ),\r\n      };\r\n    case \"INPUT_INCORRECT_CHAR\":\r\n      // state.cardStateList[state.indexCurrentCard] = \"incorrect\";\r\n      return {\r\n        ...state,\r\n        cardStateList: state.cardStateList.map((item, idx) =>\r\n          idx === state.indexCurrentCard ? \"incorrect\" : item\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\nimport App from \"./containers/App.js\";\nimport {\n  changeGeneralState,\n  changeInputBox,\n  changeCardState,\n} from \"./reducers\";\n//import \"typeface-roboto\";\n\nconst rootReducer = combineReducers({\n  changeGeneralState,\n  changeInputBox,\n  changeCardState,\n});\nconst logger = createLogger();\n\nconst store = createStore(rootReducer, applyMiddleware(logger));\n// const store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}