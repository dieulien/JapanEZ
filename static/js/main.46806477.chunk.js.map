{"version":3,"sources":["serviceWorker.js","components/Char.js","constants.js","actions.js","components/CharList.js","components/CharInput.js","components/NavBar.js","components/Music.js","jap-char.js","components/Hint.js","components/Signin.js","components/Register.js","components/WordCard.js","containers/App.js","reducers.js","index.js"],"names":["Boolean","window","location","hostname","match","Char","className","this","props","cardState","char","React","Component","REGISTER_URL","SIGNIN_URL","GETWORD_URL","completeChar","timestamp","completionType","type","time","CharList","componentDidMount","timeStamp","Date","now","setNewWordTime","partitionCharIndex","charList","characterCounter","map","item","length","decideCardState","userInput","cardJapChar","cardRomaji","idx","indexPartition","hintDisplayOn","updateCurrentChar","hintedCharList","onWrongInput","wrongCharList","onIncorrectCard","onWordCompletion","userChar","indexOfCurrentCard","romajiLength","slice","includes","concat","charTimestamp","onCompleteChar","i","state","dispatchTime","charsToRead","romaji","charsArrayDisplay","Grid","key","container","direction","justify","alignItems","spacing","connect","changeCardState","dispatch","CharInput","formRef","createRef","Input","placeholder","inputProps","onChange","onInputChange","onKeyDown","onSpecialKeyPress","autoFocus","inputRef","NavBar","onRouteChange","AppBar","position","Toolbar","Typography","variant","color","Button","onClick","Music","play","audio","Audio","audioLink","togglePlay","setState","pause","addEventListener","setTimeout","delay","removeEventListener","katakanaToRomaji","ア","イ","ウ","エ","オ","カ","キ","ク","ケ","コ","サ","シ","ス","セ","ソ","タ","チ","ツ","テ","ト","ナ","ニ","ヌ","ネ","ノ","ハ","ヒ","フ","ヘ","ホ","マ","ミ","ム","メ","モ","ヤ","ユ","ヨ","ラ","リ","ル","レ","ロ","ワ","ヲ","ン","katakanaHint","imageLink","shortHint","useStyles","makeStyles","root","maxWidth","media","height","Hint","currentHintedChar","classes","sentenceFragments","replace","split","Card","CardActionArea","CardMedia","component","alt","image","title","CardContent","Signin","onEmailInput","event","signInEmail","target","value","emailErrorMsg","onPasswordInput","signInPassword","passwordErrorMsg","sendSigninInfoToBackend","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","data","Object","keys","loadUser","console","log","catch","error","onSignIn","preventDefault","Paper","paper2","elevation","Container","CssBaseline","paper","form","noValidate","TextField","helperText","margin","required","fullWidth","id","label","name","autoComplete","FormControlLabel","control","Checkbox","submit","xs","Link","href","withStyles","theme","fontFamily","backfround","marginTop","display","flexDirection","marginBottom","padding","breakpoints","up","width","marginLeft","marginRight","Register","onNameInput","nameErrorMsg","sendFormDataToBackEnd","onFormSubmit","validateEmail","nameError","emailError","passwordError","test","String","toLowerCase","minWidth","bullet","transform","fontSize","pos","OutlinedCard","wordInfo","document","createElement","innerHTML","sentenceSegments","sentence_expression","parseAudio","audio_string","gutterBottom","vocab_meaning","vocab_pos","vocab_sound_local","sentence_sound_local","sentence_meaning","App","route","parseJapaneseWord","word","c","c_romaji","push","convertTimeToScoreDelta","score_delta","updateCharScore","user_uid","scoreDeltaList","charScoreDeltaList","res","updateWordScore","currentRomaji","curWrongChar","onHintedCard","onSpacePress","onEnterPress","onInputBoxChange","wordCompleted","updateWord","currentWord","which","vocab_kana","currentWordInfo","err","userInfo","user","joined","prevState","keypressGlobalHandler","charInputRef","current","focus","showHint","currentJapChar","displayWordInfo","displayMessage","userWrongInput","renderRoute","setCurrentChar","ref","changeInputBox","inputBox","payload","japchar","updateChar","pressEnter","currentChar","typeWrongAnswer","context","pressSpace","initialInputBox","initialCardState","prevTimestamp","allCharTimestamp","rootReducer","combineReducers","action","newTimestamp","store","createLogger","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.46806477.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport \"../containers/App.css\";\nimport \"./Char.css\";\n\nclass Char extends React.Component {\n  render() {\n    const className = `tmw5 center bg-white br3 pa3 pa4-ns mv3 ba b--black-10 ${this.props.cardState}`;\n    return (\n      <div className={className}>\n        <h1 className=\"char\">{this.props.char}</h1>\n      </div>\n    );\n  }\n}\n\nexport default Char;\n","export const USER_INPUT = \"USER_INPUT\";\r\n\r\nconst method = \"tuanHeroku\";\r\n\r\nvar REGISTER_URL = \"https://localhost:3000/register\";\r\nvar SIGNIN_URL = \"https://localhost:3000/signin\";\r\nvar PROFILE_URL = \"https://localhost:3000/profile/\";\r\nvar GETWORD_URL = \"https://shrouded-harbor-11572.herokuapp.com/getwordinfo\";\r\nvar CHARSCORE_URL = \"https://shrouded-harbor-11572.herokuapp.com/charscore\";\r\nvar WORDSCORE_URL = \"https://shrouded-harbor-11572.herokuapp.com/wordscore\";\r\nvar MEDIA_BASE_URL_SENTENCE =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/sentence-sound/\";\r\nvar MEDIA_BASE_URL_WORD =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/word-sound/\";\r\n// source: https://www.learn-japanese-adventure.com/learn-how-to-speak-japanese.html\r\nvar MEDIA_BASE_URL_CHAR =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/character-sound/kanasound-\"; // add {romaji}.mp3\r\n\r\nswitch (method) {\r\n  case \"local\":\r\n    break;\r\n  case \"tuanHeroku\":\r\n    REGISTER_URL = \"https://shrouded-harbor-11572.herokuapp.com/register\";\r\n    SIGNIN_URL = \"https://shrouded-harbor-11572.herokuapp.com/signin\";\r\n    PROFILE_URL = \"https://shrouded-harbor-11572.herokuapp.com/profile/\";\r\n    break;\r\n  case \"lienHeroku\":\r\n    REGISTER_URL = \"https://peaceful-sands-25473.herokuapp.com/register\";\r\n    SIGNIN_URL = \"https://peaceful-sands-25473.herokuapp.com/signin\";\r\n    PROFILE_URL = \"https://peaceful-sands-25473.herokuapp.com/profile/\";\r\n    break;\r\n  default:\r\n    console.log(\"method should be either tuanHeroku, lienHeroku, or local\");\r\n    break;\r\n}\r\n\r\nexport {\r\n  REGISTER_URL,\r\n  SIGNIN_URL,\r\n  PROFILE_URL,\r\n  GETWORD_URL,\r\n  MEDIA_BASE_URL_SENTENCE,\r\n  MEDIA_BASE_URL_WORD,\r\n  MEDIA_BASE_URL_CHAR,\r\n  CHARSCORE_URL,\r\n  WORDSCORE_URL,\r\n};\r\n","import { USER_INPUT, CHARSCORE_URL } from \"./constants.js\";\r\n\r\nexport const typeAnswer = (text) => {\r\n  return {\r\n    type: USER_INPUT,\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const pressSpace = (context) => {\r\n  switch (context) {\r\n    case \"REQUEST_HINT\":\r\n      return {\r\n        type: \"SPACE_PRESS_FOR_HINT\",\r\n        time: Date.now(),\r\n      };\r\n    case \"CONTINUE_AFTER_ERROR\":\r\n      return {\r\n        type: \"SPACE_PRESS_TO_CONTINUE\",\r\n        time: Date.now(),\r\n      };\r\n    case \"CONTINUE_AFTER_COMPLETE\":\r\n      return {\r\n        type: \"SPACE_PRESS_TO_GO_NEXT\",\r\n        time: Date.now(),\r\n      };\r\n    default:\r\n      return {\r\n        type: \"SPACE_PRESS\",\r\n      };\r\n  }\r\n};\r\n\r\nexport const updateChar = (japchar, romaji) => {\r\n  return {\r\n    type: \"CHAR_UPDATE\",\r\n    currentJapChar: japchar,\r\n    currentRomaji: romaji,\r\n  };\r\n};\r\n\r\nexport const pressEnter = (time) => {\r\n  return {\r\n    type: \"ENTER_PRESS\",\r\n    time: time,\r\n  };\r\n};\r\n\r\nexport const typeWrongAnswer = (userChar, currentChar) => {\r\n  return {\r\n    type: \"WRONG_INPUT\",\r\n    userInput: userChar,\r\n    currentChar: currentChar,\r\n    time: Date.now(),\r\n  };\r\n};\r\n\r\nexport const completeWord = () => {\r\n  return {\r\n    type: \"COMPLETE_WORD\",\r\n    time: Date.now(), // when user complete last character Card\r\n  };\r\n};\r\n\r\nexport const updateWord = (word) => {\r\n  return {\r\n    type: \"UPDATE_WORD\",\r\n    payload: word,\r\n  };\r\n};\r\n\r\nexport const completeChar = (timestamp, completionType) => {\r\n  return {\r\n    type: \"COMPLETE_CHAR\",\r\n    time: timestamp,\r\n    completionType: completionType,\r\n  };\r\n};\r\n\r\nexport const setNewWordTime = (time) => {\r\n  return {\r\n    type: \"SET_NEW_WORD_TIME\",\r\n    time: time,\r\n  };\r\n};\r\n","import React from \"react\";\nimport Char from \"./Char.js\";\nimport { Grid } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { completeChar, setNewWordTime } from \"../actions\";\n\nconst mapStateToProps = (state) => {\n  return {\n    charTimestamp: state.changeCardState.charTimestamp,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onCompleteChar: (time, type) => {\n      dispatch(completeChar(time, type));\n    },\n    setNewWordTime: (time) => {\n      dispatch(setNewWordTime(time));\n    },\n  };\n};\n\nclass CharList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dispatchTime: 0,\n    };\n  }\n\n  componentDidMount = () => {\n    const timeStamp = Date.now();\n    this.props.setNewWordTime(timeStamp);\n  };\n\n  partitionCharIndex = (charList) => {\n    var characterCounter = 0;\n\n    const indexPartition = charList.map(\n      (item) => (characterCounter += item.length)\n    );\n\n    return indexPartition;\n  };\n\n  decideCardState = (\n    userInput,\n    cardJapChar,\n    cardRomaji,\n    idx,\n    indexPartition,\n    hintDisplayOn,\n    updateCurrentChar,\n    hintedCharList,\n    onWrongInput,\n    wrongCharList,\n    onIncorrectCard,\n    onWordCompletion\n  ) => {\n    var userChar = \"\";\n    var className = \"\";\n    var indexOfCurrentCard = null;\n    var romajiLength = indexPartition[indexPartition.length - 1];\n\n    if (userInput.length >= indexPartition[idx]) {\n      // infer userChar using partitioning indices\n      if (idx === 0) {\n        userChar = userInput.slice(0, indexPartition[idx]);\n      } else {\n        userChar = userInput.slice(\n          indexPartition[idx - 1],\n          indexPartition[idx]\n        );\n      }\n      if (userChar === cardRomaji) {\n        if (hintedCharList.includes(cardRomaji)) {\n          className = className.concat(\" hinted \");\n\n          /* this simple condition is crucial due to prevent repeated 'onCorrectChar' call due to repeated \n          rendering everytime the user types something and \n          update the redux store */\n          if (idx >= this.props.charTimestamp.length) {\n            this.props.onCompleteChar(Date.now(), \"hinted\");\n          }\n        } else {\n          className = className.concat(\" correct \");\n\n          if (idx >= this.props.charTimestamp.length) {\n            this.props.onCompleteChar(Date.now(), \"correct\");\n          }\n        }\n        if (\n          userInput.length >= romajiLength &&\n          idx === indexPartition.length - 1\n        ) {\n          // if the last card is correct\n          onWordCompletion();\n        }\n      } else {\n        className = className.concat(\" incorrect \");\n        onWrongInput(userChar, cardRomaji);\n      }\n    }\n    // decide which Card to highlight\n    for (var i = 0; i < indexPartition.length; i++) {\n      if (userInput.length < indexPartition[i]) {\n        if (!onIncorrectCard) {\n          indexOfCurrentCard = i;\n        } else {\n          indexOfCurrentCard = i - 1;\n        }\n        if (idx === indexOfCurrentCard) {\n          className = className.concat(\" highlighted \");\n          updateCurrentChar(cardJapChar, cardRomaji);\n        }\n        break;\n      }\n    }\n    // fade all cards except the highlighted one\n    if (hintDisplayOn) {\n      if (idx !== indexOfCurrentCard) {\n        className = className.concat(\" o-30 \");\n      }\n    }\n\n    return className;\n  };\n\n  render() {\n    const charList = this.props.charsToRead.map((item) => item.romaji);\n    const indexPartition = this.partitionCharIndex(charList);\n\n    const charsArrayDisplay = this.props.charsToRead.map((item, i) => {\n      return (\n        <Grid item key={i}>\n          <Char\n            char={item.char}\n            key={i}\n            cardState={this.decideCardState(\n              this.props.userInput,\n              item.char,\n              item.romaji,\n              i,\n              indexPartition,\n              this.props.hintDisplayOn,\n              this.props.updateCurrentChar,\n              this.props.hintedCharList,\n              this.props.onWrongInput,\n              this.props.wrongCharList,\n              this.props.onIncorrectCard,\n              this.props.onWordCompletion\n            )}\n          />\n        </Grid>\n      );\n    });\n\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing=\"1\"\n      >\n        {charsArrayDisplay}\n      </Grid>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CharList);\n","import React from \"react\";\nimport \"../containers/App.css\";\nimport { Input } from \"@material-ui/core\";\n\nclass CharInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <form>\n        <Input\n          placeholder=\"Start typing here...\"\n          inputProps={{ \"aria-label\": \"description\" }}\n          onChange={this.props.onInputChange}\n          onKeyDown={this.props.onSpecialKeyPress}\n          autoFocus\n          inputRef={this.formRef}\n        />\n      </form>\n    );\n  }\n}\n\nexport default CharInput;\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button } from \"@material-ui/core\";\n\nconst NavBar = ({ onRouteChange }) => {\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"title\" color=\"inherit\">\n            Learn Hiragana Non-stop\n          </Typography>\n          <Button\n            color=\"inherit\"\n            onClick={() => onRouteChange(\"signin\")}\n            className=\"f3 link dim black underline pa3 pointer\"\n          >\n            Signout\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\nexport default NavBar;\n","// Taken from this https://stackoverflow.com/questions/47686345/playing-sound-in-reactjs\r\nimport React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass Music extends React.Component {\r\n  state = {\r\n    play: false,\r\n    audio: new Audio(`${this.props.audioLink}`),\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.state.audio.addEventListener(\"ended\", () =>\r\n      this.setState({ play: false })\r\n    );\r\n    setTimeout(() => {\r\n      this.state.audio.play();\r\n    }, this.props.delay);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.state.audio.removeEventListener(\"ended\", () =>\r\n      this.setState({ play: false })\r\n    );\r\n  }\r\n\r\n  togglePlay = () => {\r\n    this.setState({ play: !this.state.play }, () => {\r\n      this.state.play ? this.state.audio.play() : this.state.audio.pause();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.togglePlay}>\r\n          {this.state.play ? \"Pause Audio\" : \"Play Audio\"}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Music;\r\n","const katakanaToRomaji = {\r\n  ア: \"a\",\r\n  イ: \"i\",\r\n  ウ: \"u\",\r\n  エ: \"e\",\r\n  オ: \"o\",\r\n  カ: \"ka\",\r\n  キ: \"ki\",\r\n  ク: \"ku\",\r\n  ケ: \"ke\",\r\n  コ: \"ko\",\r\n  サ: \"sa\",\r\n  シ: \"shi\",\r\n  ス: \"su\",\r\n  セ: \"se\",\r\n  ソ: \"so\",\r\n  タ: \"ta\",\r\n  チ: \"chi\",\r\n  ツ: \"tsu\",\r\n  テ: \"te\",\r\n  ト: \"to\",\r\n  ナ: \"na\",\r\n  ニ: \"ni\",\r\n  ヌ: \"nu\",\r\n  ネ: \"ne\",\r\n  ノ: \"no\",\r\n  ハ: \"ha\",\r\n  ヒ: \"hi\",\r\n  フ: \"fu\",\r\n  ヘ: \"he\",\r\n  ホ: \"ho\",\r\n  マ: \"ma\",\r\n  ミ: \"mi\",\r\n  ム: \"mu\",\r\n  メ: \"me\",\r\n  モ: \"mo\",\r\n  ヤ: \"ya\",\r\n  ユ: \"yu\",\r\n  ヨ: \"yo\",\r\n  ラ: \"ra\",\r\n  リ: \"ri\",\r\n  ル: \"ru\",\r\n  レ: \"re\",\r\n  ロ: \"ro\",\r\n  ワ: \"wa\",\r\n  ヲ: \"wo\",\r\n  ン: \"n\",\r\n};\r\n\r\nconst katakanaHint = {\r\n  ア: {\r\n    romaji: \"a\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A2.jpg\",\r\n    shortHint: \"Find the capital 'A'\",\r\n  },\r\n  イ: {\r\n    romaji: \"i\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A4.jpg\",\r\n    shortHint: \"It looks like an <u>ea</u>gle (i)\",\r\n  },\r\n  ウ: {\r\n    romaji: \"u\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AB.jpg\",\r\n    shortHint: \"ウ looks like う (u)\",\r\n  },\r\n  エ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A8.jpg\",\r\n    shortHint:\r\n      \"Imagine this is the girders an <u>e</u> engineer would use to build buildings\",\r\n  },\r\n  オ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AA.jpg\",\r\n    shortHint:\r\n      'A dude flapping open his trench coat to flash you. \"<u>Oh</u> MY GOD!\" you say. ',\r\n  },\r\n  カ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AB.jpg\",\r\n    shortHint: \"It looks just like the Hiragana か\",\r\n  },\r\n  キ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AD.jpg\",\r\n    shortHint: \"A key (ki)\",\r\n  },\r\n  ク: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AF.jpg\",\r\n    shortHint: \"A long <u>coo</u>ks's (ku) hat\",\r\n  },\r\n  ケ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B1.jpg\",\r\n    shortHint: \"It looks like the letter <u>K</u> (ke)\",\r\n  },\r\n  コ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B3.jpg\",\r\n    shortHint: \"Two 90 degrees <u>co</u>rners (ko)\",\r\n  },\r\n  サ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B5.jpg\",\r\n    shortHint: \"Three <u>sa</u>rdines stacked on top of each other\",\r\n  },\r\n  シ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B7.jpg\",\r\n    shortHint: \"<u>She</u> has a very werid face (shi)\",\r\n  },\r\n  ス: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B9.jpg\",\r\n    shortHint: \"A hanger where you hang up your fancy <u>su</u>it (su)\",\r\n  },\r\n  セ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BB.jpg\",\r\n    shortHint: \"It looks like the Hiragana せ\",\r\n  },\r\n  ソ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BD.jpg\",\r\n    shortHint: \"One needle and a long thread which you use to <u>sew</u> (so)\",\r\n  },\r\n  タ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BF.jpg\",\r\n    shortHint: \"A <u>ti</u>dal wave racing across the sea (ta)\",\r\n  },\r\n  チ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%81.jpg\",\r\n    shortHint: \"A <u>chee</u>rleader doing a <u>chee</u>r (chi)\",\r\n  },\r\n  ツ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%84.jpg\",\r\n    shortHint: \"<u>Two</u> (tsu) needles\",\r\n  },\r\n  テ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%86.jpg\",\r\n    shortHint: \"A <u>te</u>lephone pole\",\r\n  },\r\n  ト: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%88.jpg\",\r\n    shortHint: \"A <u>to</u>tem pole\",\r\n  },\r\n  ナ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8A.jpg\",\r\n    shortHint: \"A majestic <u>na</u>rwhal\",\r\n  },\r\n  ニ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8B.jpg\",\r\n    shortHint: \"Two <u>nee</u>dles (ni) laying on their side\",\r\n  },\r\n  ヌ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8C.jpg\",\r\n    shortHint:\r\n      \"The chopsticks are grabbing onto some <u>noo</u>dles & pulling them out of a bowl. (nu)\",\r\n  },\r\n  ネ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8D.jpg\",\r\n    shortHint: \"A <u>ne</u>cromancer has summoned this zombie\",\r\n  },\r\n  ノ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8E.jpg\",\r\n    shortHint: \"A really long <u>no</u>se\",\r\n  },\r\n  ハ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8F.jpg\",\r\n    shortHint: \"A rice paddy <u>ha</u>t\",\r\n  },\r\n  ヒ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%92.jpg\",\r\n    shortHint: \"<u>He</u> (hi) has no head. <u>He</u> is reaching out to you.\",\r\n  },\r\n  フ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%95.jpg\",\r\n    shortHint: \"A <u>fu</u>nny looking owl\",\r\n  },\r\n  ヘ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%98.jpg\",\r\n    shortHint: \"This looks like the Hiragana へ\",\r\n  },\r\n  ホ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9B.jpg\",\r\n    shortHint: \"A <u>ho</u>ly cross\",\r\n  },\r\n  マ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9E.jpg\",\r\n    shortHint: \"Look at all those angles! Those lengths! All that <u>ma</u>th!\",\r\n  },\r\n  ミ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9F.jpg\",\r\n    shortHint: \"Three <u>mi</u>ssiles, flying towards you. Be careful!\",\r\n  },\r\n  ム: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A0.jpg\",\r\n    shortHint: \"It is shaped like a pile of poop. Cow poop. <u>Moo</u>. (mu)\",\r\n  },\r\n  メ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A1.jpg\",\r\n    shortHint: 'め <u>Me</u> is Japnese for \"eye\"',\r\n  },\r\n  モ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A2.jpg\",\r\n    shortHint: \"This looks like the Hiragana も\",\r\n  },\r\n  ヤ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A4.jpg\",\r\n    shortHint: \"This looks just like the Hiragana や\",\r\n  },\r\n  ユ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A6.jpg\",\r\n    shortHint: \"You (yu) have a hook for a hand\",\r\n  },\r\n  ヨ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A8.jpg\",\r\n    shortHint: \"A <u>yo</u>gurt containers\",\r\n  },\r\n  ラ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A9.jpg\",\r\n    shortHint: \"It is a <u>ra</u>ptor wearing sweet <u>ra</u>y-bans\",\r\n  },\r\n  リ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AA.jpg\",\r\n    shortHint: \"It looks like the Hiragana り\",\r\n  },\r\n  ル: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AB.jpg\",\r\n    shortHint:\r\n      \"There are two <u>rou</u>tes (ru) you can take. Route 1 & Route 2.\",\r\n  },\r\n  レ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AC.jpg\",\r\n    shortHint: \"Look at that beautiful <u>re</u>d hair that <u>Re</u>i has!\",\r\n  },\r\n  ロ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AD.jpg\",\r\n    shortHint:\r\n      \"This <u>ro</u>ad goes around in a square, never ending. What a terrible <u>ro</u>ad this is.\",\r\n  },\r\n  ワ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AF.jpg\",\r\n    shortHint:\r\n      \"You often begin your question with the word <u>wha</u>t (wa). <u>Wha</u>t are you doing?\",\r\n  },\r\n  ヲ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%B2.jpg\",\r\n    shortHint: \"A dog <u>wo</u>ofing (wo) so hard its tongue is flying out\",\r\n  },\r\n  ン: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%B3.jpg\",\r\n    shortHint: \"This guy only has one eye. <u>N</u>oooo!\",\r\n  },\r\n};\r\n\r\nexport { katakanaToRomaji, katakanaHint };\r\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Music from \"./Music\";\nimport { katakanaToRomaji, katakanaHint } from \"../jap-char\";\nimport { MEDIA_BASE_URL_CHAR } from \"../constants\";\n\n//original component\n// const Hint = () =>{\n//     return(\n//         <div className = \"mw5 center bg-white br3 pa3 ba b--black-10\">\n//             <img alt ='character mnemonic' width=\"200\" height=\"200\" src=''/>\n//             <div>\n//                 <hr className=\"mw3 bb bw1 b--black-10\"></hr>\n//                 <p>This will be a brief explanation</p>\n//             </div>\n//         </div>\n//     );\n// }\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 320,\n  },\n  media: {\n    height: 200,\n  },\n});\n\nconst parseoutUnderlineText = (sentence) => {\n  // replace <b> and </b> with comma\n  var sentence = sentence.replace(/<\\/?u>/g, \",\");\n  return sentence.split(\",\");\n};\n\nexport default function Hint({ currentHintedChar }) {\n  const classes = useStyles();\n  const romaji = katakanaToRomaji[currentHintedChar];\n  const sentenceFragments = parseoutUnderlineText(\n    katakanaHint[currentHintedChar].shortHint\n  );\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          component=\"img\"\n          alt=\"Hint for character\"\n          image={katakanaHint[currentHintedChar].imageLink}\n          title=\"Hint for character\"\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {sentenceFragments[0]}\n            <u>{sentenceFragments[1]}</u>\n            {sentenceFragments[2]}\n          </Typography>\n          <br></br>\n          <Music audioLink={MEDIA_BASE_URL_CHAR + romaji + \".mp3\"} />\n        </CardContent>\n      </CardActionArea>\n      {/* <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions> */}\n    </Card>\n  );\n}\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { SIGNIN_URL } from \"../constants\";\r\n\r\nconst useStyles = (theme) => ({\r\n  container: {\r\n    fontFamily: \"Roboto\",\r\n    backfround: \"white\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper2: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 500,\r\n      height: 450,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\",\r\n      emailErrorMsg: \"\",\r\n      passwordErrorMsg: \"\",\r\n    };\r\n  }\r\n\r\n  onEmailInput = (event) => {\r\n    this.setState({ signInEmail: event.target.value, emailErrorMsg: \"\" });\r\n  };\r\n\r\n  onPasswordInput = (event) => {\r\n    this.setState({ signInPassword: event.target.value, passwordErrorMsg: \"\" });\r\n  };\r\n\r\n  sendSigninInfoToBackend = () => {\r\n    const { signInEmail, signInPassword } = this.state;\r\n\r\n    fetch(SIGNIN_URL, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: signInEmail,\r\n        password: signInPassword,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (Object.keys(data).length === 4) {\r\n          this.props.loadUser(data);\r\n          this.props.onRouteChange(\"home\");\r\n          this.setState({\r\n            emailErrorMsg: \"\",\r\n            passwordErrorMsg: \"\",\r\n          });\r\n        } else {\r\n          // there is an error loggin in\r\n          console.log(\"Login Failed\", data);\r\n          if (data === \"email is not yet registered\") {\r\n            this.setState({ emailErrorMsg: data });\r\n          } else if (data === \"incorrect password\") {\r\n            this.setState({\r\n              passwordErrorMsg: data,\r\n              emailErrorMsg: \"\",\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error!\", error);\r\n      });\r\n  };\r\n\r\n  onSignIn = (event) => {\r\n    event.preventDefault();\r\n    const { signInEmail, signInPassword } = this.state;\r\n\r\n    // check that fields are not empty\r\n    if (!signInEmail) {\r\n      this.setState({ emailErrorMsg: \"please fill out your email\" });\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n    if (!signInPassword) {\r\n      this.setState({ passwordErrorMsg: \"please fill out your password\" });\r\n    } else {\r\n      this.setState({ passwordErrorMsg: \"\" });\r\n    }\r\n\r\n    if (signInEmail && signInPassword) {\r\n      this.sendSigninInfoToBackend();\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Paper className={classes.paper2} elevation={3}>\r\n        <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <form className={classes.form} noValidate>\r\n              <TextField\r\n                error={this.state.emailErrorMsg}\r\n                helperText={this.state.emailErrorMsg}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onChange={this.onEmailInput}\r\n              />\r\n              <TextField\r\n                error={this.state.passwordErrorMsg}\r\n                helperText={this.state.passwordErrorMsg}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={this.onPasswordInput}\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={this.onSignIn}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n              >\r\n                <Grid item xs>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    {\"Forgot password?\"}\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link\r\n                    component=\"button\"\r\n                    variant=\"body2\"\r\n                    onClick={() => this.props.onRouteChange(\"register\")}\r\n                  >\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Signin);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { REGISTER_URL } from \"../constants\";\r\n\r\nconst useStyles = (theme) => ({\r\n  container: {\r\n    fontFamily: \"Roboto\",\r\n    backfround: \"white\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper2: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 500,\r\n      height: 450,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      nameError: false,\r\n      emailError: false,\r\n      passwordError: false,\r\n      nameErrorMsg: \"\",\r\n      emailErrorMsg: \"\",\r\n      passwordErrorMsg: \"\",\r\n    };\r\n  }\r\n\r\n  validateEmail(email) {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  onNameInput = (event) => {\r\n    this.setState({ name: event.target.value, nameErrorMsg: \"\" });\r\n  };\r\n\r\n  onEmailInput = (event) => {\r\n    this.setState({ email: event.target.value, emailErrorMsg: \"\" });\r\n  };\r\n\r\n  onPasswordInput = (event) => {\r\n    this.setState({ password: event.target.value, passwordErrorMsg: \"\" });\r\n  };\r\n\r\n  sendFormDataToBackEnd = () => {\r\n    const { name, email, password } = this.state;\r\n\r\n    fetch(REGISTER_URL, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (Object.keys(data).length === 4) {\r\n          this.setState({ emailErrorMsg: \"\" });\r\n          this.props.loadUser(data);\r\n          this.props.onRouteChange(\"home\");\r\n        } else {\r\n          // if user already exist\r\n          this.setState({ emailErrorMsg: data });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error!\", error);\r\n      });\r\n  };\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { name, email, password } = this.state;\r\n\r\n    if (!name) {\r\n      this.setState({ nameErrorMsg: \"please fill out your name\" });\r\n    } else {\r\n      this.setState({ nameErrorMsg: \"\" });\r\n    }\r\n    if (!email) {\r\n      this.setState({ emailErrorMsg: \"please fill out your email\" });\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n    if (!password) {\r\n      this.setState({ passwordErrorMsg: \"please fill out your password\" });\r\n    } else {\r\n      this.setState({ passwordErrorMsg: \"\" });\r\n    }\r\n\r\n    if (!this.validateEmail(email)) {\r\n      this.setState({ emailErrorMsg: \"please enter a valid email address\" });\r\n      return;\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n\r\n    if (name && password && email) {\r\n      this.sendFormDataToBackEnd();\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { nameErrorMsg, emailErrorMsg, passwordErrorMsg } = this.state;\r\n    return (\r\n      <Paper className={classes.paper2}>\r\n        <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Register\r\n            </Typography>\r\n            <form className={classes.form} noValidate>\r\n              <TextField\r\n                error={nameErrorMsg}\r\n                helperText={nameErrorMsg}\r\n                variant=\"outlined\"\r\n                id=\"name\"\r\n                label=\"Your Name\"\r\n                autoFocus\r\n                required\r\n                fullWidth\r\n                onChange={this.onNameInput}\r\n              />\r\n              <TextField\r\n                error={emailErrorMsg}\r\n                helperText={emailErrorMsg}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={this.onEmailInput}\r\n              />\r\n              <TextField\r\n                error={passwordErrorMsg}\r\n                helperText={passwordErrorMsg}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={this.onPasswordInput}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={this.onFormSubmit}\r\n              >\r\n                Register\r\n              </Button>\r\n              <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <Link\r\n                    component=\"button\"\r\n                    variant=\"body2\"\r\n                    onClick={() => this.props.onRouteChange(\"signin\")}\r\n                  >\r\n                    {\"Already registered? Sign In\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Register);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Music from \"./Music\";\r\nimport { MEDIA_BASE_URL_SENTENCE, MEDIA_BASE_URL_WORD } from \"../constants\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nconst parseoutBoldText = (sentence) => {\r\n  // replace <b> and </b> with comma\r\n  var sentence = sentence.replace(/<\\/?b>/g, \",\");\r\n  return sentence.split(\",\");\r\n};\r\n\r\nexport default function OutlinedCard({ wordInfo }) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  var el = document.createElement(\"html\");\r\n  el.innerHTML = \"<b>bolded text</b>\";\r\n  const sentenceSegments = parseoutBoldText(wordInfo.sentence_expression);\r\n\r\n  const parseAudio = (audio_string) => {\r\n    return audio_string.slice(7, audio_string.length - 1);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          Word Meaning\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {wordInfo.vocab_meaning} ({wordInfo.vocab_pos})\r\n          <Music\r\n            audioLink={`${MEDIA_BASE_URL_WORD}${parseAudio(\r\n              wordInfo.vocab_sound_local\r\n            )}`}\r\n          />\r\n        </Typography>\r\n        <br></br>\r\n\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          Sample Sentence\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {sentenceSegments[0]}\r\n          <b>\r\n            <u>{sentenceSegments[1]}</u>\r\n          </b>\r\n          {sentenceSegments[2]}\r\n          <Music\r\n            audioLink={`${MEDIA_BASE_URL_SENTENCE}${parseAudio(\r\n              wordInfo.sentence_sound_local\r\n            )}`}\r\n            delay={3000}\r\n          />\r\n        </Typography>\r\n        <br></br>\r\n\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          Sentence Meaning\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {wordInfo.sentence_meaning}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CharList from \"../components/CharList.js\";\nimport CharInput from \"../components/CharInput\";\nimport NavBar from \"../components/NavBar\";\nimport Hint from \"../components/Hint\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { katakanaToRomaji } from \"../jap-char.js\";\nimport Signin from \"../components/Signin\";\nimport Register from \"../components/Register\";\nimport WordCard from \"../components/WordCard\";\nimport { GETWORD_URL, CHARSCORE_URL, WORDSCORE_URL } from \"../constants\";\nimport \"./App.css\";\n\nimport {\n  typeAnswer,\n  pressSpace,\n  updateChar,\n  pressEnter,\n  typeWrongAnswer,\n  completeWord,\n  updateWord,\n  completeChar,\n} from \"../actions\";\n\nconst mapStateToProps = (state) => {\n  return {\n    userInput: state.changeInputBox.inputBox,\n    currentJapChar: state.changeCardState.currentJapChar,\n    currentRomaji: state.changeCardState.currentRomaji,\n    hintedCharList: state.changeCardState.hintedCharList,\n    wrongCharList: state.changeCardState.wrongCharList,\n    onIncorrectCard: state.changeCardState.onIncorrectCard,\n    curWrongChar: state.changeCardState.curWrongChar,\n    onHintedCard: state.changeCardState.onHintedCard,\n    wordCompleted: state.changeCardState.wordCompleted,\n    currentWord: state.changeCardState.currentWord,\n    charTimestamp: state.changeCardState.charTimestamp,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onInputBoxChange: (event) => {\n      dispatch(typeAnswer(event.target.value));\n    },\n    setCurrentChar: (japchar, romaji) => {\n      dispatch(updateChar(japchar, romaji));\n    },\n    onEnterPress: (time) => {\n      dispatch(pressEnter(time));\n    },\n    onWrongInput: (userChar, currentChar) => {\n      dispatch(typeWrongAnswer(userChar, currentChar));\n    },\n    onSpacePress: (context) => {\n      dispatch(pressSpace(context));\n    },\n    onWordCompletion: () => {\n      dispatch(completeWord());\n    },\n    updateWord: (word) => {\n      dispatch(updateWord(word));\n    },\n    onCompleteChar: (time, type) => {\n      dispatch(completeChar(time, type));\n    },\n  };\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: \"signin\",\n      userInfo: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        joined: \"\",\n      },\n      currentWordInfo: null,\n    };\n    this.charInputRef = React.createRef();\n  }\n\n  onRouteChange = (route) => {\n    this.setState({ route: route });\n  };\n\n  parseJapaneseWord = (word) => {\n    var charsToRead = [];\n    for (const c of word) {\n      var c_romaji = katakanaToRomaji[c] || \"??\";\n      charsToRead.push({ char: c, romaji: c_romaji });\n    }\n    return charsToRead;\n  };\n\n  convertTimeToScoreDelta = (charTimestamp) => {\n    return charTimestamp.map((item) => {\n      var score_delta = 20000 / item.time;\n      if (item.type === \"hinted\") {\n        score_delta *= -1;\n      }\n      return {\n        char: item.char,\n        score_delta: score_delta,\n      };\n    });\n  };\n\n  updateCharScore = (user_uid, scoreDeltaList) => {\n    fetch(CHARSCORE_URL, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_uid: user_uid,\n        charScoreDeltaList: scoreDeltaList,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"update char score success\", data);\n      })\n      .catch((error) => {\n        console.log(\"Failed to update char score\", error);\n      });\n  };\n\n  updateWordScore = (user_uid, word) => {\n    console.log(\"POST TO WORD\", word);\n    fetch(WORDSCORE_URL, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_uid: user_uid,\n        word: word,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"update word score success\", data);\n      })\n      .catch((error) => {\n        console.log(\"Failed to update word score\", error);\n      });\n  };\n\n  onSpecialKeyPress = (event) => {\n    const {\n      currentRomaji,\n      curWrongChar,\n      onIncorrectCard,\n      onHintedCard,\n      onSpacePress,\n      onEnterPress,\n      onInputBoxChange,\n      wordCompleted,\n      updateWord,\n      onCompleteChar,\n      charTimestamp,\n      currentWord,\n    } = this.props;\n\n    if (onIncorrectCard || onHintedCard || wordCompleted) {\n      event.preventDefault();\n    }\n\n    // handle SPACE press\n    if (event.which === 32) {\n      event.preventDefault();\n      if (!onIncorrectCard && !onHintedCard && !wordCompleted) {\n        onSpacePress(\"REQUEST_HINT\");\n        onCompleteChar(Date.now(), \"hinted\");\n      } else if (onIncorrectCard) {\n        // remove wrong input\n        event.target.value = event.target.value.slice(0, -curWrongChar.length);\n        onInputBoxChange(event);\n        onSpacePress(\"CONTINUE_AFTER_ERROR\");\n      } else if (wordCompleted) {\n        fetch(GETWORD_URL, {\n          method: \"get\",\n          headers: { \"Content-Type\": \"application/json\" },\n        })\n          .then((res) => res.json())\n          .then((word) => {\n            updateWord(word.vocab_kana);\n            this.setState({ currentWordInfo: word });\n            console.log(\n              \"CURRENT WORD CHEAT\",\n              this.parseJapaneseWord(word.vocab_kana)\n            );\n          })\n          .catch((err) => {\n            console.log(\"Error in getting next word\", err);\n          });\n        const scoreDeltaList = this.convertTimeToScoreDelta(charTimestamp);\n        this.updateCharScore(this.state.userInfo.id, scoreDeltaList);\n        this.updateWordScore(this.state.userInfo.id, currentWord);\n        onSpacePress(\"CONTINUE_AFTER_COMPLETE\");\n\n        event.target.value = \"\";\n        onInputBoxChange(event);\n      }\n    }\n\n    // handle ENTER press\n    if (event.which === 13) {\n      event.preventDefault();\n      if (onHintedCard) {\n        // autofill correct answer\n        event.target.value = event.target.value.concat(currentRomaji);\n        onInputBoxChange(event);\n        onEnterPress(Date.now());\n      }\n    }\n  };\n\n  loadUser = (user) => {\n    const { user_uid, name, email, joined } = user;\n    this.setState((prevState) => {\n      let userInfo = { ...prevState.userInfo };\n      userInfo.name = name;\n      userInfo.id = user_uid;\n      userInfo.email = email;\n      userInfo.joined = joined;\n      return { userInfo };\n    });\n    console.log(\"userInfo\", this.state.userInfo);\n  };\n\n  // refocus on inputbox when pressing ENTER or SPACE\n  keypressGlobalHandler = (event) => {\n    if (this.state.route === \"home\") {\n      if (event.which === 32 || event.which === 13) {\n        event.preventDefault();\n        this.charInputRef.current.formRef.current.focus();\n      }\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"keypress\", this.keypressGlobalHandler);\n    fetch(GETWORD_URL, {\n      method: \"get\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((word) => {\n        this.setState({ currentWordInfo: word });\n        this.props.updateWord(word.vocab_kana);\n        console.log(\n          \"CURRENT WORD CHEAT\",\n          this.parseJapaneseWord(word.vocab_kana)\n        );\n      })\n      .catch((err) => {\n        console.log(\"Error in getting first word\", err);\n      });\n  }\n\n  showHint = () => {\n    if (this.props.onHintedCard) {\n      return <Hint currentHintedChar={this.props.currentJapChar} />;\n    }\n  };\n\n  displayWordInfo = () => {\n    if (this.props.wordCompleted) {\n      return <WordCard wordInfo={this.state.currentWordInfo} />;\n    }\n  };\n\n  displayMessage = () => {\n    const {\n      onIncorrectCard,\n      wrongCharList,\n      curWrongChar,\n      onHintedCard,\n      wordCompleted,\n    } = this.props;\n\n    if (onIncorrectCard) {\n      const userWrongInput = wrongCharList[curWrongChar];\n      return (\n        <div>\n          <p>{`This character is not \"${userWrongInput}\"`}</p>\n          <p>press SPACE to try again</p>\n        </div>\n      );\n    }\n    if (onHintedCard) {\n      return <p>press ENTER to continue</p>;\n    }\n    if (wordCompleted) {\n      return <p>press SPACE to continue</p>;\n    }\n  };\n\n  renderRoute = (route) => {\n    switch (route) {\n      case \"signin\":\n        return (\n          <Signin onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n        );\n      case \"register\":\n        return (\n          <Register\n            onRouteChange={this.onRouteChange}\n            loadUser={this.loadUser}\n          />\n        );\n      case \"home\":\n        const {\n          userInput,\n          onHintedCard,\n          setCurrentChar,\n          hintedCharList,\n          onWrongInput,\n          wrongCharList,\n          onIncorrectCard,\n          onWordCompletion,\n          currentWord,\n        } = this.props;\n\n        return (\n          <div>\n            <NavBar onRouteChange={this.onRouteChange} />\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Paper elevation={0} />\n              <h1>Learn Hiragana on the go</h1>\n              <h1>User: {this.state.userInfo.name} </h1>\n              <CharInput\n                onInputChange={this.props.onInputBoxChange}\n                onSpecialKeyPress={this.onSpecialKeyPress}\n                ref={this.charInputRef}\n              />\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CharList\n                    charsToRead={this.parseJapaneseWord(currentWord)}\n                    userInput={userInput}\n                    hintDisplayOn={onHintedCard}\n                    updateCurrentChar={setCurrentChar}\n                    hintedCharList={hintedCharList}\n                    onWrongInput={onWrongInput}\n                    wrongCharList={wrongCharList}\n                    onIncorrectCard={onIncorrectCard}\n                    onWordCompletion={onWordCompletion}\n                  />\n                </Grid>\n                <div>{this.displayMessage()}</div>\n                <Grid item>\n                  <Paper elevation={1} />\n                  {this.showHint()}\n                </Grid>\n                <div>{this.displayWordInfo()}</div>\n              </Grid>\n            </Grid>\n          </div>\n        );\n      default:\n        return <div>Default</div>;\n    }\n  };\n\n  render() {\n    return <div className=\"tc\">{this.renderRoute(this.state.route)}</div>;\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { USER_INPUT } from \"./constants\";\r\n\r\nconst initialInputBox = {\r\n  inputBox: \"\",\r\n};\r\n\r\nconst initialCardState = {\r\n  currentJapChar: \"\",\r\n  currentRomaji: \"\",\r\n  hintedCharList: [],\r\n  wrongCharList: {},\r\n  onIncorrectCard: false,\r\n  curWrongChar: \"\",\r\n  onHintedCard: false,\r\n  wordCompleted: false,\r\n  currentWord: \"\",\r\n  prevTimestamp: null,\r\n  charTimestamp: [],\r\n  allCharTimestamp: [],\r\n};\r\n\r\nexport const changeInputBox = (state = initialInputBox, action = {}) => {\r\n  switch (action.type) {\r\n    case USER_INPUT:\r\n      return { ...state, inputBox: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const changeCardState = (state = initialCardState, action = {}) => {\r\n  switch (action.type) {\r\n    case \"CHAR_UPDATE\":\r\n      return {\r\n        ...state,\r\n        currentJapChar: action.currentJapChar,\r\n        currentRomaji: action.currentRomaji,\r\n      };\r\n    case \"ENTER_PRESS\":\r\n      return {\r\n        ...state,\r\n        hintedCharList: [...state.hintedCharList, state.currentRomaji],\r\n        onHintedCard: false,\r\n        prevTimestamp: action.time,\r\n      };\r\n    case \"WRONG_INPUT\":\r\n      state.wrongCharList[action.currentChar] = action.userInput;\r\n      return {\r\n        ...state,\r\n        onIncorrectCard: true,\r\n        curWrongChar: action.currentChar,\r\n      };\r\n    case \"SPACE_PRESS_TO_CONTINUE\":\r\n      return { ...state, onIncorrectCard: false };\r\n    case \"SPACE_PRESS_FOR_HINT\":\r\n      return { ...state, onHintedCard: true };\r\n    case \"SPACE_PRESS_TO_GO_NEXT\":\r\n      return {\r\n        ...state,\r\n        wordCompleted: false,\r\n        charTimestamp: [],\r\n        allCharTimestamp: [...state.allCharTimestamp, state.charTimestamp],\r\n        prevTimestamp: action.time,\r\n        hintedCharList: [],\r\n      };\r\n    case \"COMPLETE_WORD\":\r\n      return { ...state, wordCompleted: true };\r\n    case \"UPDATE_WORD\":\r\n      return { ...state, currentWord: action.payload };\r\n    case \"COMPLETE_CHAR\":\r\n      const newTimestamp = {\r\n        char: state.currentJapChar,\r\n        time: action.time - state.prevTimestamp,\r\n        type: action.completionType,\r\n      };\r\n      console.log(\"TIME STAMP\", newTimestamp);\r\n      return {\r\n        ...state,\r\n        charTimestamp: [...state.charTimestamp, newTimestamp],\r\n        prevTimestamp: action.time,\r\n      };\r\n    case \"SET_NEW_WORD_TIME\":\r\n      return { ...state, prevTimestamp: action.time };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\nimport App from \"./containers/App.js\";\nimport { changeInputBox, changeCardState } from \"./reducers\";\n//import \"typeface-roboto\";\n\nconst rootReducer = combineReducers({ changeInputBox, changeCardState });\nconst logger = createLogger();\n\n// const store = createStore(rootReducer, applyMiddleware(logger));\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}