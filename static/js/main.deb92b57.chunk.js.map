{"version":3,"sources":["serviceWorker.js","components/Char.js","constants.js","actions.js","components/CharList.js","components/CharInput.js","components/NavBar.js","components/Music.js","jap-char.js","components/Hint.js","components/Signin.js","components/Register.js","components/WordCard.js","containers/App.js","reducers.js","index.js"],"names":["Boolean","window","location","hostname","match","Char","className","this","props","cardState","char","React","Component","REGISTER_URL","SIGNIN_URL","GETWORD_URL","updateWord","word","type","payload","completeChar","timestamp","completionType","time","CharList","componentDidMount","timeStamp","Date","now","setNewWordTime","partitionCharIndex","charList","characterCounter","map","item","length","decideCardState","userInput","cardJapChar","cardRomaji","idx","indexPartition","hintDisplayOn","updateCurrentChar","hintedCharList","onWrongInput","onIncorrectCard","onWordCompletion","userChar","indexOfCurrentCard","romajiLength","slice","includes","concat","charTimestamp","onCompleteChar","i","state","dispatchTime","charsToRead","romaji","charsArrayDisplay","Grid","key","container","direction","justify","alignItems","spacing","connect","changeCardState","dispatch","CharInput","formRef","createRef","Input","placeholder","inputProps","onChange","onInputChange","onKeyDown","onSpecialKeyPress","autoFocus","inputRef","useStyles","makeStyles","theme","root","flexGrow","title","NavBar","onRouteChange","classes","AppBar","position","Toolbar","Typography","variant","color","align","Button","onClick","Music","play","audio","Audio","audioLink","togglePlay","setState","console","log","onAudioPlay","pause","onAudioPause","addEventListener","setTimeout","delay","removeEventListener","audioIsPlaying","changeGeneralState","katakanaToRomaji","ア","イ","ウ","エ","オ","カ","キ","ク","ケ","コ","サ","シ","ス","セ","ソ","タ","チ","ツ","テ","ト","ナ","ニ","ヌ","ネ","ノ","ハ","ヒ","フ","ヘ","ホ","マ","ミ","ム","メ","モ","ヤ","ユ","ヨ","ラ","リ","ル","レ","ロ","ワ","ヲ","ン","katakanaHint","imageLink","shortHint","maxWidth","media","height","Hint","currentHintedChar","sentenceFragments","replace","split","Card","CardActionArea","CardMedia","component","alt","image","CardContent","Signin","onEmailInput","event","signInEmail","target","value","emailErrorMsg","onPasswordInput","signInPassword","passwordErrorMsg","sendSigninInfoToBackend","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","data","Object","keys","loadUser","catch","error","onSignIn","preventDefault","Paper","paper2","elevation","Container","CssBaseline","paper","form","noValidate","TextField","helperText","margin","required","fullWidth","id","label","name","autoComplete","FormControlLabel","control","Checkbox","submit","xs","Link","href","withStyles","fontFamily","backfround","marginTop","display","flexDirection","marginBottom","padding","breakpoints","up","width","marginLeft","marginRight","Register","onNameInput","nameErrorMsg","sendFormDataToBackEnd","onFormSubmit","validateEmail","nameError","emailError","passwordError","test","String","toLowerCase","minWidth","bullet","transform","fontSize","pos","OutlinedCard","wordInfo","document","createElement","innerHTML","sentenceSegments","sentence_expression","parseAudio","audio_string","gutterBottom","vocab_meaning","vocab_pos","vocab_sound_local","sentence_sound_local","sentence_meaning","App","route","parseJapaneseWord","c","c_romaji","push","convertTimeToScoreDelta","score_delta","updateCharScore","user_uid","scoreDeltaList","charScoreDeltaList","res","updateWordScore","requestNewWord","vocab_kana","currentWordInfo","err","currentRomaji","curWrongChar","onHintedCard","onSpacePress","onEnterPress","onInputBoxChange","wordCompleted","currentWord","which","userInfo","user","joined","prevState","keypressGlobalHandler","charInputRef","current","focus","showHint","currentJapChar","displayWordInfo","displayMessage","wrongCharList","userWrongInput","renderRoute","setCurrentChar","ref","changeInputBox","inputBox","japchar","updateChar","pressEnter","currentChar","typeWrongAnswer","context","pressSpace","initialInputBox","initialGeneralState","initialCardState","prevTimestamp","allCharTimestamp","rootReducer","combineReducers","action","newTimestamp","logger","createLogger","store","createStore","applyMiddleware","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.deb92b57.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport \"../containers/App.css\";\nimport \"./Char.css\";\n\nclass Char extends React.Component {\n  render() {\n    const className = `tmw5 center bg-white br3 pa3 pa4-ns mv3 ba b--black-10 ${this.props.cardState}`;\n    return (\n      <div className={className}>\n        <h1 className=\"char\">{this.props.char}</h1>\n      </div>\n    );\n  }\n}\n\nexport default Char;\n","export const USER_INPUT = \"USER_INPUT\";\r\n\r\nconst method = \"tuanHeroku\";\r\n\r\nvar REGISTER_URL = \"https://localhost:3000/register\";\r\nvar SIGNIN_URL = \"https://localhost:3000/signin\";\r\nvar PROFILE_URL = \"https://localhost:3000/profile/\";\r\nvar GETWORD_URL = \"https://shrouded-harbor-11572.herokuapp.com/getwordinfo\";\r\nvar CHARSCORE_URL = \"https://shrouded-harbor-11572.herokuapp.com/charscore\";\r\nvar WORDSCORE_URL = \"https://shrouded-harbor-11572.herokuapp.com/wordscore\";\r\nvar MEDIA_BASE_URL_SENTENCE =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/sentence-sound/\";\r\nvar MEDIA_BASE_URL_WORD =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/word-sound/\";\r\n// source: https://www.learn-japanese-adventure.com/learn-how-to-speak-japanese.html\r\nvar MEDIA_BASE_URL_CHAR =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/character-sound/kanasound-\"; // add {romaji}.mp3\r\nvar WORD_LINK =\r\n  \"https://www.reddit.com/r/LearnJapanese/comments/s2iop/heres_a_spreadsheet_of_the_6000_most_common/c4ak0xd/\";\r\nvar TOFUGU_LINK = \"https://www.tofugu.com/japanese/learn-katakana/\";\r\n\r\nswitch (method) {\r\n  case \"local\":\r\n    break;\r\n  case \"tuanHeroku\":\r\n    REGISTER_URL = \"https://shrouded-harbor-11572.herokuapp.com/register\";\r\n    SIGNIN_URL = \"https://shrouded-harbor-11572.herokuapp.com/signin\";\r\n    PROFILE_URL = \"https://shrouded-harbor-11572.herokuapp.com/profile/\";\r\n    break;\r\n  case \"lienHeroku\":\r\n    REGISTER_URL = \"https://peaceful-sands-25473.herokuapp.com/register\";\r\n    SIGNIN_URL = \"https://peaceful-sands-25473.herokuapp.com/signin\";\r\n    PROFILE_URL = \"https://peaceful-sands-25473.herokuapp.com/profile/\";\r\n    break;\r\n  default:\r\n    console.log(\"method should be either tuanHeroku, lienHeroku, or local\");\r\n    break;\r\n}\r\n\r\nexport {\r\n  REGISTER_URL,\r\n  SIGNIN_URL,\r\n  PROFILE_URL,\r\n  GETWORD_URL,\r\n  MEDIA_BASE_URL_SENTENCE,\r\n  MEDIA_BASE_URL_WORD,\r\n  MEDIA_BASE_URL_CHAR,\r\n  CHARSCORE_URL,\r\n  WORDSCORE_URL,\r\n  WORD_LINK,\r\n  TOFUGU_LINK,\r\n};\r\n","import { USER_INPUT, CHARSCORE_URL } from \"./constants.js\";\r\n\r\nexport const typeAnswer = (text) => {\r\n  return {\r\n    type: USER_INPUT,\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const pressSpace = (context) => {\r\n  switch (context) {\r\n    case \"REQUEST_HINT\":\r\n      return {\r\n        type: \"SPACE_PRESS_FOR_HINT\",\r\n        time: Date.now(),\r\n      };\r\n    case \"CONTINUE_AFTER_ERROR\":\r\n      return {\r\n        type: \"SPACE_PRESS_TO_CONTINUE\",\r\n        time: Date.now(),\r\n      };\r\n    case \"CONTINUE_AFTER_COMPLETE\":\r\n      return {\r\n        type: \"SPACE_PRESS_TO_GO_NEXT\",\r\n        time: Date.now(),\r\n      };\r\n    default:\r\n      return {\r\n        type: \"SPACE_PRESS\",\r\n      };\r\n  }\r\n};\r\n\r\nexport const updateChar = (japchar, romaji) => {\r\n  return {\r\n    type: \"CHAR_UPDATE\",\r\n    currentJapChar: japchar,\r\n    currentRomaji: romaji,\r\n  };\r\n};\r\n\r\nexport const pressEnter = (time) => {\r\n  return {\r\n    type: \"ENTER_PRESS\",\r\n    time: time,\r\n  };\r\n};\r\n\r\nexport const typeWrongAnswer = (userChar, currentChar) => {\r\n  return {\r\n    type: \"WRONG_INPUT\",\r\n    userInput: userChar,\r\n    currentChar: currentChar,\r\n    time: Date.now(),\r\n  };\r\n};\r\n\r\nexport const completeWord = () => {\r\n  return {\r\n    type: \"COMPLETE_WORD\",\r\n    time: Date.now(), // when user complete last character Card\r\n  };\r\n};\r\n\r\nexport const updateWord = (word) => {\r\n  return {\r\n    type: \"UPDATE_WORD\",\r\n    payload: word,\r\n  };\r\n};\r\n\r\nexport const completeChar = (timestamp, completionType) => {\r\n  return {\r\n    type: \"COMPLETE_CHAR\",\r\n    time: timestamp,\r\n    completionType: completionType,\r\n  };\r\n};\r\n\r\nexport const setNewWordTime = (time) => {\r\n  return {\r\n    type: \"SET_NEW_WORD_TIME\",\r\n    time: time,\r\n  };\r\n};\r\n\r\nexport const onAudioPlay = () => {\r\n  return {\r\n    type: \"PLAY_AUDIO\",\r\n  };\r\n};\r\n\r\nexport const onAudioPause = () => {\r\n  return {\r\n    type: \"PAUSE_AUDIO\",\r\n  };\r\n};\r\n","import React from \"react\";\nimport Char from \"./Char.js\";\nimport { Grid } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { completeChar, setNewWordTime } from \"../actions\";\n\nconst mapStateToProps = (state) => {\n  return {\n    charTimestamp: state.changeCardState.charTimestamp,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onCompleteChar: (time, type) => {\n      dispatch(completeChar(time, type));\n    },\n    setNewWordTime: (time) => {\n      dispatch(setNewWordTime(time));\n    },\n  };\n};\n\nclass CharList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dispatchTime: 0,\n    };\n  }\n\n  componentDidMount = () => {\n    const timeStamp = Date.now();\n    this.props.setNewWordTime(timeStamp);\n  };\n\n  partitionCharIndex = (charList) => {\n    var characterCounter = 0;\n\n    const indexPartition = charList.map(\n      (item) => (characterCounter += item.length)\n    );\n\n    return indexPartition;\n  };\n\n  decideCardState = (\n    userInput,\n    cardJapChar,\n    cardRomaji,\n    idx,\n    indexPartition,\n    hintDisplayOn,\n    updateCurrentChar,\n    hintedCharList,\n    onWrongInput,\n    onIncorrectCard,\n    onWordCompletion\n  ) => {\n    var userChar = \"\";\n    var className = \"\";\n    var indexOfCurrentCard = null;\n    var romajiLength = indexPartition[indexPartition.length - 1];\n\n    if (userInput.length >= indexPartition[idx]) {\n      // infer userChar using partitioning indices\n      if (idx === 0) {\n        userChar = userInput.slice(0, indexPartition[idx]);\n      } else {\n        userChar = userInput.slice(\n          indexPartition[idx - 1],\n          indexPartition[idx]\n        );\n      }\n      if (userChar === cardRomaji) {\n        if (hintedCharList.includes(cardRomaji)) {\n          className = className.concat(\" hinted \");\n\n          /* this simple condition is crucial due to prevent repeated 'onCorrectChar' call due to repeated \n          rendering everytime the user types something and \n          update the redux store */\n          if (idx >= this.props.charTimestamp.length) {\n            this.props.onCompleteChar(Date.now(), \"hinted\");\n          }\n        } else {\n          className = className.concat(\" correct \");\n\n          if (idx >= this.props.charTimestamp.length) {\n            this.props.onCompleteChar(Date.now(), \"correct\");\n          }\n        }\n        if (\n          userInput.length >= romajiLength &&\n          idx === indexPartition.length - 1\n        ) {\n          // if the last card is correct\n          onWordCompletion();\n        }\n      } else {\n        className = className.concat(\" incorrect \");\n        onWrongInput(userChar, cardRomaji);\n      }\n    }\n    // decide which Card to highlight\n    for (var i = 0; i < indexPartition.length; i++) {\n      if (userInput.length < indexPartition[i]) {\n        if (!onIncorrectCard) {\n          indexOfCurrentCard = i;\n        } else {\n          indexOfCurrentCard = i - 1;\n        }\n        if (idx === indexOfCurrentCard) {\n          className = className.concat(\" highlighted \");\n          updateCurrentChar(cardJapChar, cardRomaji);\n        }\n        break;\n      }\n    }\n    // fade all cards except the highlighted one\n    if (hintDisplayOn) {\n      if (idx !== indexOfCurrentCard) {\n        className = className.concat(\" o-30 \");\n      }\n    }\n\n    return className;\n  };\n\n  render() {\n    const charList = this.props.charsToRead.map((item) => item.romaji);\n    const indexPartition = this.partitionCharIndex(charList);\n\n    const charsArrayDisplay = this.props.charsToRead.map((item, i) => {\n      return (\n        <Grid item key={i}>\n          <Char\n            char={item.char}\n            key={i}\n            cardState={this.decideCardState(\n              this.props.userInput,\n              item.char,\n              item.romaji,\n              i,\n              indexPartition,\n              this.props.hintDisplayOn,\n              this.props.updateCurrentChar,\n              this.props.hintedCharList,\n              this.props.onWrongInput,\n              this.props.onIncorrectCard,\n              this.props.onWordCompletion\n            )}\n          />\n        </Grid>\n      );\n    });\n\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing=\"1\"\n      >\n        {charsArrayDisplay}\n      </Grid>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CharList);\n","import React from \"react\";\nimport \"../containers/App.css\";\nimport { Input } from \"@material-ui/core\";\n\nclass CharInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <form>\n        <Input\n          placeholder=\"Start typing here...\"\n          inputProps={{ \"aria-label\": \"description\" }}\n          onChange={this.props.onInputChange}\n          onKeyDown={this.props.onSpecialKeyPress}\n          autoFocus\n          inputRef={this.formRef}\n        />\n      </form>\n    );\n  }\n}\n\nexport default CharInput;\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst NavBar = ({ onRouteChange }) => {\n  const classes = useStyles();\n\n  return (\n    <div className = {classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title} align=\"left\">\n            Japanese vs. English words\n          </Typography>\n          <Button\n            color=\"inherit\"\n            onClick={() => onRouteChange(\"signin\")}\n          >\n            Signout\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\nexport default NavBar;\n","// Taken from this https://stackoverflow.com/questions/47686345/playing-sound-in-reactjs\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { onAudioPlay, onAudioPause } from \"../actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    audioIsPlaying: state.changeGeneralState.audioIsPlaying,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAudioPlay: () => {\r\n      dispatch(onAudioPlay());\r\n    },\r\n    onAudioPause: () => {\r\n      dispatch(onAudioPause());\r\n    },\r\n  };\r\n};\r\n\r\nclass Music extends React.Component {\r\n  state = {\r\n    play: false,\r\n    audio: new Audio(`${this.props.audioLink}`),\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.state.audio.addEventListener(\"ended\", () => {\r\n      this.setState({ play: false });\r\n      console.log(\"end audio\");\r\n      this.props.onAudioPause();\r\n    });\r\n    setTimeout(() => {\r\n      this.state.audio.play();\r\n      this.props.onAudioPlay();\r\n    }, this.props.delay);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.state.audio.removeEventListener(\"ended\", () =>\r\n      this.setState({ play: false })\r\n    );\r\n  }\r\n\r\n  togglePlay = () => {\r\n    this.setState({ play: !this.state.play }, () => {\r\n      if (this.state.play) {\r\n        this.state.audio.play();\r\n        console.log(\"distpach\");\r\n        this.props.onAudioPlay();\r\n      } else {\r\n        this.state.audio.pause();\r\n        this.props.onAudioPause();\r\n      }\r\n      // this.state.play ? this.state.audio.play() : this.state.audio.pause();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.togglePlay}>\r\n          {this.state.play ? \"Pause Audio\" : \"Play Audio\"}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Music);\r\n","const katakanaToRomaji = {\r\n  ア: \"a\",\r\n  イ: \"i\",\r\n  ウ: \"u\",\r\n  エ: \"e\",\r\n  オ: \"o\",\r\n  カ: \"ka\",\r\n  キ: \"ki\",\r\n  ク: \"ku\",\r\n  ケ: \"ke\",\r\n  コ: \"ko\",\r\n  サ: \"sa\",\r\n  シ: \"shi\",\r\n  ス: \"su\",\r\n  セ: \"se\",\r\n  ソ: \"so\",\r\n  タ: \"ta\",\r\n  チ: \"chi\",\r\n  ツ: \"tsu\",\r\n  テ: \"te\",\r\n  ト: \"to\",\r\n  ナ: \"na\",\r\n  ニ: \"ni\",\r\n  ヌ: \"nu\",\r\n  ネ: \"ne\",\r\n  ノ: \"no\",\r\n  ハ: \"ha\",\r\n  ヒ: \"hi\",\r\n  フ: \"fu\",\r\n  ヘ: \"he\",\r\n  ホ: \"ho\",\r\n  マ: \"ma\",\r\n  ミ: \"mi\",\r\n  ム: \"mu\",\r\n  メ: \"me\",\r\n  モ: \"mo\",\r\n  ヤ: \"ya\",\r\n  ユ: \"yu\",\r\n  ヨ: \"yo\",\r\n  ラ: \"ra\",\r\n  リ: \"ri\",\r\n  ル: \"ru\",\r\n  レ: \"re\",\r\n  ロ: \"ro\",\r\n  ワ: \"wa\",\r\n  ヲ: \"wo\",\r\n  ン: \"n\",\r\n};\r\n\r\nconst katakanaHint = {\r\n  ア: {\r\n    romaji: \"a\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A2.jpg\",\r\n    shortHint: \"Find the capital 'A'\",\r\n  },\r\n  イ: {\r\n    romaji: \"i\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A4.jpg\",\r\n    shortHint: \"It looks like an <u>ea</u>gle (i)\",\r\n  },\r\n  ウ: {\r\n    romaji: \"u\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AB.jpg\",\r\n    shortHint: \"ウ looks like う (u)\",\r\n  },\r\n  エ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A8.jpg\",\r\n    shortHint:\r\n      \"Imagine this is the girders an <u>e</u> engineer would use to build buildings\",\r\n  },\r\n  オ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AA.jpg\",\r\n    shortHint:\r\n      'A dude flapping open his trench coat to flash you. \"<u>Oh</u> MY GOD!\" you say. ',\r\n  },\r\n  カ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AB.jpg\",\r\n    shortHint: \"It looks just like the Hiragana か\",\r\n  },\r\n  キ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AD.jpg\",\r\n    shortHint: \"A key (ki)\",\r\n  },\r\n  ク: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AF.jpg\",\r\n    shortHint: \"A long <u>coo</u>ks's (ku) hat\",\r\n  },\r\n  ケ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B1.jpg\",\r\n    shortHint: \"It looks like the letter <u>K</u> (ke)\",\r\n  },\r\n  コ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B3.jpg\",\r\n    shortHint: \"Two 90 degrees <u>co</u>rners (ko)\",\r\n  },\r\n  サ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B5.jpg\",\r\n    shortHint: \"Three <u>sa</u>rdines stacked on top of each other\",\r\n  },\r\n  シ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B7.jpg\",\r\n    shortHint: \"<u>She</u> has a very werid face (shi)\",\r\n  },\r\n  ス: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B9.jpg\",\r\n    shortHint: \"A hanger where you hang up your fancy <u>su</u>it (su)\",\r\n  },\r\n  セ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BB.jpg\",\r\n    shortHint: \"It looks like the Hiragana せ\",\r\n  },\r\n  ソ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BD.jpg\",\r\n    shortHint: \"One needle and a long thread which you use to <u>sew</u> (so)\",\r\n  },\r\n  タ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BF.jpg\",\r\n    shortHint: \"A <u>ti</u>dal wave racing across the sea (ta)\",\r\n  },\r\n  チ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%81.jpg\",\r\n    shortHint: \"A <u>chee</u>rleader doing a <u>chee</u>r (chi)\",\r\n  },\r\n  ツ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%84.jpg\",\r\n    shortHint: \"<u>Two</u> (tsu) needles\",\r\n  },\r\n  テ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%86.jpg\",\r\n    shortHint: \"A <u>te</u>lephone pole\",\r\n  },\r\n  ト: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%88.jpg\",\r\n    shortHint: \"A <u>to</u>tem pole\",\r\n  },\r\n  ナ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8A.jpg\",\r\n    shortHint: \"A majestic <u>na</u>rwhal\",\r\n  },\r\n  ニ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8B.jpg\",\r\n    shortHint: \"Two <u>nee</u>dles (ni) laying on their side\",\r\n  },\r\n  ヌ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8C.jpg\",\r\n    shortHint:\r\n      \"The chopsticks are grabbing onto some <u>noo</u>dles & pulling them out of a bowl. (nu)\",\r\n  },\r\n  ネ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8D.jpg\",\r\n    shortHint: \"A <u>ne</u>cromancer has summoned this zombie\",\r\n  },\r\n  ノ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8E.jpg\",\r\n    shortHint: \"A really long <u>no</u>se\",\r\n  },\r\n  ハ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8F.jpg\",\r\n    shortHint: \"A rice paddy <u>ha</u>t\",\r\n  },\r\n  ヒ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%92.jpg\",\r\n    shortHint: \"<u>He</u> (hi) has no head. <u>He</u> is reaching out to you.\",\r\n  },\r\n  フ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%95.jpg\",\r\n    shortHint: \"A <u>fu</u>nny looking owl\",\r\n  },\r\n  ヘ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%98.jpg\",\r\n    shortHint: \"This looks like the Hiragana へ\",\r\n  },\r\n  ホ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9B.jpg\",\r\n    shortHint: \"A <u>ho</u>ly cross\",\r\n  },\r\n  マ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9E.jpg\",\r\n    shortHint: \"Look at all those angles! Those lengths! All that <u>ma</u>th!\",\r\n  },\r\n  ミ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9F.jpg\",\r\n    shortHint: \"Three <u>mi</u>ssiles, flying towards you. Be careful!\",\r\n  },\r\n  ム: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A0.jpg\",\r\n    shortHint: \"It is shaped like a pile of poop. Cow poop. <u>Moo</u>. (mu)\",\r\n  },\r\n  メ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A1.jpg\",\r\n    shortHint: 'め <u>Me</u> is Japnese for \"eye\"',\r\n  },\r\n  モ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A2.jpg\",\r\n    shortHint: \"This looks like the Hiragana も\",\r\n  },\r\n  ヤ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A4.jpg\",\r\n    shortHint: \"This looks just like the Hiragana や\",\r\n  },\r\n  ユ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A6.jpg\",\r\n    shortHint: \"You (yu) have a hook for a hand\",\r\n  },\r\n  ヨ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A8.jpg\",\r\n    shortHint: \"A <u>yo</u>gurt containers\",\r\n  },\r\n  ラ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A9.jpg\",\r\n    shortHint: \"It is a <u>ra</u>ptor wearing sweet <u>ra</u>y-bans\",\r\n  },\r\n  リ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AA.jpg\",\r\n    shortHint: \"It looks like the Hiragana り\",\r\n  },\r\n  ル: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AB.jpg\",\r\n    shortHint:\r\n      \"There are two <u>rou</u>tes (ru) you can take. Route 1 & Route 2.\",\r\n  },\r\n  レ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AC.jpg\",\r\n    shortHint: \"Look at that beautiful <u>re</u>d hair that <u>Re</u>i has!\",\r\n  },\r\n  ロ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AD.jpg\",\r\n    shortHint:\r\n      \"This <u>ro</u>ad goes around in a square, never ending. What a terrible <u>ro</u>ad this is.\",\r\n  },\r\n  ワ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AF.jpg\",\r\n    shortHint:\r\n      \"You often begin your question with the word <u>wha</u>t (wa). <u>Wha</u>t are you doing?\",\r\n  },\r\n  ヲ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%B2.jpg\",\r\n    shortHint: \"A dog <u>wo</u>ofing (wo) so hard its tongue is flying out\",\r\n  },\r\n  ン: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%B3.jpg\",\r\n    shortHint: \"This guy only has one eye. <u>N</u>oooo!\",\r\n  },\r\n};\r\n\r\nexport { katakanaToRomaji, katakanaHint };\r\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Music from \"./Music\";\nimport { katakanaToRomaji, katakanaHint } from \"../jap-char\";\nimport { MEDIA_BASE_URL_CHAR } from \"../constants\";\n\n//original component\n// const Hint = () =>{\n//     return(\n//         <div className = \"mw5 center bg-white br3 pa3 ba b--black-10\">\n//             <img alt ='character mnemonic' width=\"200\" height=\"200\" src=''/>\n//             <div>\n//                 <hr className=\"mw3 bb bw1 b--black-10\"></hr>\n//                 <p>This will be a brief explanation</p>\n//             </div>\n//         </div>\n//     );\n// }\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 320,\n  },\n  media: {\n    height: 200,\n  },\n});\n\nconst parseoutUnderlineText = (sentence) => {\n  // replace <b> and </b> with comma\n  var sentence = sentence.replace(/<\\/?u>/g, \",\");\n  return sentence.split(\",\");\n};\n\nexport default function Hint({ currentHintedChar }) {\n  const classes = useStyles();\n  const romaji = katakanaToRomaji[currentHintedChar];\n  const sentenceFragments = parseoutUnderlineText(\n    katakanaHint[currentHintedChar].shortHint\n  );\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          component=\"img\"\n          alt=\"Hint for character\"\n          image={katakanaHint[currentHintedChar].imageLink}\n          title=\"Hint for character\"\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {sentenceFragments[0]}\n            <u>{sentenceFragments[1]}</u>\n            {sentenceFragments[2]}\n          </Typography>\n          <br></br>\n          <Music audioLink={MEDIA_BASE_URL_CHAR + romaji + \".mp3\"} />\n        </CardContent>\n      </CardActionArea>\n      {/* <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions> */}\n    </Card>\n  );\n}\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { SIGNIN_URL } from \"../constants\";\r\nimport { sizing } from \"@material-ui/system\";\r\n\r\nconst useStyles = (theme) => ({\r\n  container: {\r\n    fontFamily: \"Roboto\",\r\n    backfround: \"white\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper2: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 500,\r\n      height: 450,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\",\r\n      emailErrorMsg: \"\",\r\n      passwordErrorMsg: \"\",\r\n    };\r\n  }\r\n\r\n  onEmailInput = (event) => {\r\n    this.setState({ signInEmail: event.target.value, emailErrorMsg: \"\" });\r\n  };\r\n\r\n  onPasswordInput = (event) => {\r\n    this.setState({ signInPassword: event.target.value, passwordErrorMsg: \"\" });\r\n  };\r\n\r\n  sendSigninInfoToBackend = () => {\r\n    const { signInEmail, signInPassword } = this.state;\r\n\r\n    fetch(SIGNIN_URL, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: signInEmail,\r\n        password: signInPassword,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (Object.keys(data).length === 4) {\r\n          this.props.loadUser(data);\r\n          this.props.onRouteChange(\"home\");\r\n          this.setState({\r\n            emailErrorMsg: \"\",\r\n            passwordErrorMsg: \"\",\r\n          });\r\n        } else {\r\n          // there is an error loggin in\r\n          console.log(\"Login Failed\", data);\r\n          if (data === \"email is not yet registered\") {\r\n            this.setState({ emailErrorMsg: data });\r\n          } else if (data === \"incorrect password\") {\r\n            this.setState({\r\n              passwordErrorMsg: data,\r\n              emailErrorMsg: \"\",\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error!\", error);\r\n      });\r\n  };\r\n\r\n  onSignIn = (event) => {\r\n    event.preventDefault();\r\n    const { signInEmail, signInPassword } = this.state;\r\n\r\n    // check that fields are not empty\r\n    if (!signInEmail) {\r\n      this.setState({ emailErrorMsg: \"please fill out your email\" });\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n    if (!signInPassword) {\r\n      this.setState({ passwordErrorMsg: \"please fill out your password\" });\r\n    } else {\r\n      this.setState({ passwordErrorMsg: \"\" });\r\n    }\r\n\r\n    if (signInEmail && signInPassword) {\r\n      this.sendSigninInfoToBackend();\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Paper className={classes.paper2} elevation={3}>\r\n        <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <form className={classes.form} noValidate>\r\n              <TextField\r\n                error={this.state.emailErrorMsg}\r\n                helperText={this.state.emailErrorMsg}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onChange={this.onEmailInput}\r\n              />\r\n              <TextField\r\n                error={this.state.passwordErrorMsg}\r\n                helperText={this.state.passwordErrorMsg}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={this.onPasswordInput}\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={this.onSignIn}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n              >\r\n                <Grid item xs>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    {\"Forgot password?\"}\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link\r\n                    component=\"button\"\r\n                    variant=\"body2\"\r\n                    onClick={() => this.props.onRouteChange(\"register\")}\r\n                  >\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Signin);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { REGISTER_URL } from \"../constants\";\r\n\r\nconst useStyles = (theme) => ({\r\n  container: {\r\n    fontFamily: \"Roboto\",\r\n    backfround: \"white\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper2: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 500,\r\n      height: 450,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      nameError: false,\r\n      emailError: false,\r\n      passwordError: false,\r\n      nameErrorMsg: \"\",\r\n      emailErrorMsg: \"\",\r\n      passwordErrorMsg: \"\",\r\n    };\r\n  }\r\n\r\n  validateEmail(email) {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  onNameInput = (event) => {\r\n    this.setState({ name: event.target.value, nameErrorMsg: \"\" });\r\n  };\r\n\r\n  onEmailInput = (event) => {\r\n    this.setState({ email: event.target.value, emailErrorMsg: \"\" });\r\n  };\r\n\r\n  onPasswordInput = (event) => {\r\n    this.setState({ password: event.target.value, passwordErrorMsg: \"\" });\r\n  };\r\n\r\n  sendFormDataToBackEnd = () => {\r\n    const { name, email, password } = this.state;\r\n\r\n    fetch(REGISTER_URL, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (Object.keys(data).length === 4) {\r\n          this.setState({ emailErrorMsg: \"\" });\r\n          this.props.loadUser(data);\r\n          this.props.onRouteChange(\"home\");\r\n        } else {\r\n          // if user already exist\r\n          this.setState({ emailErrorMsg: data });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error!\", error);\r\n      });\r\n  };\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { name, email, password } = this.state;\r\n\r\n    if (!name) {\r\n      this.setState({ nameErrorMsg: \"please fill out your name\" });\r\n    } else {\r\n      this.setState({ nameErrorMsg: \"\" });\r\n    }\r\n    if (!email) {\r\n      this.setState({ emailErrorMsg: \"please fill out your email\" });\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n    if (!password) {\r\n      this.setState({ passwordErrorMsg: \"please fill out your password\" });\r\n    } else {\r\n      this.setState({ passwordErrorMsg: \"\" });\r\n    }\r\n\r\n    if (!this.validateEmail(email)) {\r\n      this.setState({ emailErrorMsg: \"please enter a valid email address\" });\r\n      return;\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n\r\n    if (name && password && email) {\r\n      this.sendFormDataToBackEnd();\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { nameErrorMsg, emailErrorMsg, passwordErrorMsg } = this.state;\r\n    return (\r\n      <Paper className={classes.paper2}>\r\n        <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Register\r\n            </Typography>\r\n            <form className={classes.form} noValidate>\r\n              <TextField\r\n                error={nameErrorMsg}\r\n                helperText={nameErrorMsg}\r\n                variant=\"outlined\"\r\n                id=\"name\"\r\n                label=\"Your Name\"\r\n                autoFocus\r\n                required\r\n                fullWidth\r\n                onChange={this.onNameInput}\r\n              />\r\n              <TextField\r\n                error={emailErrorMsg}\r\n                helperText={emailErrorMsg}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={this.onEmailInput}\r\n              />\r\n              <TextField\r\n                error={passwordErrorMsg}\r\n                helperText={passwordErrorMsg}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={this.onPasswordInput}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={this.onFormSubmit}\r\n              >\r\n                Register\r\n              </Button>\r\n              <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <Link\r\n                    component=\"button\"\r\n                    variant=\"body2\"\r\n                    onClick={() => this.props.onRouteChange(\"signin\")}\r\n                  >\r\n                    {\"Already registered? Sign In\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Register);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Music from \"./Music\";\r\nimport { MEDIA_BASE_URL_SENTENCE, MEDIA_BASE_URL_WORD } from \"../constants\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nconst parseoutBoldText = (sentence) => {\r\n  // replace <b> and </b> with comma\r\n  var sentence = sentence.replace(/<\\/?b>/g, \",\");\r\n  return sentence.split(\",\");\r\n};\r\n\r\nexport default function OutlinedCard({ wordInfo }) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  var el = document.createElement(\"html\");\r\n  el.innerHTML = \"<b>bolded text</b>\";\r\n  const sentenceSegments = parseoutBoldText(wordInfo.sentence_expression);\r\n\r\n  const parseAudio = (audio_string) => {\r\n    return audio_string.slice(7, audio_string.length - 1);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          Word Meaning\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {wordInfo.vocab_meaning} ({wordInfo.vocab_pos})\r\n          <Music\r\n            audioLink={`${MEDIA_BASE_URL_WORD}${parseAudio(\r\n              wordInfo.vocab_sound_local\r\n            )}`}\r\n          />\r\n        </Typography>\r\n        <br></br>\r\n\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          Sample Sentence\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {sentenceSegments[0]}\r\n          <b>\r\n            <u>{sentenceSegments[1]}</u>\r\n          </b>\r\n          {sentenceSegments[2]}\r\n          <Music\r\n            audioLink={`${MEDIA_BASE_URL_SENTENCE}${parseAudio(\r\n              wordInfo.sentence_sound_local\r\n            )}`}\r\n            delay={1500}\r\n          />\r\n        </Typography>\r\n        <br></br>\r\n\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          Sentence Meaning\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {wordInfo.sentence_meaning}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CharList from \"../components/CharList.js\";\nimport CharInput from \"../components/CharInput\";\nimport NavBar from \"../components/NavBar\";\nimport Hint from \"../components/Hint\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { katakanaToRomaji } from \"../jap-char.js\";\nimport Signin from \"../components/Signin\";\nimport Register from \"../components/Register\";\nimport WordCard from \"../components/WordCard\";\nimport \"./App.css\";\nimport {\n  GETWORD_URL,\n  CHARSCORE_URL,\n  WORDSCORE_URL,\n  TOFUGU_LINK,\n  WORD_LINK,\n} from \"../constants\";\n\nimport {\n  typeAnswer,\n  pressSpace,\n  updateChar,\n  pressEnter,\n  typeWrongAnswer,\n  completeWord,\n  updateWord,\n  completeChar,\n} from \"../actions\";\n\nconst mapStateToProps = (state) => {\n  return {\n    userInput: state.changeInputBox.inputBox,\n    currentJapChar: state.changeCardState.currentJapChar,\n    currentRomaji: state.changeCardState.currentRomaji,\n    hintedCharList: state.changeCardState.hintedCharList,\n    wrongCharList: state.changeCardState.wrongCharList,\n    onIncorrectCard: state.changeCardState.onIncorrectCard,\n    curWrongChar: state.changeCardState.curWrongChar,\n    onHintedCard: state.changeCardState.onHintedCard,\n    wordCompleted: state.changeCardState.wordCompleted,\n    currentWord: state.changeCardState.currentWord,\n    charTimestamp: state.changeCardState.charTimestamp,\n    audioIsPlaying: state.changeGeneralState.audioIsPlaying,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onInputBoxChange: (event) => {\n      dispatch(typeAnswer(event.target.value));\n    },\n    setCurrentChar: (japchar, romaji) => {\n      dispatch(updateChar(japchar, romaji));\n    },\n    onEnterPress: (time) => {\n      dispatch(pressEnter(time));\n    },\n    onWrongInput: (userChar, currentChar) => {\n      dispatch(typeWrongAnswer(userChar, currentChar));\n    },\n    onSpacePress: (context) => {\n      dispatch(pressSpace(context));\n    },\n    onWordCompletion: () => {\n      dispatch(completeWord());\n    },\n    updateWord: (word) => {\n      dispatch(updateWord(word));\n    },\n    onCompleteChar: (time, type) => {\n      dispatch(completeChar(time, type));\n    },\n  };\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: \"signin\",\n      userInfo: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        joined: \"\",\n      },\n      currentWordInfo: null,\n    };\n    this.charInputRef = React.createRef();\n  }\n\n  onRouteChange = (route) => {\n    this.setState({ route: route });\n  };\n\n  parseJapaneseWord = (word) => {\n    var charsToRead = [];\n    for (const c of word) {\n      var c_romaji = katakanaToRomaji[c] || \"??\";\n      charsToRead.push({ char: c, romaji: c_romaji });\n    }\n    return charsToRead;\n  };\n\n  convertTimeToScoreDelta = (charTimestamp) => {\n    return charTimestamp.map((item) => {\n      var score_delta = 20000 / item.time;\n      if (item.type === \"hinted\") {\n        score_delta *= -1;\n      }\n      return {\n        char: item.char,\n        score_delta: score_delta,\n      };\n    });\n  };\n\n  updateCharScore = (user_uid, scoreDeltaList) => {\n    fetch(CHARSCORE_URL, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_uid: user_uid,\n        charScoreDeltaList: scoreDeltaList,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"update char score success\", data);\n      })\n      .catch((error) => {\n        console.log(\"Failed to update char score\", error);\n      });\n  };\n\n  updateWordScore = (user_uid, word) => {\n    console.log(\"POST TO WORD\", word);\n    fetch(WORDSCORE_URL, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_uid: user_uid,\n        word: word,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"update word score success\", data);\n      })\n      .catch((error) => {\n        console.log(\"Failed to update word score\", error);\n      });\n  };\n\n  requestNewWord = () => {\n    fetch(GETWORD_URL, {\n      method: \"get\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((word) => {\n        updateWord(word.vocab_kana);\n        this.setState({ currentWordInfo: word });\n        console.log(\n          \"CURRENT WORD CHEAT\",\n          this.parseJapaneseWord(word.vocab_kana)\n        );\n      })\n      .catch((err) => {\n        console.log(\"Error in getting next word\", err);\n      });\n  };\n\n  onSpecialKeyPress = (event) => {\n    const {\n      currentRomaji,\n      curWrongChar,\n      onIncorrectCard,\n      onHintedCard,\n      onSpacePress,\n      onEnterPress,\n      onInputBoxChange,\n      wordCompleted,\n      updateWord,\n      onCompleteChar,\n      charTimestamp,\n      currentWord,\n      audioIsPlaying,\n    } = this.props;\n\n    if (audioIsPlaying) {\n      event.preventDefault();\n      return;\n    }\n\n    if (onIncorrectCard || onHintedCard || wordCompleted) {\n      event.preventDefault();\n    }\n\n    // handle SPACE press\n    if (event.which === 32) {\n      event.preventDefault();\n      if (!onIncorrectCard && !onHintedCard && !wordCompleted) {\n        onSpacePress(\"REQUEST_HINT\");\n        onCompleteChar(Date.now(), \"hinted\");\n      } else if (onIncorrectCard) {\n        // remove wrong input\n        event.target.value = event.target.value.slice(0, -curWrongChar.length);\n        onInputBoxChange(event);\n        onSpacePress(\"CONTINUE_AFTER_ERROR\");\n      } else if (wordCompleted) {\n        this.requestNewWord();\n        const scoreDeltaList = this.convertTimeToScoreDelta(charTimestamp);\n        this.updateCharScore(this.state.userInfo.id, scoreDeltaList);\n        this.updateWordScore(this.state.userInfo.id, currentWord);\n        onSpacePress(\"CONTINUE_AFTER_COMPLETE\");\n\n        event.target.value = \"\";\n        onInputBoxChange(event);\n      }\n    }\n\n    // handle ENTER press\n    if (event.which === 13) {\n      event.preventDefault();\n      if (onHintedCard) {\n        // autofill correct answer\n        event.target.value = event.target.value.concat(currentRomaji);\n        onInputBoxChange(event);\n        onEnterPress(Date.now());\n      }\n    }\n  };\n\n  loadUser = (user) => {\n    const { user_uid, name, email, joined } = user;\n    this.setState((prevState) => {\n      let userInfo = { ...prevState.userInfo };\n      userInfo.name = name;\n      userInfo.id = user_uid;\n      userInfo.email = email;\n      userInfo.joined = joined;\n      return { userInfo };\n    });\n    console.log(\"userInfo\", this.state.userInfo);\n  };\n\n  // refocus on inputbox when pressing ENTER or SPACE\n  keypressGlobalHandler = (event) => {\n    const { wordCompleted } = this.props;\n\n    if (this.state.route === \"home\") {\n      if (event.which === 32 || wordCompleted) {\n      }\n      if (event.which === 32 || event.which === 13) {\n        event.preventDefault();\n        this.charInputRef.current.formRef.current.focus();\n      }\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"keypress\", this.keypressGlobalHandler);\n    fetch(GETWORD_URL, {\n      method: \"get\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((word) => {\n        this.setState({ currentWordInfo: word });\n        this.props.updateWord(word.vocab_kana);\n        console.log(\n          \"CURRENT WORD CHEAT\",\n          this.parseJapaneseWord(word.vocab_kana)\n        );\n      })\n      .catch((err) => {\n        console.log(\"Error in getting first word\", err);\n      });\n  }\n\n  showHint = () => {\n    if (this.props.onHintedCard) {\n      return <Hint currentHintedChar={this.props.currentJapChar} />;\n    }\n  };\n\n  displayWordInfo = () => {\n    if (this.props.wordCompleted) {\n      return <WordCard wordInfo={this.state.currentWordInfo} />;\n    }\n  };\n\n  displayMessage = () => {\n    const {\n      onIncorrectCard,\n      wrongCharList,\n      curWrongChar,\n      onHintedCard,\n      wordCompleted,\n    } = this.props;\n\n    if (onIncorrectCard) {\n      const userWrongInput = wrongCharList[curWrongChar];\n      return (\n        <div>\n          <p>{`This character is not \"${userWrongInput}\"`}</p>\n          <p>press SPACE to try again</p>\n        </div>\n      );\n    } else if (onHintedCard) {\n      return <p>press ENTER to continue</p>;\n    } else if (wordCompleted) {\n      return <p>press SPACE to continue</p>;\n    } else {\n      return <p>You can press SPACE for hint</p>;\n    }\n  };\n\n  renderRoute = (route) => {\n    switch (route) {\n      case \"signin\":\n        return (\n          <Signin onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n        );\n      case \"register\":\n        return (\n          <Register\n            onRouteChange={this.onRouteChange}\n            loadUser={this.loadUser}\n          />\n        );\n      case \"home\":\n        const {\n          userInput,\n          onHintedCard,\n          setCurrentChar,\n          hintedCharList,\n          onWrongInput,\n          wrongCharList,\n          onIncorrectCard,\n          onWordCompletion,\n          currentWord,\n        } = this.props;\n\n        return (\n          <div>\n            <NavBar onRouteChange={this.onRouteChange} />\n            <div className= \"tmw5 center bg-white br3 pa1 ma1 ba b--black-10 o-40 tl\">\n            <Paper elevation={0} />\n            <p>Welcome, {this.state.userInfo.name}! </p>\n                <ul>\n                  <li>Press SPACE to learn the character in the highlighted card</li>\n                  <li>Type the character as fast as you can if you've already known the character</li>\n                </ul>\n            </div>\n            \n            <Grid\n              container\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Paper elevation={0} />\n              <CharInput\n                onInputChange={this.props.onInputBoxChange}\n                onSpecialKeyPress={this.onSpecialKeyPress}\n                ref={this.charInputRef}\n              />\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CharList\n                    charsToRead={this.parseJapaneseWord(currentWord)}\n                    userInput={userInput}\n                    hintDisplayOn={onHintedCard}\n                    updateCurrentChar={setCurrentChar}\n                    hintedCharList={hintedCharList}\n                    onWrongInput={onWrongInput}\n                    wrongCharList={wrongCharList}\n                    onIncorrectCard={onIncorrectCard}\n                    onWordCompletion={onWordCompletion}\n                  />\n                </Grid>\n                <div>{this.displayMessage()}</div>\n                <Grid item>\n                  <Paper elevation={1} />\n                  {this.showHint()}\n                </Grid>\n                <div>{this.displayWordInfo()}</div>\n              </Grid>\n            </Grid>\n            <footer id=\"footer\">\n              <p>\n                Mnemonics taken from <a href={TOFUGU_LINK}>tofugu.com</a>\n              </p>\n              <p>\n                Japanese words taken from{\" \"}\n                <a href={WORD_LINK}>reddit.com/r/LearnJapanese</a>\n              </p>\n            </footer>\n          </div>\n        );\n      default:\n        return <div>Default</div>;\n    }\n  };\n\n  render() {\n    return <div className=\"tc\">{this.renderRoute(this.state.route)}</div>;\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { USER_INPUT } from \"./constants\";\r\n\r\nconst initialInputBox = {\r\n  inputBox: \"\",\r\n};\r\n\r\nconst initialGeneralState = {\r\n  audioIsPlaying: false,\r\n};\r\n\r\nconst initialCardState = {\r\n  currentJapChar: \"コ\",\r\n  currentRomaji: \"\",\r\n  hintedCharList: [],\r\n  wrongCharList: {},\r\n  onIncorrectCard: false,\r\n  curWrongChar: \"\",\r\n  onHintedCard: false,\r\n  wordCompleted: false,\r\n  currentWord: \"\",\r\n  prevTimestamp: null,\r\n  charTimestamp: [],\r\n  allCharTimestamp: [],\r\n};\r\n\r\nexport const changeGeneralState = (\r\n  state = initialGeneralState,\r\n  action = {}\r\n) => {\r\n  switch (action.type) {\r\n    case \"PLAY_AUDIO\":\r\n      return { ...state, audioIsPlaying: true };\r\n    case \"PAUSE_AUDIO\":\r\n      return { ...state, audioIsPlaying: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const changeInputBox = (state = initialInputBox, action = {}) => {\r\n  switch (action.type) {\r\n    case USER_INPUT:\r\n      return { ...state, inputBox: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const changeCardState = (state = initialCardState, action = {}) => {\r\n  switch (action.type) {\r\n    case \"CHAR_UPDATE\":\r\n      return {\r\n        ...state,\r\n        currentJapChar: action.currentJapChar,\r\n        currentRomaji: action.currentRomaji,\r\n      };\r\n    case \"ENTER_PRESS\":\r\n      return {\r\n        ...state,\r\n        hintedCharList: [...state.hintedCharList, state.currentRomaji],\r\n        onHintedCard: false,\r\n        prevTimestamp: action.time,\r\n      };\r\n    case \"WRONG_INPUT\":\r\n      state.wrongCharList[action.currentChar] = action.userInput;\r\n      return {\r\n        ...state,\r\n        onIncorrectCard: true,\r\n        curWrongChar: action.currentChar,\r\n      };\r\n    case \"SPACE_PRESS_TO_CONTINUE\":\r\n      return { ...state, onIncorrectCard: false };\r\n    case \"SPACE_PRESS_FOR_HINT\":\r\n      return { ...state, onHintedCard: true };\r\n    case \"SPACE_PRESS_TO_GO_NEXT\":\r\n      return {\r\n        ...state,\r\n        wordCompleted: false,\r\n        charTimestamp: [],\r\n        allCharTimestamp: [...state.allCharTimestamp, state.charTimestamp],\r\n        prevTimestamp: action.time,\r\n        hintedCharList: [],\r\n      };\r\n    case \"COMPLETE_WORD\":\r\n      return { ...state, wordCompleted: true };\r\n    case \"UPDATE_WORD\":\r\n      return { ...state, currentWord: action.payload };\r\n    case \"COMPLETE_CHAR\":\r\n      const newTimestamp = {\r\n        char: state.currentJapChar,\r\n        time: action.time - state.prevTimestamp,\r\n        type: action.completionType,\r\n      };\r\n      console.log(\"TIME STAMP\", newTimestamp);\r\n      return {\r\n        ...state,\r\n        charTimestamp: [...state.charTimestamp, newTimestamp],\r\n        prevTimestamp: action.time,\r\n      };\r\n    case \"SET_NEW_WORD_TIME\":\r\n      return { ...state, prevTimestamp: action.time };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\nimport App from \"./containers/App.js\";\nimport {\n  changeGeneralState,\n  changeInputBox,\n  changeCardState,\n} from \"./reducers\";\n//import \"typeface-roboto\";\n\nconst rootReducer = combineReducers({\n  changeGeneralState,\n  changeInputBox,\n  changeCardState,\n});\nconst logger = createLogger();\n\nconst store = createStore(rootReducer, applyMiddleware(logger));\n// const store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}