{"version":3,"sources":["serviceWorker.js","components/Char.js","constants.js","actions.js","containers/CharList.js","inputChecker.js","jap-char.js","containers/CharInput.js","components/NavBar.js","components/Music.js","components/Hint.js","components/TextBlock.js","components/LoadingPopup.js","components/Signin.js","components/Register.js","components/WordCard.js","components/OutsideAlerter.js","components/Footer.js","components/MessageBar.js","components/SmallChar.js","components/SmallCharList.js","components/KatakanaChar.js","components/KatakanaChart.js","constants/App-constants.js","containers/App.js","reducers.js","index.js"],"names":["Boolean","window","location","hostname","match","Char","className","this","props","cardState","wordCompleted","onClick","onClickCard","char","React","Component","REGISTER_URL","SIGNIN_URL","GETCHARSCORE_URL","MEDIA_BASE_URL_WORD","updateChar","japchar","romaji","type","currentJapChar","currentRomaji","updateWord","word","romajiList","cardStateList","map","item","payload","CharList","componentDidMount","setNewWordTime","Date","now","componentDidUpdate","prevProps","JSON","stringify","charsToRead","setCardState","idx","indexCurrentCard","onHintedCard","concat","clickedJapChar","state","dispatchTime","charsArrayDisplay","Grid","key","container","direction","justify","alignItems","spacing","connect","changeCardState","dispatch","time","TrieNode","parent","children","end","Trie","root","prototype","getWord","output","node","unshift","join","insert","i","length","contains","find","prefix","findAllWords","arr","child","SpellCheckerBuffer","charAndRomaji","checkFunction","wordNotInDictAlert","dict","buffer","charTrie","Object","values","forEach","element","pendingChars","Array","isArray","katakanaToRomaji","ア","イ","ウ","エ","オ","カ","キ","ク","ケ","コ","サ","シ","ス","セ","ソ","タ","チ","ツ","テ","ト","ナ","ニ","ヌ","ネ","ノ","ハ","ヒ","フ","ヘ","ホ","マ","ミ","ム","メ","モ","ヤ","ユ","ヨ","ラ","リ","ル","レ","ロ","ワ","ヲ","ン","clearBuffer","limitedKatakanaList","katakanaHint","imageLink","shortHint","CharInput","user_uid","onCorrectChar","onWrongInput","onWordCompletion","currentWord","setCurrentChar","onCompleteChar","getKeyByValue","updateCharScore","userInputChar","newRomaji","currentChar","onKeyDown","event","onIncorrectCard","audioIsPlaying","disableAllAction","walkThroughEnabled","endWalkThrough","console","log","which","preventDefault","lastCardState","buttonClickOrSpacePressHandler","target","deleteIncorrectInput","goToNextWord","fillHintedCharacter","String","fromCharCode","toLowerCase","onKeyPress","inputChecker","checkInput","eventTarget","onInputBoxChange","onEnterPress","value","curRomaji","onSpacePress","slice","formRef","createRef","alertRomajiNotInDict","setClick","matchClearFormInputFunction","clearInputBox","curWrongChar","resetRomajiNotInDictAlert","updateWordScore","moveToNextWord","requestedWord","Input","placeholder","inputProps","onChange","spellCheck","autoFocus","inputRef","onPaste","changeGeneralState","inputBox","changeInputBox","pressKey","context","pressSpace","userChar","userInput","typeWrongAnswer","completionType","pressEnter","forwardRef","useStyles","makeStyles","theme","flexGrow","title","NavBar","classes","onRouteChange","currentTab","handleClickWalkthrough","useState","open","setOpen","handleClose","AppBar","position","Toolbar","Typography","variant","color","align","Button","startIcon","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Music","play","audio","Audio","audioLink","stopAudioHandler","setState","noStoreUpdateWhenEnded","onAudioPause","simpleStopAudioHandler","newAudio","addEventListener","setTimeout","onAudioPlay","delay","togglePlay","removeEventListener","pause","autoplay","Hint","currentHintedChar","sentenceFragments","replace","split","Card","onClickHandler","Divider","src","alt","CardContent","style","paddingTop","paddingBottom","component","autoplayAudio","TextBlock","description","icon","LoadingPopup","isOpen","CircularProgress","Signin","onEmailInput","signInEmail","emailErrorMsg","onPasswordInput","signInPassword","passwordErrorMsg","sendSigninInfoToBackend","openLoadingPopup","fetch","method","headers","body","email","password","then","response","json","data","keys","loadUser","catch","error","onSignIn","Paper","paper2","elevation","Container","maxWidth","CssBaseline","paper","form","noValidate","TextField","helperText","margin","fullWidth","label","name","autoComplete","FormControlLabel","control","Checkbox","submit","Link","fontSize","withStyles","fontFamily","backfround","marginTop","display","flexDirection","marginBottom","padding","breakpoints","up","width","height","marginLeft","marginRight","Register","onNameInput","nameErrorMsg","sendFormDataToBackEnd","onFormSubmit","validateEmail","nameError","emailError","passwordError","test","minWidth","pos","WordCard","wordInfo","word_audio_duration","document","createElement","innerHTML","sentenceSegments","sentence_expression","parseAudio","audio_string","gutterBottom","vocab_meaning","vocab_pos","vocab_sound_local","sentence_sound_local","sentence_meaning","OutsideAlerter","handleClickOutside","componentWillUnmount","setWrapperRef","wrapperRef","focusInputBox","ref","Footer","href","messageText","textAlign","messageAnimation","borderRight","whiteSpace","overflow","animation","convertMessageLengthToEm","message","borderRightColor","length_in_em","includes","MessageBar","displayHelpMessages","shortid","generate","userName","typography","cardBG","background","correctPercent","hintedPercent","SmallChar","correctNum","hintedNum","anchorEl","setAnchorEl","undefined","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","SmallCharList","requestGetCharScore","res","charResultList","err","computeCorrectPercentage","resultList","total_correct","result","Math","round","computeCorrectNum","reduce","acc","val","kana","correctPercentage","hintedPercentage","isEncountered","KatakanaChar","KatakanaChart","katakanaArray","kana_filteredResultList","filter","resultType","listOfPraises","listOfSoftPraises","WALKTHROUGH_PART_1","intro","WALKTHROUGH_PART_2","WALKTHROUGH_PART_3","WALKTHROUGH_PART_4","LogRocket","init","App","prevState","route","steps1Enabled","steps2Enabled","steps3Enabled","steps4Enabled","userInfo","resetStore","requestAndUpdateWord","requestNewWord","openEndDialogue","USER_TIME_LIMIT_IN_MINUTES","transitionedFromSteps1ToSteps2","hintCardRef","current","transitionedFromSteps2ToSteps3","transitionedFromSteps3ToSteps4","wordCardRef","user","joined","identify","parseJapaneseWord","katakana_word","katakana_char","katakana_romaji","push","score","unix_time","currentWord_unix_time","a","Promise","resolve","isFetchingWord","wordRequestTime","wordRequestTimeStamp","vocab_kana","kana_char","charAt","currentWordInfo","audio_url","duration","charInputRef","focus","innerText","showHint","checkedAudioAutoPlay","displayWordInfo","object","randomItem","aList","floor","random","displayMessage","romajiNotInDict","wrongCharList","cardStateSet","Set","size","has","setButtonText","displayLoadingPopup","handleAudioAutoplaySwitch","handleEnableMessageSwitch","checkedEnableMessage","handleEnableBlueButtonSwitch","checkedEnableBlueButton","onExitIntro1","onExitIntro2","onExitIntro3","onExitIntro4","clearFormInput","onBeforeChange1","nextStepIndex","steps1","updateStepElement","onBeforeChange2","steps2","onBeforeChange3","steps3","onBeforeChange4","steps4","onChangeInSteps","specialIndex","index","_","renderRoute","initialStep","generalStepsOptions","showStepNumbers","hidePrev","hideNext","exitOnOverlayClick","exitOnEsc","showButtons","overlayOpacity","skipLabel","doneLabel","enabled","steps","onExit","options","onBeforeChange","labelPlacement","Switch","checked","click","clickChild","childFunc","disabled","transitionedFromSteps3ToSteps5","initialInputBox","keyPressed","initialGeneralState","initialCardState","hintedCharList","prevTimestamp","charTimestamp","allCharTimestamp","createMuiTheme","palette","primary","main","secondary","rootReducer","combineReducers","action","newTimestamp","logger","createLogger","store","createStore","applyMiddleware","reduxMiddleware","ReactDOM","render","ThemeProvider","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.639dcdd2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport \"../scss/containers/App.scss\";\nimport \"../scss/components/Char.scss\";\n\nclass Char extends React.Component {\n  render() {\n    const className = `card ${this.props.cardState} ${\n      this.props.wordCompleted ? \"card-button\" : \"\"\n    }`;\n    return (\n      <div className={className} onClick={this.props.onClickCard}>\n        <h1 className=\"char\">{this.props.char}</h1>\n      </div>\n    );\n  }\n}\n\nexport default Char;\n","export const USER_INPUT = \"USER_INPUT\";\r\n\r\nconst method = \"tuanHeroku\";\r\n\r\nvar PRIMARYCOLOR = \"#1cb0f6\"\r\n// var PRIMARYCOLOR = \"#45ACE7\"\r\n\r\nvar USER_TIME_LIMIT_IN_MINUTES = 10;\r\nvar REGISTER_URL = \"https://localhost:3000/register\";\r\nvar SIGNIN_URL = \"https://localhost:3000/signin\";\r\nvar PROFILE_URL = \"https://localhost:3000/profile/\";\r\nvar GETWORD_URL = \"https://shrouded-harbor-11572.herokuapp.com/getnextword\";\r\nvar CHARSCORE_URL = \"https://shrouded-harbor-11572.herokuapp.com/charscore\";\r\nvar UPDATECHARSCORE_URL =\r\n  \"https://shrouded-harbor-11572.herokuapp.com/updatecharscore\";\r\nvar WORDSCORE_URL = \"https://shrouded-harbor-11572.herokuapp.com/wordscore\";\r\nvar GETCHARSCORE_URL =\r\n  \"https://shrouded-harbor-11572.herokuapp.com/getcharscore\";\r\nvar MEDIA_BASE_URL_SENTENCE =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/sentence-sound/\";\r\nvar MEDIA_BASE_URL_WORD =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/word-sound/\";\r\n// source: https://www.learn-japanese-adventure.com/learn-how-to-speak-japanese.html\r\nvar MEDIA_BASE_URL_CHAR =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/character-sound/kanasound-\"; // add {romaji}.mp3\r\nvar WORD_LINK =\r\n  \"https://www.reddit.com/r/LearnJapanese/comments/s2iop/heres_a_spreadsheet_of_the_6000_most_common/c4ak0xd/\";\r\nvar TOFUGU_LINK = \"https://www.tofugu.com/japanese/learn-katakana/\";\r\nvar MARSHALSITE_LINK = \"https://marshallyin.com/courses/hiragana-test/?tab=tab-curriculum\";\r\n\r\nswitch (method) {\r\n  case \"local\":\r\n    break;\r\n  case \"tuanHeroku\":\r\n    REGISTER_URL = \"https://shrouded-harbor-11572.herokuapp.com/register\";\r\n    SIGNIN_URL = \"https://shrouded-harbor-11572.herokuapp.com/signin\";\r\n    PROFILE_URL = \"https://shrouded-harbor-11572.herokuapp.com/profile/\";\r\n    break;\r\n  case \"lienHeroku\":\r\n    REGISTER_URL = \"https://peaceful-sands-25473.herokuapp.com/register\";\r\n    SIGNIN_URL = \"https://peaceful-sands-25473.herokuapp.com/signin\";\r\n    PROFILE_URL = \"https://peaceful-sands-25473.herokuapp.com/profile/\";\r\n    break;\r\n  default:\r\n    console.log(\"method should be either tuanHeroku, lienHeroku, or local\");\r\n    break;\r\n}\r\n\r\nexport {\r\n  REGISTER_URL,\r\n  SIGNIN_URL,\r\n  PROFILE_URL,\r\n  GETWORD_URL,\r\n  MEDIA_BASE_URL_SENTENCE,\r\n  MEDIA_BASE_URL_WORD,\r\n  MEDIA_BASE_URL_CHAR,\r\n  CHARSCORE_URL,\r\n  WORDSCORE_URL,\r\n  WORD_LINK,\r\n  TOFUGU_LINK,\r\n  GETCHARSCORE_URL,\r\n  UPDATECHARSCORE_URL,\r\n  USER_TIME_LIMIT_IN_MINUTES,\r\n  PRIMARYCOLOR,\r\n};\r\n","import { USER_INPUT } from \"./constants.js\";\r\n\r\nexport const typeAnswer = (text) => {\r\n  return {\r\n    type: USER_INPUT,\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const pressSpace = (context) => {\r\n  switch (context) {\r\n    case \"REQUEST_HINT\":\r\n      return {\r\n        type: \"SPACE_PRESS_FOR_HINT\",\r\n        time: Date.now(),\r\n      };\r\n    case \"CONTINUE_AFTER_ERROR\":\r\n      return {\r\n        type: \"SPACE_PRESS_TO_CONTINUE\",\r\n        time: Date.now(),\r\n      };\r\n    case \"CONTINUE_AFTER_COMPLETE\":\r\n      return {\r\n        type: \"SPACE_PRESS_TO_GO_NEXT\",\r\n        time: Date.now(),\r\n      };\r\n    default:\r\n      return {\r\n        type: \"SPACE_PRESS\",\r\n      };\r\n  }\r\n};\r\n\r\nexport const updateChar = (japchar, romaji) => {\r\n  return {\r\n    type: \"CHAR_UPDATE\",\r\n    currentJapChar: japchar,\r\n    currentRomaji: romaji,\r\n  };\r\n};\r\n\r\nexport const pressEnter = (time) => {\r\n  return {\r\n    type: \"ENTER_PRESS\",\r\n    time: time,\r\n  };\r\n};\r\n\r\nexport const typeWrongAnswer = (userChar, currentChar) => {\r\n  return {\r\n    type: \"WRONG_INPUT\",\r\n    userInput: userChar,\r\n    currentChar: currentChar,\r\n    time: Date.now(),\r\n  };\r\n};\r\n\r\nexport const completeWord = () => {\r\n  return {\r\n    type: \"COMPLETE_WORD\",\r\n    time: Date.now(), // when user complete last character Card\r\n  };\r\n};\r\n\r\nexport const updateWord = (word, romajiList) => {\r\n  const cardStateList = romajiList.map((item) => \"\");\r\n  return {\r\n    type: \"UPDATE_WORD\",\r\n    payload: word,\r\n    romajiList: romajiList,\r\n    cardStateList: cardStateList,\r\n  };\r\n};\r\n\r\nexport const completeChar = (timestamp, completionType) => {\r\n  return {\r\n    type: \"COMPLETE_CHAR\",\r\n    time: timestamp,\r\n    completionType: completionType,\r\n  };\r\n};\r\n\r\nexport const setNewWordTime = (time) => {\r\n  return {\r\n    type: \"SET_NEW_WORD_TIME\",\r\n    time: time,\r\n  };\r\n};\r\n\r\nexport const onAudioPlay = () => {\r\n  return {\r\n    type: \"PLAY_AUDIO\",\r\n  };\r\n};\r\n\r\nexport const onAudioPause = () => {\r\n  return {\r\n    type: \"PAUSE_AUDIO\",\r\n  };\r\n};\r\n\r\nexport const pressKey = (key) => {\r\n  return {\r\n    type: \"PRESS_KEY\",\r\n    payload: key,\r\n  };\r\n};\r\n\r\nexport const onCorrectChar = () => {\r\n  return {\r\n    type: \"INPUT_CORRECT_CHAR\",\r\n  };\r\n};\r\n\r\nexport const onIncorrectChar = () => {\r\n  return {\r\n    type: \"INPUT_INCORRECT_CHAR\",\r\n  };\r\n};\r\n\r\nexport const resetStore = () => {\r\n  return {\r\n    type: \"RESET_STORE\",\r\n  };\r\n};\r\n\r\nexport const alertRomajiNotInDict = () => {\r\n  return {\r\n    type: \"ALERT_NOT_IN_DICT\",\r\n  };\r\n};\r\n\r\nexport const resetRomajiNotInDictAlert = () => {\r\n  return {\r\n    type: \"RESET_NOT_IN_DICT_ALERT\",\r\n  };\r\n};\r\n","import React from \"react\";\nimport Char from \"../components/Char.js\";\nimport { Grid } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { setNewWordTime } from \"../actions\";\nimport \"../scss/components/Char.scss\";\n\nconst mapStateToProps = (state) => {\n  return {\n    // charTimestamp: state.changeCardState.charTimestamp,\n    // keyPressed: state.changeInputBox.keyPressed,\n    indexCurrentCard: state.changeCardState.indexCurrentCard,\n    cardStateList: state.changeCardState.cardStateList,\n    onHintedCard: state.changeCardState.onHintedCard,\n    wordCompleted: state.changeCardState.wordCompleted,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setNewWordTime: (time) => {\n      dispatch(setNewWordTime(time));\n    },\n  };\n};\n\nclass CharList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dispatchTime: 0,\n    };\n  }\n\n  componentDidMount = () => {\n    this.props.setNewWordTime(Date.now());\n  };\n\n  componentDidUpdate = (prevProps) => {\n    if (\n      JSON.stringify(this.props.charsToRead) !==\n      JSON.stringify(prevProps.charsToRead)\n    ) {\n      this.props.setNewWordTime(Date.now());\n    }\n  };\n\n  setCardState = (idx, char) => {\n    const {\n      indexCurrentCard,\n      cardStateList,\n      onHintedCard,\n      wordCompleted,\n    } = this.props;\n    var className = \"\";\n\n    if (wordCompleted) {\n      className = className.concat(` completed `);\n    }\n\n    if (wordCompleted && this.props.clickedJapChar !== \"\") {\n      if (char === this.props.clickedJapChar) {\n        className = className.concat(` clicked `);\n      } else {\n        className = className.concat(` o-100 `); // default o-100\n      }\n    }\n    if (idx === indexCurrentCard) {\n      className = className.concat(onHintedCard ? ` current-hinted ` : ` highlighted `);\n    } else {\n      className = className.concat(\n        onHintedCard ? ` o-30 ` : wordCompleted ? \"\" : ` o-60 `\n      );\n    }\n    var cardState = cardStateList[idx];\n    className = className.concat(` ${cardState} `);\n    return className;\n  };\n\n  render() {\n    const charsArrayDisplay = this.props.charsToRead.map((item, idx) => {\n      return (\n        <Grid item key={idx}>\n          <Char\n            char={item.char}\n            key={idx}\n            cardState={this.setCardState(idx, item.char)}\n            onClickCard={this.props.onClickCard}\n            wordCompleted={this.props.wordCompleted}\n          />\n        </Grid>\n      );\n    });\n\n    return (\n      <Grid\n        className=\"japanese-word\"\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing=\"0\"\n      >\n        {charsArrayDisplay}\n      </Grid>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CharList);\n","// Trie.js - super simple JS implementation\r\n// https://en.wikipedia.org/wiki/Trie\r\n// https://gist.github.com/tpae/72e1c54471e88b689f85ad2b3940a8f0\r\n\r\n// -----------------------------------------\r\n\r\n// const katakanaToRomaji = {\r\n//   ア: \"a\",\r\n//   イ: \"i\",\r\n//   ウ: \"u\",\r\n//   エ: \"e\",\r\n//   オ: \"o\",\r\n//   ン: \"n'\",\r\n//   カ: \"ka\",\r\n//   キ: \"ki\",\r\n//   ク: \"ku\",\r\n//   ケ: \"ke\",\r\n//   コ: \"ko\",\r\n//   サ: \"sa\",\r\n//   シ: \"shi\",\r\n//   ス: \"su\",\r\n//   セ: \"se\",\r\n//   ソ: \"so\",\r\n//   タ: \"ta\",\r\n//   チ: \"chi\",\r\n//   ツ: \"tsu\",\r\n//   テ: \"te\",\r\n//   ト: \"to\",\r\n//   ナ: \"na\",\r\n//   ニ: \"ni\",\r\n//   ヌ: \"nu\",\r\n//   ネ: \"ne\",\r\n//   ノ: \"no\",\r\n//   ハ: \"ha\",\r\n//   ヒ: \"hi\",\r\n//   フ: \"fu\",\r\n//   ヘ: \"he\",\r\n//   ホ: \"ho\",\r\n//   マ: \"ma\",\r\n//   ミ: \"mi\",\r\n//   ム: \"mu\",\r\n//   メ: \"me\",\r\n//   モ: \"mo\",\r\n//   ヤ: \"ya\",\r\n//   ユ: \"yu\",\r\n//   ヨ: \"yo\",\r\n//   ラ: \"ra\",\r\n//   リ: \"ri\",\r\n//   ル: \"ru\",\r\n//   レ: \"re\",\r\n//   ロ: \"ro\",\r\n//   ワ: \"wa\",\r\n//   ヲ: \"wo\",\r\n// };\r\n\r\n// we start with the TrieNode\r\nfunction TrieNode(key) {\r\n  // the \"key\" value will be the character in sequence\r\n  this.key = key;\r\n\r\n  // we keep a reference to parent\r\n  this.parent = null;\r\n\r\n  // we have hash of children\r\n  this.children = {};\r\n\r\n  // check to see if the node is at the end\r\n  this.end = false;\r\n}\r\n\r\n// iterates through the parents to get the word.\r\n// time complexity: O(k), k = word length\r\nTrieNode.prototype.getWord = function () {\r\n  var output = [];\r\n  var node = this;\r\n\r\n  while (node !== null) {\r\n    output.unshift(node.key);\r\n    node = node.parent;\r\n  }\r\n\r\n  return output.join(\"\");\r\n};\r\n\r\n// -----------------------------------------\r\n\r\n// we implement Trie with just a simple root with null value.\r\nfunction Trie() {\r\n  this.root = new TrieNode(null);\r\n}\r\n\r\n// inserts a word into the trie.\r\n// time complexity: O(k), k = word length\r\nTrie.prototype.insert = function (word) {\r\n  var node = this.root; // we start at the root\r\n\r\n  // for every character in the word\r\n  for (var i = 0; i < word.length; i++) {\r\n    // check to see if character node exists in children.\r\n    if (!node.children[word[i]]) {\r\n      // if it doesn't exist, we then create it.\r\n      node.children[word[i]] = new TrieNode(word[i]);\r\n\r\n      // we also assign the parent to the child node.\r\n      node.children[word[i]].parent = node;\r\n    }\r\n\r\n    // proceed to the next depth in the trie.\r\n    node = node.children[word[i]];\r\n\r\n    // finally, we check to see if it's the last word.\r\n    if (i === word.length - 1) {\r\n      // if it is, we set the end flag to true.\r\n      node.end = true;\r\n    }\r\n  }\r\n};\r\n\r\n// check if it contains a whole word.\r\n// time complexity: O(k), k = word length\r\nTrie.prototype.contains = function (word) {\r\n  var node = this.root;\r\n\r\n  // for every character in the word\r\n  for (var i = 0; i < word.length; i++) {\r\n    // check to see if character node exists in children.\r\n    if (node.children[word[i]]) {\r\n      // if it exists, proceed to the next depth of the trie.\r\n      node = node.children[word[i]];\r\n    } else {\r\n      // doesn't exist, return false since it's not a valid word.\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // we finished going through all the words, but is it a whole word?\r\n  return node.end;\r\n};\r\n\r\n// returns every word with given prefix\r\n// time complexity: O(p + n), p = prefix length, n = number of child paths\r\nTrie.prototype.find = function (prefix) {\r\n  var node = this.root;\r\n  var output = [];\r\n\r\n  // for every character in the prefix\r\n  for (var i = 0; i < prefix.length; i++) {\r\n    // make sure prefix actually has words\r\n    if (node.children[prefix[i]]) {\r\n      node = node.children[prefix[i]];\r\n    } else {\r\n      // there's none. just return it.\r\n      return output;\r\n    }\r\n  }\r\n\r\n  // recursively find all words in the node\r\n  findAllWords(node, output);\r\n\r\n  return output;\r\n};\r\n\r\n// recursive function to find all words in the given node.\r\nfunction findAllWords(node, arr) {\r\n  // base case, if node is at a word, push to output\r\n  if (node.end) {\r\n    arr.unshift(node.getWord());\r\n  }\r\n\r\n  // iterate through each children, call recursive findAllWords\r\n  for (var child in node.children) {\r\n    findAllWords(node.children[child], arr);\r\n  }\r\n}\r\n\r\n// -----------------------------------------\r\n\r\n// instantiate our trie\r\n//   var trie = new Trie();\r\n\r\n//   // insert few values\r\n//   trie.insert(\"hello\");\r\n//   trie.insert(\"helium\");\r\n\r\n// check contains method\r\n//console.log(trie.contains(\"helium\"));  // true\r\n//console.log(trie.contains(\"kickass\")); // false\r\n\r\n// check find method\r\n//console.log(trie.find(\"hel\"));  // [ 'helium', 'hello' ]\r\n//console.log(trie.find(\"hell\")); // [ 'hello' ]\r\n\r\nclass SpellCheckerBuffer {\r\n  constructor(charAndRomaji, checkFunction, wordNotInDictAlert) {\r\n    this.dict = charAndRomaji;\r\n    this.checkFunction = checkFunction;\r\n    this.buffer = \"\";\r\n    this.charTrie = new Trie();\r\n    this.wordNotInDictAlert = wordNotInDictAlert;\r\n    Object.values(this.dict).forEach((element) => {\r\n      this.charTrie.insert(element);\r\n    });\r\n    //console.log(this.charTrie.find(\"\"));\r\n  }\r\n  checkInput(char) {\r\n    if (char === \"clearBuffer\") {\r\n      this.buffer = \"\";\r\n      return;\r\n    }\r\n    this.buffer += char;\r\n    if (this.charTrie.contains(this.buffer)) {\r\n      this.checkFunction(this.buffer);\r\n      this.buffer = \"\";\r\n    } else {\r\n      var pendingChars = this.charTrie.find(this.buffer);\r\n      if (!Array.isArray(pendingChars) || !pendingChars.length) {\r\n        this.wordNotInDictAlert();\r\n        this.checkFunction(this.buffer);\r\n        this.buffer = \"\";\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// uncomment below to test\r\n// const sp = new SpellCheckerBuffer(katakanaToRomaji, console.log);\r\n// sp.checkInput(\"n\");\r\n// sp.checkInput(\"i\");\r\n// sp.checkInput(\"n\");\r\n// sp.checkInput(\"a\");\r\n// sp.checkInput(\"t\");\r\n// sp.checkInput(\"s\");\r\n// sp.checkInput(\"u\");\r\n\r\nexport default SpellCheckerBuffer;\r\n","const katakanaToRomaji = {\r\n  ア: \"a\",\r\n  イ: \"i\",\r\n  ウ: \"u\",\r\n  エ: \"e\",\r\n  オ: \"o\",\r\n  カ: \"ka\",\r\n  キ: \"ki\",\r\n  ク: \"ku\",\r\n  ケ: \"ke\",\r\n  コ: \"ko\",\r\n  サ: \"sa\",\r\n  シ: \"shi\",\r\n  ス: \"su\",\r\n  セ: \"se\",\r\n  ソ: \"so\",\r\n  タ: \"ta\",\r\n  チ: \"chi\",\r\n  ツ: \"tsu\",\r\n  テ: \"te\",\r\n  ト: \"to\",\r\n  ナ: \"na\",\r\n  ニ: \"ni\",\r\n  ヌ: \"nu\",\r\n  ネ: \"ne\",\r\n  ノ: \"no\",\r\n  ハ: \"ha\",\r\n  ヒ: \"hi\",\r\n  フ: \"fu\",\r\n  ヘ: \"he\",\r\n  ホ: \"ho\",\r\n  マ: \"ma\",\r\n  ミ: \"mi\",\r\n  ム: \"mu\",\r\n  メ: \"me\",\r\n  モ: \"mo\",\r\n  ヤ: \"ya\",\r\n  ユ: \"yu\",\r\n  ヨ: \"yo\",\r\n  ラ: \"ra\",\r\n  リ: \"ri\",\r\n  ル: \"ru\",\r\n  レ: \"re\",\r\n  ロ: \"ro\",\r\n  ワ: \"wa\",\r\n  ヲ: \"wo\",\r\n  ン: \"n'\",\r\n  clearBuffer: \"clearBuffer\",\r\n};\r\n\r\nconst limitedKatakanaList = [\r\n  \"ア\",\r\n  \"イ\",\r\n  \"ウ\",\r\n  \"エ\",\r\n  \"オ\",\r\n  \"カ\",\r\n  \"キ\",\r\n  \"ク\",\r\n  \"ケ\",\r\n  \"コ\",\r\n  \"シ\",\r\n  \"ス\",\r\n  \"ソ\",\r\n  \"タ\",\r\n  \"テ\",\r\n  \"ト\",\r\n  \"ナ\",\r\n  \"ニ\",\r\n  \"ネ\",\r\n  \"ハ\",\r\n  \"フ\",\r\n  \"ホ\",\r\n  \"マ\",\r\n  \"ミ\",\r\n  \"ム\",\r\n  \"メ\",\r\n  \"モ\",\r\n  \"ヤ\",\r\n  \"ラ\",\r\n  \"リ\",\r\n  \"ル\",\r\n  \"レ\",\r\n];\r\n\r\nconst katakanaHint = {\r\n  ア: {\r\n    romaji: \"a\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A2.jpg\",\r\n    shortHint: \"Find the capital 'A'\",\r\n  },\r\n  イ: {\r\n    romaji: \"i\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A4.jpg\",\r\n    shortHint: \"It looks like an <u>ea</u>gle (i)\",\r\n  },\r\n  ウ: {\r\n    romaji: \"u\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A6.jpg\",\r\n    shortHint: \"ウ looks like う (u)\",\r\n  },\r\n  エ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A8.jpg\",\r\n    shortHint:\r\n      \"Imagine this is the girders an <u>e</u>ngineer would use to build buildings\",\r\n  },\r\n  オ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AA.jpg\",\r\n    shortHint:\r\n      'A dude flapping open his trench coat to flash you. \"<u>Oh</u> MY GOD!\" you say. ',\r\n  },\r\n  カ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AB.jpg\",\r\n    shortHint: \"It looks just like the Hiragana か\",\r\n  },\r\n  キ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AD.jpg\",\r\n    shortHint: \"A key (ki)\",\r\n  },\r\n  ク: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AF.jpg\",\r\n    shortHint: \"A long <u>coo</u>ks's (ku) hat\",\r\n  },\r\n  ケ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B1.jpg\",\r\n    shortHint: \"It looks like the letter <u>K</u> (ke)\",\r\n  },\r\n  コ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B3.jpg\",\r\n    shortHint: \"Two 90 degrees <u>co</u>rners (ko)\",\r\n  },\r\n  サ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B5.jpg\",\r\n    shortHint: \"Three <u>sa</u>rdines stacked on top of each other\",\r\n  },\r\n  シ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B7.jpg\",\r\n    shortHint: \"<u>She</u> has a very werid face (shi)\",\r\n  },\r\n  ス: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B9.jpg\",\r\n    shortHint: \"A hanger where you hang up your fancy <u>su</u>it (su)\",\r\n  },\r\n  セ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BB.jpg\",\r\n    shortHint: \"It looks like the Hiragana せ\",\r\n  },\r\n  ソ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BD.jpg\",\r\n    shortHint: \"One needle and a long thread which you use to <u>sew</u> (so)\",\r\n  },\r\n  タ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BF.jpg\",\r\n    shortHint: \"A <u>ti</u>dal wave racing across the sea (ta)\",\r\n  },\r\n  チ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%81.jpg\",\r\n    shortHint: \"A <u>chee</u>rleader doing a <u>chee</u>r (chi)\",\r\n  },\r\n  ツ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%84.jpg\",\r\n    shortHint: \"<u>Two</u> (tsu) needles\",\r\n  },\r\n  テ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%86.jpg\",\r\n    shortHint: \"A <u>te</u>lephone pole\",\r\n  },\r\n  ト: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%88.jpg\",\r\n    shortHint: \"A <u>to</u>tem pole\",\r\n  },\r\n  ナ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8A.jpg\",\r\n    shortHint: \"A majestic <u>na</u>rwhal\",\r\n  },\r\n  ニ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8B.jpg\",\r\n    shortHint: \"Two <u>nee</u>dles (ni) laying on their side\",\r\n  },\r\n  ヌ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8C.jpg\",\r\n    shortHint:\r\n      \"The chopsticks are grabbing onto some <u>noo</u>dles & pulling them out of a bowl. (nu)\",\r\n  },\r\n  ネ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8D.jpg\",\r\n    shortHint: \"A <u>ne</u>cromancer has summoned this zombie\",\r\n  },\r\n  ノ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8E.jpg\",\r\n    shortHint: \"A really long <u>no</u>se\",\r\n  },\r\n  ハ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8F.jpg\",\r\n    shortHint: \"A rice paddy <u>ha</u>t\",\r\n  },\r\n  ヒ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%92.jpg\",\r\n    shortHint: \"<u>He</u> (hi) has no head. <u>He</u> is reaching out to you.\",\r\n  },\r\n  フ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%95.jpg\",\r\n    shortHint: \"A <u>fu</u>nny looking owl\",\r\n  },\r\n  ヘ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%98.jpg\",\r\n    shortHint: \"This looks like the Hiragana へ\",\r\n  },\r\n  ホ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9B.jpg\",\r\n    shortHint: \"A <u>ho</u>ly cross\",\r\n  },\r\n  マ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9E.jpg\",\r\n    shortHint: \"Look at all those angles! Those lengths! All that <u>ma</u>th!\",\r\n  },\r\n  ミ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9F.jpg\",\r\n    shortHint: \"Three <u>mi</u>ssiles, flying towards you. Be careful!\",\r\n  },\r\n  ム: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A0.jpg\",\r\n    shortHint: \"It is shaped like a pile of poop. Cow poop. <u>Moo</u>. (mu)\",\r\n  },\r\n  メ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A1.jpg\",\r\n    shortHint: 'め <u>Me</u> is Japnese for \"eye\"',\r\n  },\r\n  モ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A2.jpg\",\r\n    shortHint: \"This looks like the Hiragana も\",\r\n  },\r\n  ヤ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A4.jpg\",\r\n    shortHint: \"This looks just like the Hiragana や\",\r\n  },\r\n  ユ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A6.jpg\",\r\n    shortHint: \"You (yu) have a hook for a hand\",\r\n  },\r\n  ヨ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A8.jpg\",\r\n    shortHint: \"A <u>yo</u>gurt containers\",\r\n  },\r\n  ラ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A9.jpg\",\r\n    shortHint: \"It is a <u>ra</u>ptor wearing sweet <u>ra</u>y-bans\",\r\n  },\r\n  リ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AA.jpg\",\r\n    shortHint: \"It looks like the Hiragana り\",\r\n  },\r\n  ル: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AB.jpg\",\r\n    shortHint:\r\n      \"There are two <u>rou</u>tes (ru) you can take. Route 1 & Route 2.\",\r\n  },\r\n  レ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AC.jpg\",\r\n    shortHint: \"Look at that beautiful <u>re</u>d hair that <u>Re</u>i has!\",\r\n  },\r\n  ロ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AD.jpg\",\r\n    shortHint:\r\n      \"This <u>ro</u>ad goes around in a square, never ending. What a terrible <u>ro</u>ad this is.\",\r\n  },\r\n  ワ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AF.jpg\",\r\n    shortHint:\r\n      \"You often begin your question with the word <u>wha</u>t (wa). <u>Wha</u>t are you doing?\",\r\n  },\r\n  ヲ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%B2.jpg\",\r\n    shortHint: \"A dog <u>wo</u>ofing (wo) so hard its tongue is flying out\",\r\n  },\r\n  ン: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%B3.jpg\",\r\n    shortHint: \"This guy only has one eye. <u>N</u>oooo!\",\r\n  },\r\n};\r\n\r\nexport { katakanaToRomaji, katakanaHint, limitedKatakanaList };\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../scss/containers/App.scss\";\nimport { Input } from \"@material-ui/core\";\nimport SpellCheckerBuffer from \"../inputChecker\";\nimport { katakanaToRomaji } from \"../jap-char\";\nimport {\n  pressKey,\n  onCorrectChar,\n  typeAnswer,\n  pressSpace,\n  typeWrongAnswer,\n  completeChar,\n  pressEnter,\n  updateChar,\n  updateWord,\n  completeWord,\n  alertRomajiNotInDict,\n  resetRomajiNotInDictAlert,\n} from \"../actions\";\n\nconst mapStatestoProps = (state) => {\n  return {\n    indexCurrentCard: state.changeCardState.indexCurrentCard,\n    romajiList: state.changeCardState.romajiList,\n    cardStateList: state.changeCardState.cardStateList,\n    curWrongChar: state.changeCardState.curWrongChar,\n    onIncorrectCard: state.changeCardState.onIncorrectCard,\n    wordCompleted: state.changeCardState.wordCompleted,\n    onHintedCard: state.changeCardState.onHintedCard,\n    currentRomaji: state.changeCardState.currentRomaji,\n    currentWord: state.changeCardState.currentWord,\n    audioIsPlaying: state.changeGeneralState.audioIsPlaying,\n    inputBox: state.changeInputBox.inputBox,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onInputBoxChange: (value) => {\n      dispatch(typeAnswer(value));\n    },\n    onKeyPress: (key) => {\n      dispatch(pressKey(key));\n    },\n    onCorrectChar: () => {\n      dispatch(onCorrectChar());\n    },\n    onSpacePress: (context) => {\n      dispatch(pressSpace(context));\n    },\n    onWrongInput: (userChar, currentChar) => {\n      dispatch(typeWrongAnswer(userChar, currentChar));\n    },\n    onCompleteChar: (time, type) => {\n      dispatch(completeChar(time, type));\n    },\n    onEnterPress: (time) => {\n      dispatch(pressEnter(time));\n    },\n    setCurrentChar: (japchar, romaji) => {\n      dispatch(updateChar(japchar, romaji));\n    },\n    updateWord: (word, romajiList) => {\n      dispatch(updateWord(word, romajiList));\n    },\n    onWordCompletion: () => {\n      dispatch(completeWord());\n    },\n    alertRomajiNotInDict: () => {\n      dispatch(alertRomajiNotInDict());\n    },\n    resetRomajiNotInDictAlert: () => {\n      dispatch(resetRomajiNotInDictAlert());\n    },\n  };\n};\n\nclass CharInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formRef = React.createRef();\n    this.inputChecker = new SpellCheckerBuffer(\n      katakanaToRomaji,\n      this.checkFunction,\n      this.props.alertRomajiNotInDict\n    );\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentChar,\n      romajiList,\n      indexCurrentCard,\n      currentWord,\n    } = this.props;\n\n    const curRomaji = romajiList[indexCurrentCard];\n    const curKana = currentWord[indexCurrentCard];\n    setCurrentChar(curKana, curRomaji);\n\n    // https://stackoverflow.com/questions/37949981/call-child-method-from-parent\n    this.props.setClick(this.buttonClickOrSpacePressHandler);\n    this.props.matchClearFormInputFunction(this.clearInputBox);\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.user_uid === prevProps.user_uid) {\n    }\n  };\n\n  checkFunction = (char) => {\n    const {\n      romajiList,\n      indexCurrentCard,\n      onCorrectChar,\n      onWrongInput,\n      onWordCompletion,\n      currentWord,\n      setCurrentChar,\n      onCompleteChar,\n      getKeyByValue,\n      updateCharScore,\n      user_uid,\n    } = this.props;\n    const userInputChar = getKeyByValue(katakanaToRomaji, char);\n\n    if (char === romajiList[indexCurrentCard]) {\n      updateCharScore(user_uid, userInputChar, \"+1\");\n      onCorrectChar();\n      onCompleteChar(Date.now(), \"correct\");\n\n      const newRomaji = romajiList[indexCurrentCard + 1];\n      const newKana = currentWord[indexCurrentCard + 1];\n      setCurrentChar(newKana, newRomaji);\n\n      if (indexCurrentCard === romajiList.length - 1) {\n        onWordCompletion();\n      }\n    } else {\n      onWrongInput(char, romajiList[indexCurrentCard]);\n      var currentChar = getKeyByValue(\n        katakanaToRomaji,\n        romajiList[indexCurrentCard]\n      );\n      updateCharScore(user_uid, userInputChar, \"0\");\n      updateCharScore(user_uid, currentChar, \"0\");\n    }\n  };\n\n  onKeyDown = (event) => {\n    const {\n      onIncorrectCard,\n      wordCompleted,\n      onHintedCard,\n      romajiList,\n      indexCurrentCard,\n      onWordCompletion,\n      audioIsPlaying,\n      cardStateList,\n      disableAllAction,\n      walkThroughEnabled,\n      endWalkThrough,\n    } = this.props;\n\n    console.log(`${disableAllAction} disable action`)\n    if (walkThroughEnabled) {\n      if (event.which === 27) {\n        endWalkThrough();\n      } else if (disableAllAction) {\n        event.preventDefault();\n        return;\n      }\n    }\n    // disable input\n    if (audioIsPlaying) {\n      event.preventDefault();\n      return;\n    }\n    if (wordCompleted) {\n      event.preventDefault();\n    }\n    var lastCardState = cardStateList[cardStateList.length - 1];\n    if (\n      indexCurrentCard === romajiList.length - 1 &&\n      (lastCardState === \"correct\" || lastCardState === \"hinted\")\n    ) {\n      onWordCompletion();\n    }\n    // keycode 65 to 90 represents a-z\n    if (\n      ((event.which >= 65 && event.which <= 90) || event.which === 222) &&\n      !onIncorrectCard &&\n      !wordCompleted &&\n      !onHintedCard\n    ) {\n      var key =\n        event.which === 222\n          ? \"'\"\n          : String.fromCharCode(event.which).toLowerCase();\n      this.props.onKeyPress(key);\n      this.inputChecker.checkInput(key);\n    } else {\n      event.preventDefault();\n\n      if (event.which === 32) { // space\n        this.buttonClickOrSpacePressHandler(event.target);\n      } else if (event.which === 8) { // backspace\n        this.deleteIncorrectInput(event.target);\n      } else if (event.which === 13) { // enter\n        this.goToNextWord(event.target);\n        this.fillHintedCharacter(event.target);\n      }\n    }\n  };\n\n  deleteIncorrectInput(eventTarget) {\n    const {\n      onIncorrectCard,\n      curWrongChar,\n      onInputBoxChange,\n      onSpacePress,\n      resetRomajiNotInDictAlert,\n    } = this.props;\n\n    if (onIncorrectCard) {\n      // delete wrong input from inputBox\n      eventTarget.value = eventTarget.value.slice(0, -curWrongChar.length);\n      onInputBoxChange(eventTarget.value);\n      onSpacePress(\"CONTINUE_AFTER_ERROR\");\n      resetRomajiNotInDictAlert();\n    }  \n  };\n\n  clearInputBox(eventTarget) {\n    eventTarget.value = \"\";\n  };\n\n  goToNextWord(eventTarget) {\n    // move on to next word\n    const {\n      updateWord,\n      updateWordScore,\n      onSpacePress,\n      user_uid,\n      currentWord,\n      onInputBoxChange,\n      romajiList,\n      wordCompleted,\n      setCurrentChar,\n      moveToNextWord,\n      requestedWord,\n    } = this.props;\n\n    if (wordCompleted) {\n      updateWord(\"\", [\"\"]);\n      moveToNextWord(requestedWord);\n      // updateWordScore(user_uid, currentWord);\n      onSpacePress(\"CONTINUE_AFTER_COMPLETE\");\n\n      eventTarget.value = \"\";\n      onInputBoxChange(eventTarget.value);\n      const newRomaji = romajiList[0];\n      const newKana = currentWord[0];\n      setCurrentChar(newKana, newRomaji);\n    }\n  }\n\n  fillHintedCharacter = (eventTarget) => {\n    const {\n      onHintedCard,\n      indexCurrentCard,\n      romajiList,\n      onWordCompletion,\n      currentRomaji,\n      onInputBoxChange,\n      onEnterPress,\n      setCurrentChar,\n      currentWord,\n    } = this.props;\n\n    if (onHintedCard) {\n      if (indexCurrentCard === romajiList.length - 1) {\n        onWordCompletion();\n      }\n      // autofill correct answer\n      eventTarget.value = eventTarget.value.concat(currentRomaji);\n      onInputBoxChange(eventTarget.value);\n      onEnterPress(Date.now());\n\n      const curRomaji = romajiList[indexCurrentCard + 1];\n      const curKana = currentWord[indexCurrentCard + 1];\n      setCurrentChar(curKana, curRomaji);\n    }\n  }\n\n  buttonClickOrSpacePressHandler = (eventTarget) => {\n    const {\n      onIncorrectCard,\n      onInputBoxChange,\n      onSpacePress,\n      onCompleteChar,\n      wordCompleted,\n      onHintedCard,\n      romajiList,\n      indexCurrentCard,\n      user_uid,\n      updateCharScore,\n      getKeyByValue,\n      disableAllAction,\n    } = this.props;\n    \n    if (disableAllAction) {\n      return;\n    }\n\n    if (onIncorrectCard) {\n      this.deleteIncorrectInput(eventTarget)\n    } else if (!onIncorrectCard && !onHintedCard && !wordCompleted) {\n      // ask for hint\n      onSpacePress(\"REQUEST_HINT\");\n      onCompleteChar(Date.now(), \"hinted\");\n\n      var currentChar = getKeyByValue(\n        katakanaToRomaji,\n        romajiList[indexCurrentCard]\n      );\n      updateCharScore(user_uid, currentChar, \"+0\");\n\n      // clear inputBox\n      eventTarget.value = this.inputChecker.buffer.length\n        ? eventTarget.value.slice(0, -this.inputChecker.buffer.length)\n        : eventTarget.value;\n      onInputBoxChange(eventTarget.value);\n\n      // clear inputChecker buffer\n      this.inputChecker.checkInput(\"clearBuffer\");\n    } else if (wordCompleted) {\n      this.goToNextWord(eventTarget)\n    } else if (onHintedCard) {\n      this.fillHintedCharacter(eventTarget);\n    }\n  };\n\n  render() {\n    return (\n      <form>\n        <Input\n          className=\"input-box\"\n          placeholder=\"Your input...\"\n          inputProps={{ \"aria-label\": \"description\" }}\n          onChange={this.props.onInputBoxChange}\n          onKeyDown={this.onKeyDown}\n          spellCheck={false}\n          autoFocus\n          inputRef={this.formRef}\n          onPaste={(event) => {\n            event.preventDefault();\n          }}\n        />\n      </form>\n    );\n  }\n}\n\nexport default connect(mapStatestoProps, mapDispatchToProps, null, {\n  forwardRef: true,\n})(CharInput);\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"../scss/components/NavBar.scss\";\n\n// make help dialog\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\n// icons\nimport ExitToAppOutlinedIcon from \"@material-ui/icons/ExitToAppOutlined\";\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\nimport AssessmentOutlinedIcon from \"@material-ui/icons/AssessmentOutlined\";\nimport HelpOutlineOutlinedIcon from \"@material-ui/icons/HelpOutlineOutlined\";\nimport TranslateOutlinedIcon from '@material-ui/icons/TranslateOutlined';\nimport DirectionsOutlinedIcon from '@material-ui/icons/DirectionsOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst NavBar = (props) => {\n  const classes = useStyles();\n  const { onRouteChange, currentTab, handleClickWalkthrough } = props;\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            color=\"secondary\"\n            className={classes.title}\n            align=\"left\"\n          >\n            <div className=\"navbar-title\">JapanEZ</div>\n          </Typography>\n          <Button\n            className=\"nav-button-walkthrough\"\n            // disabled\n            variant=\"text\"\n            color=\"secondary\"\n            onClick={handleClickWalkthrough}\n            startIcon={<DirectionsOutlinedIcon />}\n          >\n            <div className=\"navbar-button-text\">Walkthrough</div>\n          </Button>\n          {/* <Button\n            variant=\"text\"\n            color=\"secondary\"\n            onClick={handleClickOpen}\n            startIcon={<HelpOutlineOutlinedIcon />}\n          >\n            <div className=\"navbar-button-text\">Help</div>\n          </Button> */}\n          <Button\n            className=\"nav-button-home\"\n            variant={currentTab === \"home\" ? \"outlined\" : \"text\"}\n            color=\"secondary\"\n            onClick={() => onRouteChange(\"home\")}\n            startIcon={<HomeOutlinedIcon />}\n          >\n            <div className=\"navbar-button-text\">Home</div>\n          </Button>\n          <div className=\"nav-button-chart\">\n            <Button\n              className=\"nav-button-progress\"\n              variant={currentTab === \"progress\" ? \"outlined\" : \"text\"}\n              color=\"secondary\"\n              onClick={() => onRouteChange(\"progress\")}\n              startIcon={<AssessmentOutlinedIcon />}\n            >\n              <div className=\"navbar-button-text\">Progress</div>\n            </Button>\n            <Button\n              className=\"nav-button-katakanaChart\"\n              variant={currentTab === \"katakanaChart\" ? \"outlined\" : \"text\"}\n              color=\"secondary\"\n              onClick={() => onRouteChange(\"katakanaChart\")}\n              startIcon={<TranslateOutlinedIcon />}\n            >\n              <div className=\"navbar-button-text\">Katakana</div>\n            </Button>\n          </div>\n          <Button\n            color=\"secondary\"\n            variant={currentTab === \"signout\" ? \"outlined\" : \"text\"}\n            onClick={() => onRouteChange(\"signin\")}\n            className=\"nav-button\"\n            startIcon={<ExitToAppOutlinedIcon />}\n          >\n            <div className=\"navbar-button-text\">Signout</div>\n          </Button>\n        </Toolbar>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Instruction\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              <p>\n                In this app, you will learn Japanese Katakana alphabet. At\n                each iteration, the app will display all the Katakana\n                characters that make up a certain Japanese word.\n              </p>\n              <p>If you know the katakana, simply type romaji </p>\n              <p>If you don't know it, press SPACE to learn the romaji. </p>\n              <p>If your input is incorrect, press SPACE to retry.</p>\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </AppBar>\n    </div>\n  );\n};\nexport default NavBar;\n","// Taken from this https://stackoverflow.com/questions/47686345/playing-sound-in-reactjs\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { onAudioPlay, onAudioPause } from \"../actions\";\r\nimport \"../scss/components/Music.scss\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    audioIsPlaying: state.changeGeneralState.audioIsPlaying,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAudioPlay: () => {\r\n      dispatch(onAudioPlay());\r\n    },\r\n    onAudioPause: () => {\r\n      dispatch(onAudioPause());\r\n    },\r\n  };\r\n};\r\n\r\nclass Music extends React.Component {\r\n  state = {\r\n    play: false,\r\n    audio: new Audio(this.props.audioLink),\r\n  };\r\n\r\n  stopAudioHandler = () => {\r\n    this.setState({ play: false });\r\n    if (!this.props.noStoreUpdateWhenEnded) {\r\n      this.props.onAudioPause();\r\n    }\r\n  };\r\n\r\n  simpleStopAudioHandler = () => {\r\n    this.setState({ play: false });\r\n    this.props.onAudioPause();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.state.audio.addEventListener(\"ended\", this.stopAudioHandler);\r\n    setTimeout(() => {\r\n      if (this.props.autoplay) {\r\n        this.state.audio.play();\r\n        this.props.onAudioPlay(); \r\n      }\r\n    }, this.props.delay);\r\n  }\r\n\r\n  componentDidUpdate = (prevProps) => {\r\n    if (prevProps.audioLink !== this.props.audioLink) {\r\n      var newAudio = new Audio(this.props.audioLink);\r\n      newAudio.addEventListener(\"ended\", this.stopAudioHandler);\r\n      this.setState({ audio: newAudio });\r\n      setTimeout(() => {\r\n        this.state.audio.play();\r\n        this.props.onAudioPlay();\r\n      }, this.props.delay);\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.state.audio.removeEventListener(\"ended\", this.stopAudioHandler);\r\n    this.state.audio.removeEventListener(\"ended\", this.simpleStopAudioHandler);\r\n    this.props.onAudioPause();\r\n  }\r\n\r\n  togglePlay = () => {\r\n    this.setState({ play: !this.state.play }, () => {\r\n      if (this.state.play) {\r\n        this.state.audio.play();\r\n        this.props.onAudioPlay();\r\n\r\n        // this is a wacky way of doing it, but basically I'm replacing the \"ended\" event listener\r\n        this.state.audio.removeEventListener(\"ended\", this.stopAudioHandler);\r\n        this.state.audio.removeEventListener(\r\n          \"ended\",\r\n          this.simpleStopAudioHandler\r\n        );\r\n        this.state.audio.addEventListener(\"ended\", this.simpleStopAudioHandler);\r\n      } else {\r\n        this.state.audio.pause();\r\n        this.props.onAudioPause();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          variant=\"text\"\r\n          color=\"primary\"\r\n          onClick={this.togglePlay}\r\n          className=\"music-button\"\r\n        >\r\n          <div className=\"button-text\">\r\n            {this.state.play ? \"Pause Audio\" : \"Play Audio\"}\r\n          </div>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Music);\r\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Music from \"./Music\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { katakanaToRomaji, katakanaHint } from \"../jap-char\";\nimport { MEDIA_BASE_URL_CHAR } from \"../constants\";\nimport \"../scss/components/Hint.scss\";\n\nconst parseoutUnderlineText = (sentence) => {\n  // replace <b> and </b> with comma\n  sentence = sentence.replace(/<\\/?u>/g, \",\");\n  return sentence.split(\",\");\n};\n\nclass Hint extends React.Component {\n  render() {\n    const romaji = katakanaToRomaji[this.props.currentHintedChar];\n    const sentenceFragments = parseoutUnderlineText(\n      katakanaHint[this.props.currentHintedChar].shortHint\n    );\n    const modified_romaji = romaji === \"n'\" ? \"n\" : romaji;\n    const audioLink = MEDIA_BASE_URL_CHAR + modified_romaji + \".mp3\";\n\n    return (\n      <Card className={`hint-card`} onClick={this.onClickHandler}>\n        <div className=\"hint-card-content\">\n          <h3 className=\"hint-card-romaji\">{romaji}</h3>\n          <Divider />\n          <div>\n            <img\n              src={`${katakanaHint[this.props.currentHintedChar].imageLink}`}\n              className={`hint-card-image`}\n              alt=\"Hint Card\"\n            />\n          </div>\n          <CardContent style={{ paddingTop: 0, paddingBottom: 0 }}>\n            <Typography variant=\"body2\" component=\"p\">\n              <div className=\"hint-text\">\n                {sentenceFragments[0]}\n                <u>{sentenceFragments[1]}</u>\n                {sentenceFragments[2]}\n              </div>\n            </Typography>\n            <Music\n              audioLink={audioLink}\n              delay={0}\n              noStoreUpdateWhenEnded={false}\n              autoplay={this.props.autoplayAudio}\n            />\n          </CardContent>\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default Hint;\n","import React from \"react\";\r\nimport \"../scss/components/TextBlock.scss\";\r\n\r\nconst TextBlock = ({ title, description, icon }) => {\r\n  return (\r\n    <div className=\"text-block\">\r\n      {icon}\r\n      <h3>{title}</h3>\r\n      <div>{description}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextBlock;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport \"../scss/components/LoadingPopup.scss\"\r\n\r\nconst LoadingPopup = (props) => {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.isOpen}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>    \r\n          <div className=\"loading-circle\">\r\n            <CircularProgress /> \r\n          </div>\r\n          <div className=\"loading-text\">\r\n            {\"Loading\"}\r\n          </div>\r\n          \r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingPopup;","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { SIGNIN_URL } from \"../constants\";\r\nimport \"../scss/components/Signin.scss\";\r\nimport TextBlock from \"./TextBlock\";\r\nimport LoadingPopup from \"./LoadingPopup\"\r\n\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport FontDownloadIcon from \"@material-ui/icons/FontDownload\";\r\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\r\nimport SubtitlesIcon from \"@material-ui/icons/Subtitles\";\r\n\r\nconst useStyles = (theme) => ({\r\n  container: {\r\n    fontFamily: \"Roboto\",\r\n    backfround: \"white\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(6),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper2: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 500,\r\n      height: 450,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\",\r\n      emailErrorMsg: \"\",\r\n      passwordErrorMsg: \"\",\r\n      openLoadingPopup: false,\r\n    };\r\n  }\r\n\r\n  onEmailInput = (event) => {\r\n    this.setState({ signInEmail: event.target.value, emailErrorMsg: \"\" });\r\n  };\r\n\r\n  onPasswordInput = (event) => {\r\n    this.setState({ signInPassword: event.target.value, passwordErrorMsg: \"\" });\r\n  };\r\n\r\n  sendSigninInfoToBackend = () => {\r\n    const { signInEmail, signInPassword } = this.state;\r\n    this.setState({ openLoadingPopup: true })\r\n\r\n    fetch(SIGNIN_URL, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: signInEmail,\r\n        password: signInPassword,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ openLoadingPopup: false })\r\n\r\n        if (Object.keys(data).length === 4) {\r\n          this.props.loadUser(data);\r\n          this.props.onRouteChange(\"home\");\r\n          this.setState({\r\n            emailErrorMsg: \"\",\r\n            passwordErrorMsg: \"\",\r\n          });\r\n        } else {\r\n          // there is an error loggin in\r\n          console.log(\"Login Failed\", data);\r\n          if (data === \"email is not yet registered\") {\r\n            this.setState({ emailErrorMsg: data });\r\n          } else if (data === \"incorrect password\") {\r\n            this.setState({\r\n              passwordErrorMsg: data,\r\n              emailErrorMsg: \"\",\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error!\", error);\r\n      });\r\n  };\r\n\r\n  onSignIn = (event) => {\r\n    event.preventDefault();\r\n    const { signInEmail, signInPassword } = this.state;\r\n\r\n    // check that fields are not empty\r\n    if (!signInEmail) {\r\n      this.setState({ emailErrorMsg: \"please fill out your email\" });\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n    if (!signInPassword) {\r\n      this.setState({ passwordErrorMsg: \"please fill out your password\" });\r\n    } else {\r\n      this.setState({ passwordErrorMsg: \"\" });\r\n    }\r\n\r\n    if (signInEmail && signInPassword) {\r\n      this.sendSigninInfoToBackend();\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className=\"flex-container\">\r\n        <LoadingPopup isOpen={this.state.openLoadingPopup} />\r\n        <div className=\"signin-box\">\r\n          <div className=\"header\">\r\n            <h1 className=\"title\">JapanEZ</h1>\r\n            <p className=\"subtitle\">\r\n              Learn Japanese Katakana as you explore English-like Japanese words\r\n            </p>\r\n          </div>\r\n          <div className=\"signin\">\r\n            <Paper className={classes.paper2} elevation={3}>\r\n              <Container\r\n                component=\"main\"\r\n                maxWidth=\"xs\"\r\n                className={classes.container}\r\n              >\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                  <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                  </Typography>\r\n                  <form className={classes.form} noValidate>\r\n                    <TextField\r\n                      error={this.state.emailErrorMsg}\r\n                      helperText={this.state.emailErrorMsg}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                      // autoFocus\r\n                      onChange={this.onEmailInput}\r\n                    />\r\n                    <TextField\r\n                      error={this.state.passwordErrorMsg}\r\n                      helperText={this.state.passwordErrorMsg}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      autoComplete=\"current-password\"\r\n                      onChange={this.onPasswordInput}\r\n                    />\r\n                    <FormControlLabel\r\n                      control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                      label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                      type=\"submit\"\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                      onClick={this.onSignIn}\r\n                      style={{ color: \"white\" }}\r\n                    >\r\n                      Sign In\r\n                    </Button>\r\n                    <Grid\r\n                      container\r\n                      alignItems=\"center\"\r\n                      direction=\"column\"\r\n                      justify=\"center\"\r\n                    >\r\n                      <Grid item>\r\n                        {\"Don't have an account? \"}\r\n                        <Link\r\n                          component=\"button\"\r\n                          variant=\"body2\"\r\n                          onClick={() => this.props.onRouteChange(\"register\")}\r\n                        >\r\n                          {\"Register Here\"}\r\n                        </Link>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </form>\r\n                </div>\r\n              </Container>\r\n            </Paper>\r\n          </div>\r\n        </div>\r\n        <div className=\"info-panel\">\r\n          <div className=\"info-panel-inner\">\r\n            <TextBlock\r\n              icon={<AssignmentIndIcon fontSize=\"large\" />}\r\n              title=\"Tailored to your learning progress\"\r\n              description=\"Either you've just started out or you've been learning for a\r\n                while, the tool helps you master Katakana in an effective way.\"\r\n            />\r\n            <TextBlock\r\n              icon={<FeedbackIcon fontSize=\"large\" />}\r\n              title=\"Built-in mnemonics and smart feedback\"\r\n              description=\"Receive contextual feedback when you input the wrong character.\"\r\n            />\r\n            <TextBlock\r\n              icon={<FontDownloadIcon fontSize=\"large\" />}\r\n              title=\"Words that sound like English\"\r\n              description=\"Such as kisu (kiss), in'teru (intelligent). You'd be surprised how much Japanese you've already known.\"\r\n            />\r\n            <TextBlock\r\n              icon={<SubtitlesIcon fontSize=\"large\" />}\r\n              title=\"Learn real common Japanese words\"\r\n              description=\"You can listen to audio from native speakers. This helps you compare and contrast the pronunciation of\r\n                Japanese and English.\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Signin);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { REGISTER_URL } from \"../constants\";\r\nimport \"../scss/components/Signin.scss\";\r\nimport TextBlock from \"./TextBlock\";\r\nimport LoadingPopup from \"./LoadingPopup\";\r\n\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport FontDownloadIcon from \"@material-ui/icons/FontDownload\";\r\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\r\nimport SubtitlesIcon from \"@material-ui/icons/Subtitles\";\r\n\r\nconst useStyles = (theme) => ({\r\n  container: {\r\n    fontFamily: \"Roboto\",\r\n    backfround: \"white\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(5),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper2: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 500,\r\n      height: 450,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      nameError: false,\r\n      emailError: false,\r\n      passwordError: false,\r\n      nameErrorMsg: \"\",\r\n      emailErrorMsg: \"\",\r\n      passwordErrorMsg: \"\",\r\n      openLoadingPopup: false,\r\n    };\r\n  }\r\n\r\n  validateEmail(email) {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  onNameInput = (event) => {\r\n    this.setState({ name: event.target.value, nameErrorMsg: \"\" });\r\n  };\r\n\r\n  onEmailInput = (event) => {\r\n    this.setState({ email: event.target.value, emailErrorMsg: \"\" });\r\n  };\r\n\r\n  onPasswordInput = (event) => {\r\n    this.setState({ password: event.target.value, passwordErrorMsg: \"\" });\r\n  };\r\n\r\n  sendFormDataToBackEnd = () => {\r\n    const { name, email, password } = this.state;\r\n    this.setState({ openLoadingPopup: true })\r\n\r\n    fetch(REGISTER_URL, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ openLoadingPopup: false })\r\n\r\n        if (Object.keys(data).length === 4) {\r\n          this.setState({ emailErrorMsg: \"\" });\r\n          this.props.loadUser(data);\r\n          this.props.onRouteChange(\"home\");\r\n        } else {\r\n          // if user already exist\r\n          this.setState({ emailErrorMsg: data });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error!\", error);\r\n      });\r\n  };\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { name, email, password } = this.state;\r\n\r\n    if (!name) {\r\n      this.setState({ nameErrorMsg: \"please fill out your name\" });\r\n    } else {\r\n      this.setState({ nameErrorMsg: \"\" });\r\n    }\r\n    if (!email) {\r\n      this.setState({ emailErrorMsg: \"please fill out your email\" });\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n    if (!password) {\r\n      this.setState({ passwordErrorMsg: \"please fill out your password\" });\r\n    } else {\r\n      this.setState({ passwordErrorMsg: \"\" });\r\n    }\r\n\r\n    if (!this.validateEmail(email)) {\r\n      this.setState({ emailErrorMsg: \"please enter a valid email address\" });\r\n      return;\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n\r\n    if (name && password && email) {\r\n      this.sendFormDataToBackEnd();\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { nameErrorMsg, emailErrorMsg, passwordErrorMsg } = this.state;\r\n    return (\r\n      <div className=\"flex-container\">\r\n        <LoadingPopup isOpen={this.state.openLoadingPopup} />\r\n        <div className=\"signin-box\">\r\n          <div className=\"header\">\r\n            <h1 className=\"title\">JapanEZ</h1>\r\n            <p className=\"subtitle\">\r\n              Learn Japanese Katakana as you explore English-like Japanese words\r\n            </p>\r\n          </div>\r\n          <div className=\"signin\">\r\n            <Paper className={classes.paper2}>\r\n              <Container\r\n                component=\"main\"\r\n                maxWidth=\"xs\"\r\n                className={classes.container}\r\n              >\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                  <Typography component=\"h1\" variant=\"h5\">\r\n                    Register\r\n                  </Typography>\r\n                  <form className={classes.form} noValidate>\r\n                    <TextField\r\n                      error={nameErrorMsg}\r\n                      helperText={nameErrorMsg}\r\n                      variant=\"outlined\"\r\n                      id=\"name\"\r\n                      label=\"Your Name\"\r\n                      // autoFocus\r\n                      fullWidth\r\n                      onChange={this.onNameInput}\r\n                    />\r\n                    <TextField\r\n                      error={emailErrorMsg}\r\n                      helperText={emailErrorMsg}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                      onChange={this.onEmailInput}\r\n                    />\r\n                    <TextField\r\n                      error={passwordErrorMsg}\r\n                      helperText={passwordErrorMsg}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      autoComplete=\"current-password\"\r\n                      onChange={this.onPasswordInput}\r\n                    />\r\n                    <Button\r\n                      type=\"submit\"\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                      onClick={this.onFormSubmit}\r\n                      style={{ color: \"#ffffff\" }}\r\n                    >\r\n                      Get started\r\n                    </Button>\r\n                    <Grid\r\n                      container\r\n                      alignItems=\"center\"\r\n                      direction=\"column\"\r\n                      justify=\"center\"\r\n                    >\r\n                      <Grid item>\r\n                        {\"Already registered? \"}\r\n                        <Link\r\n                          component=\"button\"\r\n                          variant=\"body2\"\r\n                          onClick={() => this.props.onRouteChange(\"signin\")}\r\n                        >\r\n                          {\"Sign In\"}\r\n                        </Link>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </form>\r\n                </div>\r\n              </Container>\r\n            </Paper>\r\n          </div>\r\n        </div>\r\n        <div className=\"info-panel\">\r\n          <div className=\"info-panel-inner\">\r\n            <TextBlock\r\n              icon={<AssignmentIndIcon fontSize=\"large\" />}\r\n              title=\"Tailored to your learning progress\"\r\n              description=\"Either you've just started out or you've been learning for a\r\n                while, the tool helps you master Katakana in an effective way.\"\r\n            />\r\n            <TextBlock\r\n              icon={<FeedbackIcon fontSize=\"large\" />}\r\n              title=\"Built-in mnemonics and smart feedback\"\r\n              description=\"Receive contextual feedback when you input the wrong character.\"\r\n            />\r\n            <TextBlock\r\n              icon={<FontDownloadIcon fontSize=\"large\" />}\r\n              title=\"Words that sound like English\"\r\n              description=\"Such as kisu (kiss), in'teru (intelligent). You'd be surprised how much Japanese you've already known.\"\r\n            />\r\n            <TextBlock\r\n              icon={<SubtitlesIcon fontSize=\"large\" />}\r\n              title=\"Learn real common Japanese words\"\r\n              description=\"You can listen to audio from native speakers. This helps you compare and contrast the pronunciation of\r\n                Japanese and English.\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Register);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Music from \"./Music\";\r\nimport { MEDIA_BASE_URL_SENTENCE, MEDIA_BASE_URL_WORD } from \"../constants\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport \"../scss/components/WordCard.scss\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nconst parseoutBoldText = (sentence) => {\r\n  // replace <b> and </b> with comma\r\n  sentence = sentence.replace(/<\\/?b>/g, \",\");\r\n  return sentence.split(\",\");\r\n};\r\n\r\nexport default function WordCard({ wordInfo, word_audio_duration, autoplayAudio }) {\r\n  const classes = useStyles();\r\n  var el = document.createElement(\"html\");\r\n  el.innerHTML = \"<b>bolded text</b>\";\r\n  const sentenceSegments = parseoutBoldText(wordInfo.sentence_expression);\r\n\r\n  const parseAudio = (audio_string) => {\r\n    return audio_string.slice(7, audio_string.length - 1);\r\n  };\r\n\r\n  return (\r\n    <Card className={`${classes.root} word-card `}>\r\n      <CardContent>\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          <div className=\"wordcard-subtext\">Word Meaning</div>\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          <div className=\"wordcard-text\">\r\n            {wordInfo.vocab_meaning} ({wordInfo.vocab_pos})\r\n          </div>\r\n        </Typography>\r\n        <Music\r\n          audioLink={`${MEDIA_BASE_URL_WORD}${parseAudio(\r\n            wordInfo.vocab_sound_local\r\n          )}`}\r\n          delay={0}\r\n          noStoreUpdateWhenEnded={true}\r\n          autoplay={autoplayAudio}\r\n        />\r\n        <Divider style={{ marginTop: \"calc(5px + 0.5vh)\" }} />\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          <div className=\"wordcard-subtext\">Sample Sentence</div>\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          <div className=\"wordcard-text\">\r\n            {sentenceSegments[0]}\r\n            <b className=\"vocab-word\">{sentenceSegments[1]}</b>\r\n            {sentenceSegments[2]}\r\n          </div>\r\n        </Typography>\r\n        <Music\r\n          audioLink={`${MEDIA_BASE_URL_SENTENCE}${parseAudio(\r\n            wordInfo.sentence_sound_local\r\n          )}`}\r\n          delay={word_audio_duration * 1000 + 750}\r\n          noStoreUpdateWhenEnded={false}\r\n          autoplay={autoplayAudio}\r\n        />\r\n        <Divider style={{ marginTop: \"calc(5px + 0.5vh)\" }} />\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          <div className=\"wordcard-subtext\">Sentence Meaning</div>\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          <div style={{ fontSize: \"calc(12px + 0.4vh)\" }}>\r\n            {wordInfo.sentence_meaning}\r\n          </div>\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","// https://stackoverflow.com/questions/32553158/detect-click-outside-react-component\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass OutsideAlerter extends React.Component {\r\n  componentDidMount = () => {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  };\r\n\r\n  setWrapperRef = (node) => {\r\n    this.wrapperRef = node;\r\n  };\r\n\r\n  handleClickOutside = (event) => {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      // for some reason, need setTimeout to work, even if 0 delay\r\n      setTimeout(() => {\r\n        this.props.focusInputBox();\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <div ref={this.setWrapperRef}>{this.props.children}</div>;\r\n  }\r\n}\r\n\r\nOutsideAlerter.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default OutsideAlerter;\r\n","import React from \"react\";\r\nimport \"../scss/components/Footer.scss\";\r\nimport { TOFUGU_LINK, WORD_LINK } from \"../constants\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"main-footer\">\r\n      <div>\r\n        <p>\r\n          {\"Mnemonics taken from \"}\r\n          <a href={TOFUGU_LINK}>tofugu.com</a>\r\n        </p>\r\n        <p>\r\n          {\"Japanese words taken from \"}\r\n          <a href={WORD_LINK}>reddit.com/r/LearnJapanese</a>\r\n        </p>\r\n      </div>\r\n      <hr />\r\n      <div className=\"copyright\">\r\n        <small>\r\n          Copyright © 2020 Tuan Le, Lien Tran. All Rights Reserved.\r\n        </small>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport \"../scss/components/MessageBar.scss\";\r\nimport shortid from \"shortid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { PRIMARYCOLOR } from \"../constants\";\r\n\r\nconst useStyles = makeStyles({\r\n  // typing effect taken from \r\n  // https://css-tricks.com/snippets/css/typewriter-effect/\r\n  messageText: {\r\n    fontSize: \"calc(10px + 1vh)\",\r\n    textAlign: \"center\",\r\n    margin: \"0 auto\",\r\n  },\r\n  // add this to have typing animation\r\n  messageAnimation: {\r\n    borderRight: \"2px solid rgba(255, 255, 255, 0.75)\",\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    animation: `$typewriter 4s steps(100) 0s 1 normal both,\r\n      $blinkTextCursor 1s steps(100) infinite normal`\r\n    ,\r\n    maxWidth: (props) => {\r\n      return `${convertMessageLengthToEm(props.message)}em`;\r\n    },\r\n  },\r\n  \"@keyframes typewriter\": {\r\n    \"from\": {\r\n      width: \"0\",\r\n    },\r\n    \"to\": {\r\n      width: `100%` \r\n    },\r\n  },\r\n  \"@keyframes blinkTextCursor\": {\r\n    \"0%\": {\r\n    borderRightColor: PRIMARYCOLOR,\r\n    },\r\n      \"49%\": {\r\n      borderRightColor: PRIMARYCOLOR,\r\n    },\r\n      \"50%\": {\r\n      borderRightColor: \"transparent\",\r\n    },\r\n  }\r\n})\r\n\r\nconst convertMessageLengthToEm = (message) => {\r\n  // base em\r\n  var length_in_em = message.length/2.29;\r\n\r\n  // fine-grain adjustment based on message\r\n  if (message.includes(\"mnemonic\")) {\r\n    length_in_em += 0.75;\r\n  } else if (message.includes(\"corresponds\")) {\r\n    length_in_em += 1.1;\r\n  } else if (message.includes(\"exist\")) {\r\n    length_in_em -= 0.2;\r\n  } else if (message.includes(\"Press spacebar again\")) {\r\n    length_in_em += 0.8;\r\n  } else if (message.includes(\"stuck\")) {\r\n    length_in_em -= 0.2;\r\n  } else if (message.includes(\"!\")) {\r\n    length_in_em += 0.5;\r\n  }\r\n  return length_in_em;\r\n}\r\n\r\nconst MessageBar = (props) => {\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <div className=\"container\" style={{ color: \"#5D5D5D\" }}>\r\n      <Paper elevation={0} />\r\n      <div className=\"welcome-text\">\r\n        {props.displayHelpMessages ? (\r\n          <p \r\n            className={`${classes.messageText}`} \r\n            key={shortid.generate()}\r\n          >\r\n            {props.message}\r\n          </p>\r\n        ) : (\r\n          <p className={`${classes.messageText}`}>\r\n            {`Welcome, ${props.userName}.`}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageBar;\r\n","import React from \"react\";\r\nimport \"../scss/components/SmallChar.scss\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// links below shows how to transition between gradient background\r\n// https://medium.com/@dave_lunny/animating-css-gradients-using-only-css-d2fd7671e759\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  cardBG: {\r\n    background: (props) => {\r\n      return props.correctPercent === 0 && props.hintedPercent === 0\r\n        ? \"#d6d6d6\"\r\n        : `linear-gradient(0deg, green 0% ${props.correctPercent}%, #f2b50c ${props.correctPercent}% ${props.hintedPercent}%)`;\r\n    },\r\n  },\r\n}));\r\n\r\nfunction SmallChar(props) {\r\n  const { char, correctNum, hintedNum } = props;\r\n  const classes = useStyles(props);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <div className={`noselect flipcard`} id={id} onClick={handleClick}>\r\n        <div className=\"flipcard-content\">\r\n          <div className={`flipcard-front ${classes.cardBG}`}>\r\n            <span>\r\n              <b>{char}</b>\r\n            </span>\r\n          </div>\r\n          <div className=\"flipcard-back\">\r\n            <p>\r\n              {correctNum} <span className=\"dot correct-color\"></span>\r\n            </p>\r\n            <p>\r\n              {hintedNum} <span className=\"dot hinted-color\"></span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <Typography className={classes.typography}>\r\n          {`${correctNum} correct, ${hintedNum} hinted`}\r\n        </Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SmallChar;\r\n","import React from \"react\";\r\nimport SmallChar from \"../components/SmallChar.js\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { katakanaToRomaji, limitedKatakanaList } from \"../jap-char\";\r\nimport { GETCHARSCORE_URL } from \"../constants\";\r\nimport \"../scss/components/SmallChar.scss\";\r\nimport LoadingPopup from \"./LoadingPopup\";\r\n\r\nclass SmallCharList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      charResultList: {},\r\n    };\r\n  }\r\n\r\n  requestGetCharScore = () => {\r\n    fetch(GETCHARSCORE_URL, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_uid: this.props.user_uid,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((charResultList) => {\r\n        this.setState({ charResultList: charResultList });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error in getting characters' familiarity\", err);\r\n      });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.requestGetCharScore();\r\n  };\r\n\r\n  computeCorrectPercentage = (resultList) => {\r\n    var total_correct = 0;\r\n    if (resultList.length === 0) {\r\n      return -1;\r\n    }\r\n    resultList.forEach((result) => {\r\n      if (result === \"correct\") total_correct += 1;\r\n    });\r\n    return Math.round((total_correct / resultList.length) * 100);\r\n  };\r\n\r\n  computeCorrectNum = (resultList) => {\r\n    return resultList.length === 0\r\n      ? 0\r\n      : resultList.reduce((acc, val) => {\r\n          if (val === \"correct\") {\r\n            acc += 1;\r\n          }\r\n          return acc;\r\n        }, 0);\r\n  };\r\n\r\n  render() {\r\n    if (Object.keys(this.state.charResultList).length === 0) {\r\n      return <LoadingPopup isOpen={true} />;\r\n    }\r\n    // for full katakana list, can use Object.keys(katakanaToRomaji) instead of limitedKatakanaList\r\n    const charsArrayDisplay = limitedKatakanaList.map((kana, idx) => {\r\n      if (kana !== \"clearBuffer\") {\r\n        var correctPercentage = 0;\r\n        var hintedPercentage = 0;\r\n        var correctNum = this.computeCorrectNum(\r\n          this.state.charResultList[kana]\r\n        );\r\n        var hintedNum = this.state.charResultList[kana].length - correctNum;\r\n\r\n        if (Object.keys(this.state.charResultList).length > 0) {\r\n          correctPercentage = this.computeCorrectPercentage(\r\n            this.state.charResultList[kana]\r\n          );\r\n          hintedPercentage = 100 - correctPercentage;\r\n          if (correctPercentage === -1) {\r\n            correctPercentage = 0;\r\n            hintedPercentage = 0;\r\n          }\r\n        }\r\n        return (\r\n          <Grid item key={idx}>\r\n            <SmallChar\r\n              char={kana}\r\n              key={idx}\r\n              hintedPercent={hintedPercentage}\r\n              correctPercent={correctPercentage}\r\n              correctNum={correctNum}\r\n              hintedNum={hintedNum}\r\n            />\r\n          </Grid>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className=\"characters-list\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing=\"2\"\r\n        >\r\n          {charsArrayDisplay}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SmallCharList;\r\n","import React from \"react\";\r\nimport { katakanaToRomaji } from \"../jap-char\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../scss/components/KatakanaChar.scss\";\r\nimport { PRIMARYCOLOR } from \"../constants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardBG: {\r\n    background: (props) => {\r\n      return props.isEncountered ? PRIMARYCOLOR : \"#d6d6d6\"\r\n    }\r\n  }\r\n}))\r\n\r\nconst KatakanaChar = (props) => {\r\n  const { char } = props;\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n  <div>\r\n    <div className={`noselect flipcard2`}>\r\n      <div className=\"flipcard-content2\">\r\n        <div className={`flipcard-front2 ${classes.cardBG}`}>\r\n          <span>\r\n            <b>{char}</b>\r\n          </span>\r\n        </div>\r\n        <div className={`flipcard-back2 ${classes.cardBG}`}>\r\n          <span>\r\n            <b>{katakanaToRomaji[char]}</b>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default KatakanaChar;","import React from \"react\";\r\nimport LoadingPopup from \"./LoadingPopup\";\r\nimport { GETCHARSCORE_URL } from \"../constants\";\r\nimport { limitedKatakanaList } from \"../jap-char\";\r\nimport KatakanaChar from \"./KatakanaChar\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport \"../scss/components/KatakanaChar.scss\";\r\n\r\nclass KatakanaChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      charResultList: {}\r\n    };\r\n  }\r\n\r\n  requestGetCharScore = () => {\r\n    fetch(GETCHARSCORE_URL, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_uid: this.props.user_uid,\r\n      })\r\n    })\r\n      .then((res) => res.json())\r\n      .then((charResultList) => {\r\n        this.setState({ charResultList: charResultList });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error in fetching data about characters' familiarity\", err)\r\n      });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.requestGetCharScore();\r\n  }\r\n\r\n  render() {\r\n    if (Object.keys(this.state.charResultList).length === 0) {\r\n      return <LoadingPopup isOpen={true} />\r\n    }\r\n\r\n    const katakanaArray = limitedKatakanaList.map((kana, idx) => {\r\n      const kana_filteredResultList = this.state.charResultList[kana].filter(resultType => resultType !== \"incorrect\")\r\n\r\n      return (\r\n        <Grid item key={idx}>\r\n          <KatakanaChar\r\n            char={kana}\r\n            key={idx}\r\n            isEncountered={kana_filteredResultList.length > 0}\r\n          />\r\n        </Grid>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"characters-list\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing=\"2\"\r\n        >\r\n          {katakanaArray}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  };\r\n\r\n}\r\n\r\nexport default KatakanaChart;","import { USER_TIME_LIMIT_IN_MINUTES } from \"../constants\";\r\n\r\nconst listOfPraises = [\r\n  \"Great job!\",\r\n  \"You're a pro!\",\r\n  \"You're getting better!\",\r\n  \"You're getting good at this!\",\r\n  \"You're getting good!\",\r\n  \"Well done!\",\r\n  \"Nicely done!\",\r\n  \"Good job!\",\r\n]\r\n\r\nconst listOfSoftPraises = [\r\n  \"Nice!\",\r\n  \"Good!\",\r\n  \"Awesome!\",\r\n  \"Well done!\",\r\n  \"Great!\",\r\n  \"Good job!\",\r\n  \"Correct!\",\r\n]\r\n\r\nconst listOfEncouragements = [\r\n  \"You got this!\",\r\n  \"Let's try again.\",\r\n  \"You can do this!\",\r\n  \"Try again.\",\r\n]\r\n\r\nconst WALKTHROUGH_PART_1 = [\r\n  {\r\n    intro: \"Welcome to the walkthrough! Click next to continue.\",\r\n    position: \"left\",\r\n  },\r\n  {\r\n    element: \".inputbox-and-word\",\r\n    intro: \"Your challenge is to type out the pronunciation of the word.\",\r\n    position: \"left\",\r\n  },\r\n  {\r\n    element: \".main-button\",\r\n    intro: \"Click this button now to see the pronunciation of the highlighted character.\",\r\n    position: \"left\",\r\n  },\r\n];\r\n\r\nconst WALKTHROUGH_PART_2 = [\r\n  {\r\n    element: \".hint-card\",\r\n    intro: \"A character card pops up!\",\r\n    position: \"left\",\r\n  },\r\n  {\r\n    element: \".music-button\",\r\n    intro: \"You can click this to play the audio\",\r\n    position: \"left\",\r\n  },\r\n  {\r\n    element: \".main-button\",\r\n    intro: \"Click this button again to move on\",\r\n    position: \"left\",\r\n  },\r\n];\r\nconst WALKTHROUGH_PART_3 =  [\r\n  {\r\n    element: \".inputbox-div\",\r\n    intro: \"Notice that the character is automatically filled out for you.\",\r\n    position: \"left\",\r\n  },\r\n  {\r\n    element: \".japanese-word\",\r\n    intro: \"The next character is now highlighted. \",\r\n    position: \"left\",\r\n  },\r\n  {\r\n    element: \".main-area\",\r\n    intro: \"Can you try to finish the rest? Keep clicking the button if you don't the character.\",\r\n    position: \"left\",\r\n  },\r\n]\r\n\r\nconst WALKTHROUGH_PART_4 = [\r\n  {\r\n    intro: \"Now you know the general flow of the webapp. Just one last thing: You can press spacebar instead of clicking the button.\",\r\n    position: \"left\",\r\n  },\r\n  {\r\n    element: \".nav-button-home\",\r\n    intro: \"You are currently on the 'Home' tab.\",\r\n    position: \"bottom\",\r\n  },\r\n  {\r\n    element: \".nav-button-chart\",\r\n    intro: \"Check your progress with these two tabs.\",\r\n    position: \"bottom\",\r\n  },\r\n  {\r\n    element: \".nav-button-walkthrough\",\r\n    intro: \"Click this tab to replay this walkthrough\",\r\n    position: \"bottom\",\r\n  },\r\n];\r\n\r\nexport { \r\n  WALKTHROUGH_PART_1,\r\n  WALKTHROUGH_PART_2,\r\n  WALKTHROUGH_PART_3,\r\n  WALKTHROUGH_PART_4,\r\n  listOfPraises,\r\n  listOfSoftPraises,\r\n  listOfEncouragements,\r\n};","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CharList from \"./CharList\";\nimport CharInput from \"./CharInput\";\nimport NavBar from \"../components/NavBar\";\nimport Hint from \"../components/Hint\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { katakanaToRomaji } from \"../jap-char\";\nimport Signin from \"../components/Signin\";\nimport Register from \"../components/Register\";\nimport WordCard from \"../components/WordCard\";\nimport OutsideAlerter from \"../components/OutsideAlerter\";\nimport Footer from \"../components/Footer\";\nimport MessageBar from \"../components/MessageBar\";\nimport SmallCharList from \"../components/SmallCharList\";\nimport KatakanaChart from \"../components/KatakanaChart\";\nimport { Button } from \"@material-ui/core\";\nimport LoadingPopup from \"../components/LoadingPopup\"\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\n// dialog\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport \"../scss/containers/App.scss\";\nimport {\n  updateChar,\n  updateWord,\n  resetStore,\n} from \"../actions\";\nimport {\n  GETWORD_URL,\n  UPDATECHARSCORE_URL,\n  WORDSCORE_URL,\n  MEDIA_BASE_URL_WORD,\n  USER_TIME_LIMIT_IN_MINUTES,\n} from \"../constants\";\nimport {\n  listOfPraises,\n  listOfSoftPraises,\n  WALKTHROUGH_PART_1,\n  WALKTHROUGH_PART_2,\n  WALKTHROUGH_PART_3,\n  WALKTHROUGH_PART_4,\n} from \"../constants/App-constants\"\n\nimport LogRocket from \"logrocket\";\n\n// test introjs\nimport 'intro.js/introjs.css';\nimport { Steps } from 'intro.js-react';\n\nLogRocket.init(\"zskhtw/japanese-learning\");\n\nconst mapStateToProps = (state) => {\n  return {\n    currentJapChar: state.changeCardState.currentJapChar,\n    onIncorrectCard: state.changeCardState.onIncorrectCard,\n    curWrongChar: state.changeCardState.curWrongChar,\n    onHintedCard: state.changeCardState.onHintedCard,\n    wordCompleted: state.changeCardState.wordCompleted,\n    currentWord: state.changeCardState.currentWord,\n    audioIsPlaying: state.changeGeneralState.audioIsPlaying,\n    romajiNotInDict: state.changeInputBox.romajiNotInDict,\n    cardStateList: state.changeCardState.cardStateList,\n    indexCurrentCard: state.changeCardState.indexCurrentCard,\n    wrongCharList: state.changeCardState.wrongCharList,\n    romajiList: state.changeCardState.romajiList,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCurrentChar: (japchar, romaji) => {\n      dispatch(updateChar(japchar, romaji));\n    },\n    updateWord: (word, romajiList) => {\n      dispatch(updateWord(word, romajiList));\n    },\n    resetStore: () => {\n      dispatch(resetStore());\n    },\n  };\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: \"register\", // should be register\n      // userInfo: {\n      //   id: \"fc4000b4-6046-432a-aa85-7587c7c6a84e\",\n      //   name: \"sexyboy\",\n      //   email: \"sexyboy@g.com\",\n      //   joined: \"2020-10-21T01:56:33.322Z\",\n      // },\n      userInfo: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        joined: \"\",\n      },\n      requestedWord: `place_holder`,\n\n      currentWordInfo: null,\n      openEndDialogue: false,\n      isFetchingWord: false,\n      checkedAudioAutoPlay: false,\n      checkedEnableMessage: true,\n      checkedEnableBlueButton: true,\n      walkThroughEnabled: false,\n\n      // introjs test\n      initialStep: 0,\n      steps1Enabled: false,\n      steps2Enabled: false,\n      steps3Enabled: false,\n      steps4Enabled: false,\n      transitionedFromSteps1ToSteps2: false,\n      transitionedFromSteps2ToSteps3: false,\n      transitionedFromSteps3ToSteps5: false,\n      steps1: WALKTHROUGH_PART_1,\n      steps2: WALKTHROUGH_PART_2,\n      steps3: WALKTHROUGH_PART_3,\n      steps4: WALKTHROUGH_PART_4,\n      disableAllAction: false,\n    };\n    this.charInputRef = React.createRef();\n    this.hintCardRef = React.createRef();\n    this.wordCardRef = React.createRef();\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    // check if it's user's first time logging in\n    if (this.state.route === \"home\"\n        && prevState.route === \"register\") {\n      this.setState({ walkThroughEnabled: true }) // TODO should be true\n      this.setState({ steps1Enabled: true })\n      this.setState({ steps2Enabled: false })\n      this.setState({ steps3Enabled: false })\n      this.setState({ steps4Enabled: false })\n    } \n    if (this.state.userInfo.id !== prevState.userInfo.id) {\n      this.props.resetStore();\n      // this.requestNewWord();\n      // this.moveToNextWord(this.state.requestedWord);\n      console.log(`big sad`)\n      this.requestAndUpdateWord();\n    }\n    if (this.props.wordCompleted \n        && this.props.wordCompleted !== prevProps.wordCompleted) {\n      this.requestNewWord();\n    }\n    if (this.state.route === \"home\") {\n      setTimeout(() => {\n        this.setState({ openEndDialogue: true });\n      }, USER_TIME_LIMIT_IN_MINUTES * 60000);\n    }\n    if (this.state.steps1Enabled === prevState.steps1Enabled\n        && !this.state.transitionedFromSteps1ToSteps2) {\n      if (this.hintCardRef.current !== null) {\n        this.setState({ steps1Enabled: false })\n        this.setState({ steps2Enabled: true })\n        this.setState({ transitionedFromSteps1ToSteps2: true })\n      }\n    }\n    if (this.state.steps2Enabled === prevState.steps2Enabled\n        && !this.state.transitionedFromSteps2ToSteps3\n        && this.state.transitionedFromSteps1ToSteps2) {\n      if (this.hintCardRef.current === null) {\n        this.setState({ steps2Enabled: false })\n        this.setState({ steps3Enabled: true })\n        this.setState({ transitionedFromSteps2ToSteps3: true })\n      }\n    }\n    if (this.state.steps3Enabled === prevState.steps3Enabled\n        && !this.state.transitionedFromSteps3ToSteps4\n        && this.state.transitionedFromSteps1ToSteps2\n        && this.state.transitionedFromSteps2ToSteps3\n        && this.props.currentWord !== \"ママ\"\n        && this.props.currentWord !== prevProps.currentWord) {\n      if (this.wordCardRef.current === null) {\n        this.setState({ steps3Enabled: false })\n        this.setState({ steps4Enabled: true })\n        this.setState({ transitionedFromSteps3ToSteps4: true })\n      }\n    }\n  };\n\n  loadUser = (user) => {\n    const { user_uid, name, email, joined } = user;\n    this.setState((prevState) => {\n      let userInfo = { ...prevState.userInfo };\n      userInfo.name = name;\n      userInfo.id = user_uid;\n      userInfo.email = email;\n      userInfo.joined = joined;\n      return { userInfo };\n    });\n\n    LogRocket.identify(user_uid, {\n      name: name,\n      email: email,\n      joined: joined,\n    });\n    console.log(\"userInfo\", this.state.userInfo);\n  };\n\n  onRouteChange = (route) => {\n    this.setState({ route: route });\n  };\n\n  parseJapaneseWord = (katakana_word) => {\n    var charsToRead = [];\n    for (const katakana_char of katakana_word) {\n      var katakana_romaji = katakanaToRomaji[katakana_char] || \"??\";\n      charsToRead.push({ \n        char: katakana_char, \n        romaji: katakana_romaji \n      });\n    }\n    return charsToRead;\n  };\n\n  updateCharScore = (user_uid, katakana_char, score) => {\n    fetch(UPDATECHARSCORE_URL, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_uid: user_uid,\n        char: katakana_char,\n        score: score,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"Update Char Score:\", data);\n      })\n      .catch((error) => {\n        console.log(\"Failed to update char score\", error);\n      });\n  };\n\n  // not used\n  updateWordScore = (user_uid, word) => {\n    fetch(WORDSCORE_URL, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_uid: user_uid,\n        word: word,\n        unix_time: this.state.currentWord_unix_time,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"Update Word Score:\", data);\n        // once score is updated, request new word\n        this.requestNewWord();\n      })\n      .catch((error) => {\n        console.log(\"Failed to update word score\", error);\n      });\n  };\n\n  parseAudio = (audio_string) => {\n    return audio_string.slice(7, audio_string.length - 1);\n  };\n\n  requestNewWord = async() => {\n    return new Promise(resolve => {\n      console.log('requesting new word...')\n      this.setState({ clickedJapChar: \"\" });\n      this.setState({ isFetchingWord: true })\n      const wordRequestTime = Date.now();\n      console.log(\"Word requested at time:\", wordRequestTime)\n      this.setState({ wordRequestTimeStamp: wordRequestTime})\n  \n      fetch(GETWORD_URL, {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          user_uid: this.state.userInfo.id,\n        }),\n      })\n        .then((res) => res.json())\n        .then((word) => {\n          console.log('sucessfully requested new word...')\n  \n          if (word === \"END GAME\") {\n            this.setState({ openEndDialogue: true });\n          }\n          this.setState({ isFetchingWord: false });\n          this.setState({ requestedWord: word }); // not sure if should use await here\n          resolve();\n        })\n        .catch((err) => {\n          console.log(\"Error in getting next word\", err);\n        });\n    });\n  };\n\n  moveToNextWord = async(word) => {\n    console.log(`DEBUG ${word}`)\n    const { setCurrentChar, updateWord } = this.props;\n    var romajiList = [];\n    romajiList = this.parseJapaneseWord(word.vocab_kana).map(\n      (kana_char) => kana_char.romaji\n    );\n    updateWord(word.vocab_kana, romajiList);\n    setCurrentChar(word.vocab_kana.charAt(0), romajiList[0]);\n\n    this.setState({ currentWordInfo: word });\n    this.setState({ currentWord_unix_time: Date.now() });\n    const audio_url = `${MEDIA_BASE_URL_WORD}${this.parseAudio(word.vocab_sound_local)}`\n    const word_audio = new Audio(audio_url);\n\n    word_audio.addEventListener(\"loadedmetadata\", (event) => {\n      console.log(\"audio duration\", event.target.duration)\n      this.setState({\n        word_audio_duration: event.target.duration,\n      });\n    });\n  }\n\n  requestAndUpdateWord = async() => {\n    await this.requestNewWord();\n    this.moveToNextWord(this.state.requestedWord);\n  }\n\n  focusInputBox = () => {\n    this.charInputRef.current.formRef.current.focus();\n  };\n\n  onClickCard = (event) => {\n    const kana_char = event.target.innerText;\n    this.setState({ clickedJapChar: kana_char });\n\n    // unclick\n    if (this.state.clickedJapChar === kana_char) {\n      this.setState({ clickedJapChar: \"\" });\n    }\n  };\n\n  showHint = () => {\n    // once user completed word, can review hint card\n    if (this.props.wordCompleted && this.state.clickedJapChar) {\n      return (\n        <Grid item>\n          <Paper elevation={1} />\n          <Hint \n            currentHintedChar={this.state.clickedJapChar} \n            autoplayAudio={this.state.checkedAudioAutoPlay}\n            ref={this.hintCardRef}\n          />\n        </Grid>\n      );\n    }\n    if (this.props.onHintedCard) {\n      return (\n        <Grid item>\n          <Paper elevation={1} />\n          <Hint \n            currentHintedChar={this.props.currentJapChar} \n            autoplayAudio={this.state.checkedAudioAutoPlay}\n            ref={this.hintCardRef}\n          />\n        </Grid>\n      );\n    }\n  };\n\n  displayWordInfo = () => {\n    if (this.props.wordCompleted) {\n      return (\n        <Grid item>\n          <WordCard\n            wordInfo={this.state.currentWordInfo}\n            word_audio_duration={this.state.word_audio_duration}\n            autoplayAudio={this.state.checkedAudioAutoPlay}\n            ref={this.wordCardRef}\n          />\n        </Grid>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  getKeyByValue = (object, value) => {\n    return Object.keys(object).find((key) => object[key] === value);\n  };\n\n  randomItem = (aList) => {\n    return aList[Math.floor(Math.random() * aList.length)];\n  }\n\n  displayMessage = () => {\n    const {\n      onIncorrectCard,\n      onHintedCard,\n      curWrongChar,\n      wordCompleted,\n      audioIsPlaying,\n      romajiNotInDict,\n      currentJapChar,\n      cardStateList,\n      indexCurrentCard,\n      wrongCharList,\n      romajiList,\n    } = this.props;\n    if (this.state.walkThroughEnabled) {\n      return \"...\"\n    }\n    if (audioIsPlaying) {\n      return `Playing audio...`;\n    }\n    if (onIncorrectCard) {\n      return (romajiNotInDict \n        ? `${curWrongChar} does not exist in the Japanese alphabet.`\n        : `${curWrongChar} corresponds to ${this.getKeyByValue(katakanaToRomaji, curWrongChar)}, not ${currentJapChar}.`\n      );\n    } else if (onHintedCard) {\n      return \"Press spacebar again to continue.\"\n    } else if (romajiList[indexCurrentCard] in wrongCharList) {\n      return \"Press spacebar to learn the character if you're stuck.\"\n    } else if (indexCurrentCard > 0 \n      && indexCurrentCard < cardStateList.length\n      && cardStateList[indexCurrentCard - 1] === \"correct\") {\n        return this.randomItem(listOfSoftPraises);\n    } else if (wordCompleted && !audioIsPlaying) {\n      const cardStateSet = new Set(cardStateList);\n      if (cardStateSet.size === 1 && cardStateSet.has(\"correct\")) {\n        return this.randomItem(listOfPraises);\n      } else {\n        return \"You can click on a character to review its mnemonic card.\";\n      }\n    } else {\n      // return `I will be giving you feedback as you use the app.`;\n      return `...`;\n    }\n  };\n  setButtonText = () => {\n    const {\n      onIncorrectCard,\n      onHintedCard,\n      wordCompleted,\n      audioIsPlaying,\n      currentJapChar,\n    } = this.props;\n\n    if (onIncorrectCard) {\n      return \"Try Again\";\n    } else if (onHintedCard && !audioIsPlaying) {\n      return \"Got it\";\n    } else if (wordCompleted && !audioIsPlaying) {\n      return \"Next Word\";\n    } else if (!onHintedCard && !wordCompleted) {\n      return `LEARN ${currentJapChar}`;\n    } else {\n      return \"\";\n    }\n  };\n  displayLoadingPopup = () => {\n    console.log(`BEFORE`)\n    setTimeout(() => {\n      console.log(\"after 1 sec\");\n      return this.state.isFetchingWord;\n    }, 1000);\n    \n    // return this.state.isFetchingWord;\n    \n    // return curTime > this.state.wordRequestTimeStamp > 2000;\n\n    // if (this.state.isFetchingWord) {\n    //   const curTime = Date.now()\n    //   if (curTime - this.state.wordRequestTimeStamp > 1000) {\n    //     console.log(\"Word Request is taking more than 1 sec\")\n    //     return true;\n    //   } else {\n    //     return false;\n    //   }\n    // } else {\n    //   return false;\n    // }\n  }\n  handleAudioAutoplaySwitch = (event) => {\n    this.setState(\n      { checkedAudioAutoPlay: !this.state.checkedAudioAutoPlay }\n    );\n  }\n  handleEnableMessageSwitch = () => {\n    this.setState(\n      { checkedEnableMessage: !this.state.checkedEnableMessage }\n    );\n  }\n  handleEnableBlueButtonSwitch = () => {\n    this.setState(\n      {checkedEnableBlueButton: !this.state.checkedEnableBlueButton }\n    )\n  }\n\n  onExitIntro1 = () => {\n    this.setState({ steps1Enabled: false });\n    this.setState({ disableAllAction: false });\n    this.setState({ checkedEnableMessage: true });\n  }\n  onExitIntro2 = () => {\n    this.setState({ steps2Enabled: false });\n    this.setState({ disableAllAction: false });\n  }\n  onExitIntro3 = () => {\n    this.setState({ steps3Enabled: false });\n    this.setState({ disableAllAction: false });\n  }\n  onExitIntro4 = () => {\n    this.setState({ steps4Enabled: false });\n    this.setState({ disableAllAction: false });\n    this.setState({ walkThroughEnabled: false });\n  }\n  \n  handleClickWalkthrough = () => {\n    // this.clickChild(this.charInputRef.current.formRef.current);\n    this.clearFormInput(this.charInputRef.current.formRef.current);\n    this.setState({ steps1Enabled: true });\n    this.setState({ steps2Enabled: false });\n    this.setState({ steps3Enabled: false });\n    this.setState({ steps4Enabled: false });\n    this.setState({ transitionedFromSteps1ToSteps2: false });\n    this.setState({ transitionedFromSteps2ToSteps3: false });\n    this.setState({ transitionedFromSteps3ToSteps4: false });\n    this.setState({ walkThroughEnabled: true });\n    this.setState({ checkedEnableBlueButton: true });\n    this.props.resetStore();\n    // this.requestNewWord();\n    // this.moveToNextWord(this.state.requestedWord);\n    this.requestAndUpdateWord();\n  }\n\n  endWalkThrough = () => {\n    this.clearFormInput(this.charInputRef.current.formRef.current);\n    this.setState({ steps1Enabled: false });\n    this.setState({ steps2Enabled: false });\n    this.setState({ steps3Enabled: false });\n    this.setState({ steps4Enabled: false });\n    this.setState({ transitionedFromSteps1ToSteps2: false });\n    this.setState({ transitionedFromSteps2ToSteps3: false });\n    this.setState({ transitionedFromSteps3ToSteps4: false });\n    this.setState({ walkThroughEnabled: false });\n    this.setState({ checkedEnableBlueButton: true });\n    this.props.resetStore();\n    // this.requestNewWord();\n    // this.moveToNextWord(this.state.requestedWord);\n    this.requestAndUpdateWord();\n  }\n\n  onBeforeChange1 = (nextStepIndex) => {\n    if (nextStepIndex) {\n      // select dynamically created elements\n      this.steps1.updateStepElement(nextStepIndex);\n    }\n    if (nextStepIndex === 4) {\n      if (!this.hintCardRef.current) {\n        return false;\n      } else {\n        this.steps1.updateStepElement(nextStepIndex);\n      }\n    }\n  }\n  onBeforeChange2 = (nextStepIndex) => {\n    if (nextStepIndex) {\n      this.steps2.updateStepElement(nextStepIndex);\n    }\n    if (nextStepIndex === 3) {\n      if (this.hintCardRef.current !== null) {\n        return false;\n      } else {\n        this.steps2.updateStepElement(nextStepIndex);\n      }\n    }\n  }\n  onBeforeChange3 = (nextStepIndex) => {\n    if (nextStepIndex) {\n      this.steps3.updateStepElement(nextStepIndex);\n    }\n    if (nextStepIndex === 3) {\n      if (this.wordCardRef.current !== null) {\n        return false;\n      } else {\n        this.steps3.updateStepElement(nextStepIndex);\n      }\n    }\n  }\n  onBeforeChange4 = (nextStepIndex) => {\n    if (nextStepIndex) {\n      this.steps4.updateStepElement(nextStepIndex);\n    }\n  }\n  onChangeInSteps = (specialIndex) => (index, _) => {\n    if (index !== specialIndex) {\n      this.setState({ disableAllAction: true });\n    } else {\n      this.setState({ disableAllAction: false });\n    }\n  }\n  \n  renderRoute = (route) => {\n    switch (route) {\n      case \"progress\":\n        return (\n          <div className=\"progress-flex-container\">\n            <div className=\"progress-flex-item1\">\n              <NavBar\n                onRouteChange={this.onRouteChange}\n                currentTab=\"progress\"\n              />\n            </div>\n            <div className=\"progress-flex-item2\">\n              <SmallCharList user_uid={this.state.userInfo.id} />\n            </div>\n            <Footer />\n          </div>\n        );\n      case \"katakanaChart\":\n        return (\n          <div className=\"progress-flex-container\">\n            <div className=\"progress-flex-item1\">\n              <NavBar\n                onRouteChange={this.onRouteChange}\n                currentTab=\"katakanaChart\"\n              />\n            </div>\n            <div className=\"progress-flex-item2\">\n              <KatakanaChart user_uid={this.state.userInfo.id} />\n            </div>\n            <Footer />\n          </div>\n        )\n      case \"signin\":\n        return (\n          <Signin onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n        );\n      case \"register\":\n        return (\n          <Register\n            onRouteChange={this.onRouteChange}\n            loadUser={this.loadUser}\n          />\n        );\n      case \"home\":\n        const { currentWord } = this.props;\n        const {\n          steps1Enabled,\n          steps2Enabled,\n          steps3Enabled,\n          steps4Enabled,\n          steps1,\n          steps2,\n          steps3,\n          steps4,\n          initialStep\n        } = this.state;\n        const generalStepsOptions = {\n          showStepNumbers: false,\n          hidePrev: true,\n          hideNext: true,\n          exitOnOverlayClick: false,\n          exitOnEsc: false,\n          showButtons: true,\n          overlayOpacity: 0.5,\n          skipLabel: \"Skip forward\",\n          doneLabel: \"Exit\",\n        };\n        const lastStepsOptions = {\n          showStepNumbers: false,\n          hidePrev: true,\n          hideNext: true,\n          showButtons: false,\n          overlayOpacity: 0.2,\n        };\n        return (\n          <div className=\"page-container\" style={{ position: \"relative\" }}>\n            <LoadingPopup isOpen={this.displayLoadingPopup()}/>\n            <Steps\n              enabled={steps1Enabled && this.state.walkThroughEnabled}\n              steps={steps1}\n              initialStep={initialStep}\n              onExit={this.onExitIntro1}\n              options={generalStepsOptions}\n              ref={steps => (this.steps1 = steps)}\n              onBeforeChange={this.onBeforeChange1}\n              onChange={this.onChangeInSteps(2)}\n            />\n            <Steps\n              enabled={steps2Enabled && this.state.walkThroughEnabled}\n              steps={steps2}\n              initialStep={initialStep}\n              onExit={this.onExitIntro2}\n              options={generalStepsOptions}\n              ref={steps => (this.steps2 = steps)}\n              onBeforeChange={this.onBeforeChange2}\n              onChange={this.onChangeInSteps(2)}\n            />\n            <Steps\n              enabled={steps3Enabled && this.state.walkThroughEnabled}\n              steps={steps3}\n              initialStep={initialStep}\n              onExit={this.onExitIntro3}\n              options={generalStepsOptions}\n              ref={steps => (this.steps3 = steps)}\n              onBeforeChange={this.onBeforeChange3}\n              onChange={this.onChangeInSteps(2)}\n            />\n            <Steps\n              enabled={steps4Enabled && this.state.walkThroughEnabled}\n              steps={steps4}\n              initialStep={initialStep}\n              onExit={this.onExitIntro4}\n              options={generalStepsOptions}\n              ref={steps => (this.steps4 = steps)}\n              onBeforeChange={this.onBeforeChange4}\n            />\n            <Dialog\n              open={this.state.openEndDialogue}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">\n                {\"Time's Up!\"}\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                  <p>\n                    {`You have used the app for ${USER_TIME_LIMIT_IN_MINUTES} minute. Please click the link\n                    below to take a short test that will assess your Katakana\n                    knowledge. Thank you for using the app!`}\n                  </p>\n                  <a\n                    href=\"https://harvard.az1.qualtrics.com/jfe/form/SV_2aZI7SwLfhp5nxj\"\n                    className=\"survey-link\"\n                  >\n                    {\"https://harvard.az1.qualtrics.com/jfe/form/SV_2aZI7SwLfhp5nxj\"}\n                  </a>\n                </DialogContentText>\n              </DialogContent>\n            </Dialog>\n            <div className=\"content-wrap\">\n              <NavBar \n                onRouteChange={this.onRouteChange} \n                currentTab=\"home\"\n                handleClickWalkthrough={this.handleClickWalkthrough}\n              />\n              <div className=\"message-bar\">\n                <MessageBar \n                  userName={this.state.userInfo.name}\n                  message={this.displayMessage()}\n                  displayHelpMessages={this.state.checkedEnableMessage}\n                />\n              </div>\n              <FormControlLabel\n                className=\"audio-control switch-control\"\n                label=\"Autoplay Audio\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch \n                    // disabled\n                    checked={this.state.checkedAudioAutoPlay}\n                    onChange={this.handleAudioAutoplaySwitch}\n                    name=\"autoplay-audio\" \n                    color=\"primary\"\n                  />\n                }\n              >\n              </FormControlLabel>\n              <FormControlLabel\n                className=\"message-control switch-control\"\n                label=\"Help Message\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch \n                    checked={this.state.checkedEnableMessage}\n                    onChange={this.handleEnableMessageSwitch}\n                    name=\"enable-message\" \n                    color=\"primary\"\n                  />\n                }\n              >\n              </FormControlLabel>\n              <FormControlLabel\n                className=\"blue-button-visibility-control switch-control\"\n                label=\"Show Blue Button\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch \n                    checked={this.state.checkedEnableBlueButton}\n                    onChange={this.handleEnableBlueButtonSwitch}\n                    name=\"enable-bluebutton\" \n                    color=\"primary\"\n                  />\n                }\n              >\n              </FormControlLabel>\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <div className=\"main-area\">\n                  <div className=\"inputbox-and-word\">\n                    <Grid item className=\"inputbox-div\">\n                      <OutsideAlerter focusInputBox={this.focusInputBox}>\n                        <CharInput\n                          updateCharScore={this.updateCharScore}\n                          updateWordScore={this.updateWordScore}\n                          getKeyByValue={this.getKeyByValue}\n                          user_uid={this.state.userInfo.id}\n                          ref={this.charInputRef}\n                          setClick={(click) => (this.clickChild = click)}\n                          matchClearFormInputFunction={(childFunc) => (this.clearFormInput = childFunc)}\n                          disableAllAction={this.state.disableAllAction}\n                          endWalkThrough={this.endWalkThrough}\n                          walkThroughEnabled={this.state.walkThroughEnabled}\n                          moveToNextWord = {this.moveToNextWord}\n                          requestedWord = {this.state.requestedWord}\n                        />\n                      </OutsideAlerter>\n                    </Grid>\n                    <Grid item className=\"japanese-word-area\">\n                      <CharList\n                        charsToRead={this.parseJapaneseWord(currentWord)}\n                        onClickCard={this.onClickCard}\n                        clickedJapChar={this.state.clickedJapChar}\n                      />\n                    </Grid>\n                  </div>\n                  {this.state.checkedEnableBlueButton ? (<Grid item > \n                    {!this.props.audioIsPlaying ? (\n                      <Button\n                        className=\"main-button\"\n                        size=\"large\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => this.clickChild(this.charInputRef.current.formRef.current)}\n                        style={{ color: \"white\" }}\n                      >\n                        {this.setButtonText()}\n                      </Button>\n                    ) : (\n                      <Button\n                        className=\"main-button\"\n                        disabled                       \n                        size=\"large\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() =>\n                          this.clickChild(\n                            this.charInputRef.current.formRef.current\n                          )\n                        }\n                        style={{ color: \"white\" }}\n                      >\n                        {\"Got it\"}\n                      </Button>\n                    )}\n                  </Grid>) : null}\n                  <Grid item className=\"card-area\">\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={2}\n                    >                      \n                      {this.showHint()}\n                      {this.displayWordInfo()}\n                    </Grid>                  \n                  </Grid>\n                </div>\n              </Grid>\n            </div>\n            <Footer />\n          </div>\n        );\n      default:\n        return <div>Default</div>;\n    }\n  };\n\n  render() {\n    return <div className=\"tc\">{this.renderRoute(this.state.route)}</div>;\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { USER_INPUT } from \"./constants\";\r\n// import update from \"react-addons-update\";\r\n\r\nconst initialInputBox = {\r\n  inputBox: \"\",\r\n  keyPressed: \"\",\r\n  romajiNotInDict: false,\r\n};\r\n\r\nconst initialGeneralState = {\r\n  audioIsPlaying: false,\r\n};\r\n\r\nconst initialCardState = {\r\n  currentJapChar: \"\",\r\n  currentRomaji: \"\",\r\n  currentWord: \"\",\r\n  curWrongChar: \"\",\r\n  hintedCharList: [],\r\n  wrongCharList: {},\r\n  onIncorrectCard: false,\r\n  onHintedCard: false,\r\n  wordCompleted: false,\r\n  prevTimestamp: null,\r\n  charTimestamp: [],\r\n  allCharTimestamp: [],\r\n  romajiList: [],\r\n  indexCurrentCard: 0,\r\n  cardStateList: [],\r\n};\r\n\r\nexport const changeGeneralState = (\r\n  state = initialGeneralState,\r\n  action = {}\r\n) => {\r\n  switch (action.type) {\r\n    case \"PLAY_AUDIO\":\r\n      return { ...state, audioIsPlaying: true };\r\n    case \"PAUSE_AUDIO\":\r\n      return { ...state, audioIsPlaying: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const changeInputBox = (state = initialInputBox, action = {}) => {\r\n  switch (action.type) {\r\n    case USER_INPUT:\r\n      return { ...state, inputBox: action.payload };\r\n    case \"PRESS_KEY\":\r\n      return { ...state, keyPressed: action.payload };\r\n    case \"RESET_STORE\":\r\n      return { ...state, inputBox: \"\", keyPressed: \"\" };\r\n    case \"ALERT_NOT_IN_DICT\":\r\n      return { ...state, romajiNotInDict: true };\r\n    case \"RESET_NOT_IN_DICT_ALERT\":\r\n      return { ...state, romajiNotInDict: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const changeCardState = (state = initialCardState, action = {}) => {\r\n  switch (action.type) {\r\n    case \"CHAR_UPDATE\":\r\n      return {\r\n        ...state,\r\n        currentJapChar: action.currentJapChar,\r\n        currentRomaji: action.currentRomaji,\r\n      };\r\n    case \"ENTER_PRESS\":\r\n      state.cardStateList[state.indexCurrentCard] = \"hinted\";\r\n      return {\r\n        ...state,\r\n        hintedCharList: [...state.hintedCharList, state.currentRomaji],\r\n        onHintedCard: false,\r\n        prevTimestamp: action.time,\r\n        indexCurrentCard: state.indexCurrentCard + 1,\r\n      };\r\n    case \"WRONG_INPUT\":\r\n      state.wrongCharList[action.currentChar] = action.userInput;\r\n      state.cardStateList[state.indexCurrentCard] = \"incorrect\";\r\n      return {\r\n        ...state,\r\n        onIncorrectCard: true,\r\n        curWrongChar: action.userInput,\r\n      };\r\n    case \"SPACE_PRESS_TO_CONTINUE\":\r\n      state.cardStateList[state.indexCurrentCard] = \"\";\r\n      return { ...state, onIncorrectCard: false };\r\n    case \"SPACE_PRESS_FOR_HINT\":\r\n      return { ...state, onHintedCard: true };\r\n    case \"SPACE_PRESS_TO_GO_NEXT\":\r\n      return {\r\n        ...state,\r\n        wordCompleted: false,\r\n        charTimestamp: [],\r\n        allCharTimestamp: [...state.allCharTimestamp, state.charTimestamp],\r\n        // prevTimestamp: action.time,\r\n        hintedCharList: [],\r\n      };\r\n    case \"COMPLETE_WORD\":\r\n      return { ...state, wordCompleted: true };\r\n    case \"UPDATE_WORD\":\r\n      return {\r\n        ...state,\r\n        currentWord: action.payload,\r\n        romajiList: action.romajiList,\r\n        cardStateList: action.cardStateList,\r\n        indexCurrentCard: 0,\r\n      };\r\n    case \"COMPLETE_CHAR\":\r\n      const newTimestamp = {\r\n        char: state.currentJapChar,\r\n        time: action.time - state.prevTimestamp,\r\n        type: action.completionType,\r\n      };\r\n      console.log(\"TIME STAMP\", newTimestamp);\r\n      return {\r\n        ...state,\r\n        charTimestamp: [...state.charTimestamp, newTimestamp],\r\n        prevTimestamp: action.time,\r\n      };\r\n    case \"SET_NEW_WORD_TIME\":\r\n      return { ...state, prevTimestamp: action.time };\r\n    case \"INPUT_CORRECT_CHAR\":\r\n      // state.cardStateList[state.indexCurrentCard] = \"correct\";\r\n      return {\r\n        ...state,\r\n        indexCurrentCard: state.indexCurrentCard + 1,\r\n        cardStateList: state.cardStateList.map((item, idx) =>\r\n          idx === state.indexCurrentCard ? \"correct\" : item\r\n        ),\r\n      };\r\n    case \"INPUT_INCORRECT_CHAR\":\r\n      // state.cardStateList[state.indexCurrentCard] = \"incorrect\";\r\n      return {\r\n        ...state,\r\n        cardStateList: state.cardStateList.map((item, idx) =>\r\n          idx === state.indexCurrentCard ? \"incorrect\" : item\r\n        ),\r\n      };\r\n    case \"RESET_STORE\":\r\n      return {\r\n        ...state,\r\n        allCharTimestamp: [],\r\n        charTimestamp: [],\r\n        curWrongChar: null,\r\n        onHintedCard: false,\r\n        onIncorrectCard: false,\r\n        wordCompleted: false,\r\n        wrongCharList: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport \"./scss/index.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import \"tachyons\"; // mess with material-ui Textfield\nimport App from \"./containers/App.js\";\nimport {\n  changeGeneralState,\n  changeInputBox,\n  changeCardState,\n} from \"./reducers\";\nimport { PRIMARYCOLOR } from \"./constants.js\"\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport \"typeface-roboto\";\nimport LogRocket from \"logrocket\";\n\nLogRocket.init(\"zskhtw/japanese-learning\");\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: PRIMARYCOLOR,\n    },\n    secondary: {\n      main: \"#ffffff\",\n    },\n  },\n});\n\nconst rootReducer = combineReducers({\n  changeGeneralState,\n  changeInputBox,\n  changeCardState,\n});\n\nconst logger = createLogger();\n\n// const store = createStore(rootReducer, applyMiddleware(logger));\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(logger, LogRocket.reduxMiddleware())\n);\n// const store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}