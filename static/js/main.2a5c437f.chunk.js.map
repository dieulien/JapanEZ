{"version":3,"sources":["serviceWorker.js","components/Char.js","constants.js","actions.js","containers/CharList.js","inputChecker.js","jap-char.js","containers/CharInput.js","components/NavBar.js","components/Music.js","components/Hint.js","components/Signin.js","components/Register.js","components/WordCard.js","components/OutsideAlerter.js","components/Footer.js","containers/App.js","reducers.js","index.js"],"names":["Boolean","window","location","hostname","match","Char","props","onMouseOver","wordCompleted","setState","isHovered","onMouseLeave","state","hovered","this","className","cardState","onClick","onClickCard","char","React","Component","REGISTER_URL","SIGNIN_URL","MEDIA_BASE_URL_WORD","updateChar","japchar","romaji","type","currentJapChar","currentRomaji","updateWord","word","romajiList","cardStateList","map","item","payload","CharList","componentDidMount","setNewWordTime","Date","now","componentDidUpdate","prevProps","JSON","stringify","charsToRead","setCardState","idx","indexCurrentCard","onHintedCard","clickedJapChar","concat","dispatchTime","charsArrayDisplay","Grid","key","container","direction","justify","alignItems","spacing","connect","changeCardState","dispatch","time","TrieNode","parent","children","end","Trie","root","prototype","getWord","output","node","unshift","join","insert","i","length","contains","find","prefix","findAllWords","arr","child","SpellCheckerBuffer","charAndRomaji","checkFunction","dict","buffer","charTrie","Object","values","forEach","element","pendingChars","Array","isArray","sp","ア","イ","ウ","エ","オ","ン","カ","キ","ク","ケ","コ","サ","シ","ス","セ","ソ","タ","チ","ツ","テ","ト","ナ","ニ","ヌ","ネ","ノ","ハ","ヒ","フ","ヘ","ホ","マ","ミ","ム","メ","モ","ヤ","ユ","ヨ","ラ","リ","ル","レ","ロ","ワ","ヲ","console","log","checkInput","katakanaToRomaji","clearBuffer","katakanaHint","imageLink","shortHint","CharInput","user_uid","convertTimeToScoreDelta","charTimestamp","score_delta","onCorrectChar","onWrongInput","onWordCompletion","currentWord","setCurrentChar","onCompleteChar","newRomaji","onKeyDown","event","onIncorrectCard","curWrongChar","onInputBoxChange","onSpacePress","onEnterPress","updateCharScore","updateWordScore","audioIsPlaying","preventDefault","lastCardState","which","String","fromCharCode","toLowerCase","onKeyPress","inputChecker","target","value","slice","curRomaji","formRef","createRef","Input","placeholder","defaultValue","inputBox","inputProps","onChange","autoFocus","inputRef","onPaste","changeGeneralState","changeInputBox","pressKey","onIncorrectChar","context","pressSpace","userChar","currentChar","userInput","typeWrongAnswer","completionType","pressEnter","forwardRef","useStyles","makeStyles","theme","flexGrow","title","NavBar","onRouteChange","classes","AppBar","position","Toolbar","Typography","variant","color","align","style","Button","Music","play","audio","Audio","audioLink","clickedHintCard","onAudioPlay","togglePlay","pause","onAudioPause","addEventListener","noStoreUpdateWhenEnded","setTimeout","delay","removeEventListener","Hint","onClickHandler","currentHintedChar","sentenceFragments","replace","split","modified_romaji","Card","CardActionArea","CardMedia","media","component","alt","image","CardContent","withStyles","maxWidth","height","withTheme","Signin","onEmailInput","signInEmail","emailErrorMsg","onPasswordInput","signInPassword","passwordErrorMsg","sendSigninInfoToBackend","fetch","method","headers","body","email","password","then","response","json","data","keys","loadUser","catch","error","onSignIn","Paper","paper2","elevation","Container","CssBaseline","paper","form","noValidate","TextField","helperText","margin","required","fullWidth","id","label","name","autoComplete","FormControlLabel","control","Checkbox","submit","xs","Link","href","fontFamily","backfround","marginTop","display","flexDirection","marginBottom","padding","breakpoints","up","width","marginLeft","marginRight","Register","onNameInput","nameErrorMsg","sendFormDataToBackEnd","onFormSubmit","validateEmail","nameError","emailError","passwordError","test","minWidth","bullet","transform","fontSize","pos","OutlinedCard","wordInfo","word_audio_duration","document","createElement","innerHTML","sentenceSegments","sentence_expression","parseAudio","audio_string","gutterBottom","vocab_meaning","vocab_pos","vocab_sound_local","sentence_sound_local","sentence_meaning","OutsideAlerter","handleClickOutside","componentWillUnmount","setWrapperRef","wrapperRef","focusInputBox","ref","Footer","App","prevState","userInfo","resetStore","requestNewWord","route","parseJapaneseWord","c","c_romaji","push","scoreDeltaList","charScoreDeltaList","res","unix_time","currentWord_unix_time","vocab_kana","curKana","charAt","currentWordInfo","duration","err","user","joined","charInputRef","current","focus","kana","innerText","showHint","displayWordInfo","displayMessage","renderRoute","paddingBottom","initialInputBox","keyPressed","initialGeneralState","initialCardState","hintedCharList","wrongCharList","prevTimestamp","allCharTimestamp","createMuiTheme","palette","primary","main","secondary","rootReducer","combineReducers","action","newTimestamp","logger","createLogger","store","createStore","applyMiddleware","ReactDOM","render","ThemeProvider","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2a5c437f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport \"../containers/App.css\";\nimport \"./Char.css\";\n\nclass Char extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHovered: false,\n    };\n  }\n\n  onMouseOver = () => {\n    if (this.props.wordCompleted) this.setState({ isHovered: true });\n  };\n\n  onMouseLeave = () => {\n    this.setState({ isHovered: false });\n  };\n\n  render() {\n    const hovered = this.state.isHovered ? \"hovered\" : \"\";\n    const className = `card tmw5 center bg-white br3 pa3 pa4-ns mv3 ba b--black-10 ${this.props.cardState} ${hovered}`;\n    return (\n      <div\n        className={className}\n        onClick={this.props.onClickCard}\n        onMouseOver={this.onMouseOver}\n        onMouseLeave={this.onMouseLeave}\n      >\n        <h1 className=\"char\">{this.props.char}</h1>\n      </div>\n    );\n  }\n}\n\nexport default Char;\n","export const USER_INPUT = \"USER_INPUT\";\r\n\r\nconst method = \"tuanHeroku\";\r\n\r\nvar REGISTER_URL = \"https://localhost:3000/register\";\r\nvar SIGNIN_URL = \"https://localhost:3000/signin\";\r\nvar PROFILE_URL = \"https://localhost:3000/profile/\";\r\nvar GETWORD_URL = \"https://shrouded-harbor-11572.herokuapp.com/getnextword\";\r\nvar CHARSCORE_URL = \"https://shrouded-harbor-11572.herokuapp.com/charscore\";\r\nvar WORDSCORE_URL = \"https://shrouded-harbor-11572.herokuapp.com/wordscore\";\r\nvar MEDIA_BASE_URL_SENTENCE =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/sentence-sound/\";\r\nvar MEDIA_BASE_URL_WORD =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/word-sound/\";\r\n// source: https://www.learn-japanese-adventure.com/learn-how-to-speak-japanese.html\r\nvar MEDIA_BASE_URL_CHAR =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/character-sound/kanasound-\"; // add {romaji}.mp3\r\nvar WORD_LINK =\r\n  \"https://www.reddit.com/r/LearnJapanese/comments/s2iop/heres_a_spreadsheet_of_the_6000_most_common/c4ak0xd/\";\r\nvar TOFUGU_LINK = \"https://www.tofugu.com/japanese/learn-katakana/\";\r\n\r\nswitch (method) {\r\n  case \"local\":\r\n    break;\r\n  case \"tuanHeroku\":\r\n    REGISTER_URL = \"https://shrouded-harbor-11572.herokuapp.com/register\";\r\n    SIGNIN_URL = \"https://shrouded-harbor-11572.herokuapp.com/signin\";\r\n    PROFILE_URL = \"https://shrouded-harbor-11572.herokuapp.com/profile/\";\r\n    break;\r\n  case \"lienHeroku\":\r\n    REGISTER_URL = \"https://peaceful-sands-25473.herokuapp.com/register\";\r\n    SIGNIN_URL = \"https://peaceful-sands-25473.herokuapp.com/signin\";\r\n    PROFILE_URL = \"https://peaceful-sands-25473.herokuapp.com/profile/\";\r\n    break;\r\n  default:\r\n    console.log(\"method should be either tuanHeroku, lienHeroku, or local\");\r\n    break;\r\n}\r\n\r\nexport {\r\n  REGISTER_URL,\r\n  SIGNIN_URL,\r\n  PROFILE_URL,\r\n  GETWORD_URL,\r\n  MEDIA_BASE_URL_SENTENCE,\r\n  MEDIA_BASE_URL_WORD,\r\n  MEDIA_BASE_URL_CHAR,\r\n  CHARSCORE_URL,\r\n  WORDSCORE_URL,\r\n  WORD_LINK,\r\n  TOFUGU_LINK,\r\n};\r\n","import { USER_INPUT } from \"./constants.js\";\r\n\r\nexport const typeAnswer = (text) => {\r\n  return {\r\n    type: USER_INPUT,\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const pressSpace = (context) => {\r\n  switch (context) {\r\n    case \"REQUEST_HINT\":\r\n      return {\r\n        type: \"SPACE_PRESS_FOR_HINT\",\r\n        time: Date.now(),\r\n      };\r\n    case \"CONTINUE_AFTER_ERROR\":\r\n      return {\r\n        type: \"SPACE_PRESS_TO_CONTINUE\",\r\n        time: Date.now(),\r\n      };\r\n    case \"CONTINUE_AFTER_COMPLETE\":\r\n      return {\r\n        type: \"SPACE_PRESS_TO_GO_NEXT\",\r\n        time: Date.now(),\r\n      };\r\n    default:\r\n      return {\r\n        type: \"SPACE_PRESS\",\r\n      };\r\n  }\r\n};\r\n\r\nexport const updateChar = (japchar, romaji) => {\r\n  return {\r\n    type: \"CHAR_UPDATE\",\r\n    currentJapChar: japchar,\r\n    currentRomaji: romaji,\r\n  };\r\n};\r\n\r\nexport const pressEnter = (time) => {\r\n  return {\r\n    type: \"ENTER_PRESS\",\r\n    time: time,\r\n  };\r\n};\r\n\r\nexport const typeWrongAnswer = (userChar, currentChar) => {\r\n  return {\r\n    type: \"WRONG_INPUT\",\r\n    userInput: userChar,\r\n    currentChar: currentChar,\r\n    time: Date.now(),\r\n  };\r\n};\r\n\r\nexport const completeWord = () => {\r\n  return {\r\n    type: \"COMPLETE_WORD\",\r\n    time: Date.now(), // when user complete last character Card\r\n  };\r\n};\r\n\r\nexport const updateWord = (word, romajiList) => {\r\n  const cardStateList = romajiList.map((item) => \"\");\r\n  return {\r\n    type: \"UPDATE_WORD\",\r\n    payload: word,\r\n    romajiList: romajiList,\r\n    cardStateList: cardStateList,\r\n  };\r\n};\r\n\r\nexport const completeChar = (timestamp, completionType) => {\r\n  return {\r\n    type: \"COMPLETE_CHAR\",\r\n    time: timestamp,\r\n    completionType: completionType,\r\n  };\r\n};\r\n\r\nexport const setNewWordTime = (time) => {\r\n  return {\r\n    type: \"SET_NEW_WORD_TIME\",\r\n    time: time,\r\n  };\r\n};\r\n\r\nexport const onAudioPlay = () => {\r\n  return {\r\n    type: \"PLAY_AUDIO\",\r\n  };\r\n};\r\n\r\nexport const onAudioPause = () => {\r\n  return {\r\n    type: \"PAUSE_AUDIO\",\r\n  };\r\n};\r\n\r\nexport const pressKey = (key) => {\r\n  return {\r\n    type: \"PRESS_KEY\",\r\n    payload: key,\r\n  };\r\n};\r\n\r\nexport const onCorrectChar = () => {\r\n  return {\r\n    type: \"INPUT_CORRECT_CHAR\",\r\n  };\r\n};\r\n\r\nexport const onIncorrectChar = () => {\r\n  return {\r\n    type: \"INPUT_INCORRECT_CHAR\",\r\n  };\r\n};\r\n\r\nexport const resetStore = () => {\r\n  return {\r\n    type: \"RESET_STORE\",\r\n  };\r\n};\r\n","import React from \"react\";\nimport Char from \"../components/Char.js\";\nimport { Grid } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { setNewWordTime } from \"../actions\";\n\nconst mapStateToProps = (state) => {\n  return {\n    // charTimestamp: state.changeCardState.charTimestamp,\n    // keyPressed: state.changeInputBox.keyPressed,\n    indexCurrentCard: state.changeCardState.indexCurrentCard,\n    cardStateList: state.changeCardState.cardStateList,\n    onHintedCard: state.changeCardState.onHintedCard,\n    wordCompleted: state.changeCardState.wordCompleted,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setNewWordTime: (time) => {\n      dispatch(setNewWordTime(time));\n    },\n  };\n};\n\nclass CharList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dispatchTime: 0,\n    };\n  }\n\n  componentDidMount = () => {\n    this.props.setNewWordTime(Date.now());\n  };\n\n  componentDidUpdate = (prevProps) => {\n    if (\n      JSON.stringify(this.props.charsToRead) !==\n      JSON.stringify(prevProps.charsToRead)\n    ) {\n      this.props.setNewWordTime(Date.now());\n    }\n  };\n\n  setCardState = (idx, char) => {\n    const {\n      indexCurrentCard,\n      cardStateList,\n      onHintedCard,\n      wordCompleted,\n    } = this.props;\n    var className = \"\";\n\n    if (char === this.props.clickedJapChar && wordCompleted) {\n      className = className.concat(` clicked `);\n    }\n    if (idx === indexCurrentCard) {\n      className = className.concat(` highlighted `);\n    } else {\n      className = className.concat(onHintedCard ? ` o-30 ` : ` o-100 `);\n    }\n    var cardState = cardStateList[idx];\n    className = className.concat(` ${cardState} `);\n    return className;\n  };\n\n  render() {\n    const charsArrayDisplay = this.props.charsToRead.map((item, idx) => {\n      return (\n        <Grid item key={idx}>\n          <Char\n            char={item.char}\n            key={idx}\n            cardState={this.setCardState(idx, item.char)}\n            onClickCard={this.props.onClickCard}\n            wordCompleted={this.props.wordCompleted}\n          />\n        </Grid>\n      );\n    });\n\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing=\"1\"\n      >\n        {charsArrayDisplay}\n      </Grid>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CharList);\n","// Trie.js - super simple JS implementation\r\n// https://en.wikipedia.org/wiki/Trie\r\n// https://gist.github.com/tpae/72e1c54471e88b689f85ad2b3940a8f0\r\n\r\n// -----------------------------------------\r\n\r\nconst katakanaToRomaji = {\r\n  ア: \"a\",\r\n  イ: \"i\",\r\n  ウ: \"u\",\r\n  エ: \"e\",\r\n  オ: \"o\",\r\n  ン: \"nn\",\r\n  カ: \"ka\",\r\n  キ: \"ki\",\r\n  ク: \"ku\",\r\n  ケ: \"ke\",\r\n  コ: \"ko\",\r\n  サ: \"sa\",\r\n  シ: \"shi\",\r\n  ス: \"su\",\r\n  セ: \"se\",\r\n  ソ: \"so\",\r\n  タ: \"ta\",\r\n  チ: \"chi\",\r\n  ツ: \"tsu\",\r\n  テ: \"te\",\r\n  ト: \"to\",\r\n  ナ: \"na\",\r\n  ニ: \"ni\",\r\n  ヌ: \"nu\",\r\n  ネ: \"ne\",\r\n  ノ: \"no\",\r\n  ハ: \"ha\",\r\n  ヒ: \"hi\",\r\n  フ: \"fu\",\r\n  ヘ: \"he\",\r\n  ホ: \"ho\",\r\n  マ: \"ma\",\r\n  ミ: \"mi\",\r\n  ム: \"mu\",\r\n  メ: \"me\",\r\n  モ: \"mo\",\r\n  ヤ: \"ya\",\r\n  ユ: \"yu\",\r\n  ヨ: \"yo\",\r\n  ラ: \"ra\",\r\n  リ: \"ri\",\r\n  ル: \"ru\",\r\n  レ: \"re\",\r\n  ロ: \"ro\",\r\n  ワ: \"wa\",\r\n  ヲ: \"wo\",\r\n};\r\n\r\n// we start with the TrieNode\r\nfunction TrieNode(key) {\r\n  // the \"key\" value will be the character in sequence\r\n  this.key = key;\r\n\r\n  // we keep a reference to parent\r\n  this.parent = null;\r\n\r\n  // we have hash of children\r\n  this.children = {};\r\n\r\n  // check to see if the node is at the end\r\n  this.end = false;\r\n}\r\n\r\n// iterates through the parents to get the word.\r\n// time complexity: O(k), k = word length\r\nTrieNode.prototype.getWord = function () {\r\n  var output = [];\r\n  var node = this;\r\n\r\n  while (node !== null) {\r\n    output.unshift(node.key);\r\n    node = node.parent;\r\n  }\r\n\r\n  return output.join(\"\");\r\n};\r\n\r\n// -----------------------------------------\r\n\r\n// we implement Trie with just a simple root with null value.\r\nfunction Trie() {\r\n  this.root = new TrieNode(null);\r\n}\r\n\r\n// inserts a word into the trie.\r\n// time complexity: O(k), k = word length\r\nTrie.prototype.insert = function (word) {\r\n  var node = this.root; // we start at the root\r\n\r\n  // for every character in the word\r\n  for (var i = 0; i < word.length; i++) {\r\n    // check to see if character node exists in children.\r\n    if (!node.children[word[i]]) {\r\n      // if it doesn't exist, we then create it.\r\n      node.children[word[i]] = new TrieNode(word[i]);\r\n\r\n      // we also assign the parent to the child node.\r\n      node.children[word[i]].parent = node;\r\n    }\r\n\r\n    // proceed to the next depth in the trie.\r\n    node = node.children[word[i]];\r\n\r\n    // finally, we check to see if it's the last word.\r\n    if (i === word.length - 1) {\r\n      // if it is, we set the end flag to true.\r\n      node.end = true;\r\n    }\r\n  }\r\n};\r\n\r\n// check if it contains a whole word.\r\n// time complexity: O(k), k = word length\r\nTrie.prototype.contains = function (word) {\r\n  var node = this.root;\r\n\r\n  // for every character in the word\r\n  for (var i = 0; i < word.length; i++) {\r\n    // check to see if character node exists in children.\r\n    if (node.children[word[i]]) {\r\n      // if it exists, proceed to the next depth of the trie.\r\n      node = node.children[word[i]];\r\n    } else {\r\n      // doesn't exist, return false since it's not a valid word.\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // we finished going through all the words, but is it a whole word?\r\n  return node.end;\r\n};\r\n\r\n// returns every word with given prefix\r\n// time complexity: O(p + n), p = prefix length, n = number of child paths\r\nTrie.prototype.find = function (prefix) {\r\n  var node = this.root;\r\n  var output = [];\r\n\r\n  // for every character in the prefix\r\n  for (var i = 0; i < prefix.length; i++) {\r\n    // make sure prefix actually has words\r\n    if (node.children[prefix[i]]) {\r\n      node = node.children[prefix[i]];\r\n    } else {\r\n      // there's none. just return it.\r\n      return output;\r\n    }\r\n  }\r\n\r\n  // recursively find all words in the node\r\n  findAllWords(node, output);\r\n\r\n  return output;\r\n};\r\n\r\n// recursive function to find all words in the given node.\r\nfunction findAllWords(node, arr) {\r\n  // base case, if node is at a word, push to output\r\n  if (node.end) {\r\n    arr.unshift(node.getWord());\r\n  }\r\n\r\n  // iterate through each children, call recursive findAllWords\r\n  for (var child in node.children) {\r\n    findAllWords(node.children[child], arr);\r\n  }\r\n}\r\n\r\n// -----------------------------------------\r\n\r\n// instantiate our trie\r\n//   var trie = new Trie();\r\n\r\n//   // insert few values\r\n//   trie.insert(\"hello\");\r\n//   trie.insert(\"helium\");\r\n\r\n// check contains method\r\n//console.log(trie.contains(\"helium\"));  // true\r\n//console.log(trie.contains(\"kickass\")); // false\r\n\r\n// check find method\r\n//console.log(trie.find(\"hel\"));  // [ 'helium', 'hello' ]\r\n//console.log(trie.find(\"hell\")); // [ 'hello' ]\r\n\r\nclass SpellCheckerBuffer {\r\n  constructor(charAndRomaji, checkFunction) {\r\n    this.dict = charAndRomaji;\r\n    this.checkFunction = checkFunction;\r\n    this.buffer = \"\";\r\n    this.charTrie = new Trie();\r\n    Object.values(this.dict).forEach((element) => {\r\n      this.charTrie.insert(element);\r\n    });\r\n    //console.log(this.charTrie.find(\"\"));\r\n  }\r\n  checkInput(char) {\r\n    if (char === \"clearBuffer\") {\r\n      this.buffer = \"\";\r\n      return;\r\n    }\r\n    this.buffer += char;\r\n    if (this.charTrie.contains(this.buffer)) {\r\n      this.checkFunction(this.buffer);\r\n      this.buffer = \"\";\r\n    } else {\r\n      var pendingChars = this.charTrie.find(this.buffer);\r\n      if (!Array.isArray(pendingChars) || !pendingChars.length) {\r\n        this.checkFunction(this.buffer);\r\n        this.buffer = \"\";\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst sp = new SpellCheckerBuffer(katakanaToRomaji, console.log);\r\nsp.checkInput(\"n\");\r\nsp.checkInput(\"i\");\r\nsp.checkInput(\"n\");\r\nsp.checkInput(\"a\");\r\nsp.checkInput(\"t\");\r\nsp.checkInput(\"s\");\r\nsp.checkInput(\"u\");\r\n\r\nexport default SpellCheckerBuffer;\r\n","const katakanaToRomaji = {\r\n  ア: \"a\",\r\n  イ: \"i\",\r\n  ウ: \"u\",\r\n  エ: \"e\",\r\n  オ: \"o\",\r\n  カ: \"ka\",\r\n  キ: \"ki\",\r\n  ク: \"ku\",\r\n  ケ: \"ke\",\r\n  コ: \"ko\",\r\n  サ: \"sa\",\r\n  シ: \"shi\",\r\n  ス: \"su\",\r\n  セ: \"se\",\r\n  ソ: \"so\",\r\n  タ: \"ta\",\r\n  チ: \"chi\",\r\n  ツ: \"tsu\",\r\n  テ: \"te\",\r\n  ト: \"to\",\r\n  ナ: \"na\",\r\n  ニ: \"ni\",\r\n  ヌ: \"nu\",\r\n  ネ: \"ne\",\r\n  ノ: \"no\",\r\n  ハ: \"ha\",\r\n  ヒ: \"hi\",\r\n  フ: \"fu\",\r\n  ヘ: \"he\",\r\n  ホ: \"ho\",\r\n  マ: \"ma\",\r\n  ミ: \"mi\",\r\n  ム: \"mu\",\r\n  メ: \"me\",\r\n  モ: \"mo\",\r\n  ヤ: \"ya\",\r\n  ユ: \"yu\",\r\n  ヨ: \"yo\",\r\n  ラ: \"ra\",\r\n  リ: \"ri\",\r\n  ル: \"ru\",\r\n  レ: \"re\",\r\n  ロ: \"ro\",\r\n  ワ: \"wa\",\r\n  ヲ: \"wo\",\r\n  ン: \"nn\",\r\n  clearBuffer: \"clearBuffer\",\r\n};\r\n\r\nconst katakanaHint = {\r\n  ア: {\r\n    romaji: \"a\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A2.jpg\",\r\n    shortHint: \"Find the capital 'A'\",\r\n  },\r\n  イ: {\r\n    romaji: \"i\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A4.jpg\",\r\n    shortHint: \"It looks like an <u>ea</u>gle (i)\",\r\n  },\r\n  ウ: {\r\n    romaji: \"u\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AB.jpg\",\r\n    shortHint: \"ウ looks like う (u)\",\r\n  },\r\n  エ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A8.jpg\",\r\n    shortHint:\r\n      \"Imagine this is the girders an <u>e</u> engineer would use to build buildings\",\r\n  },\r\n  オ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AA.jpg\",\r\n    shortHint:\r\n      'A dude flapping open his trench coat to flash you. \"<u>Oh</u> MY GOD!\" you say. ',\r\n  },\r\n  カ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AB.jpg\",\r\n    shortHint: \"It looks just like the Hiragana か\",\r\n  },\r\n  キ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AD.jpg\",\r\n    shortHint: \"A key (ki)\",\r\n  },\r\n  ク: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AF.jpg\",\r\n    shortHint: \"A long <u>coo</u>ks's (ku) hat\",\r\n  },\r\n  ケ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B1.jpg\",\r\n    shortHint: \"It looks like the letter <u>K</u> (ke)\",\r\n  },\r\n  コ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B3.jpg\",\r\n    shortHint: \"Two 90 degrees <u>co</u>rners (ko)\",\r\n  },\r\n  サ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B5.jpg\",\r\n    shortHint: \"Three <u>sa</u>rdines stacked on top of each other\",\r\n  },\r\n  シ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B7.jpg\",\r\n    shortHint: \"<u>She</u> has a very werid face (shi)\",\r\n  },\r\n  ス: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B9.jpg\",\r\n    shortHint: \"A hanger where you hang up your fancy <u>su</u>it (su)\",\r\n  },\r\n  セ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BB.jpg\",\r\n    shortHint: \"It looks like the Hiragana せ\",\r\n  },\r\n  ソ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BD.jpg\",\r\n    shortHint: \"One needle and a long thread which you use to <u>sew</u> (so)\",\r\n  },\r\n  タ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BF.jpg\",\r\n    shortHint: \"A <u>ti</u>dal wave racing across the sea (ta)\",\r\n  },\r\n  チ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%81.jpg\",\r\n    shortHint: \"A <u>chee</u>rleader doing a <u>chee</u>r (chi)\",\r\n  },\r\n  ツ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%84.jpg\",\r\n    shortHint: \"<u>Two</u> (tsu) needles\",\r\n  },\r\n  テ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%86.jpg\",\r\n    shortHint: \"A <u>te</u>lephone pole\",\r\n  },\r\n  ト: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%88.jpg\",\r\n    shortHint: \"A <u>to</u>tem pole\",\r\n  },\r\n  ナ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8A.jpg\",\r\n    shortHint: \"A majestic <u>na</u>rwhal\",\r\n  },\r\n  ニ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8B.jpg\",\r\n    shortHint: \"Two <u>nee</u>dles (ni) laying on their side\",\r\n  },\r\n  ヌ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8C.jpg\",\r\n    shortHint:\r\n      \"The chopsticks are grabbing onto some <u>noo</u>dles & pulling them out of a bowl. (nu)\",\r\n  },\r\n  ネ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8D.jpg\",\r\n    shortHint: \"A <u>ne</u>cromancer has summoned this zombie\",\r\n  },\r\n  ノ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8E.jpg\",\r\n    shortHint: \"A really long <u>no</u>se\",\r\n  },\r\n  ハ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8F.jpg\",\r\n    shortHint: \"A rice paddy <u>ha</u>t\",\r\n  },\r\n  ヒ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%92.jpg\",\r\n    shortHint: \"<u>He</u> (hi) has no head. <u>He</u> is reaching out to you.\",\r\n  },\r\n  フ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%95.jpg\",\r\n    shortHint: \"A <u>fu</u>nny looking owl\",\r\n  },\r\n  ヘ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%98.jpg\",\r\n    shortHint: \"This looks like the Hiragana へ\",\r\n  },\r\n  ホ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9B.jpg\",\r\n    shortHint: \"A <u>ho</u>ly cross\",\r\n  },\r\n  マ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9E.jpg\",\r\n    shortHint: \"Look at all those angles! Those lengths! All that <u>ma</u>th!\",\r\n  },\r\n  ミ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9F.jpg\",\r\n    shortHint: \"Three <u>mi</u>ssiles, flying towards you. Be careful!\",\r\n  },\r\n  ム: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A0.jpg\",\r\n    shortHint: \"It is shaped like a pile of poop. Cow poop. <u>Moo</u>. (mu)\",\r\n  },\r\n  メ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A1.jpg\",\r\n    shortHint: 'め <u>Me</u> is Japnese for \"eye\"',\r\n  },\r\n  モ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A2.jpg\",\r\n    shortHint: \"This looks like the Hiragana も\",\r\n  },\r\n  ヤ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A4.jpg\",\r\n    shortHint: \"This looks just like the Hiragana や\",\r\n  },\r\n  ユ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A6.jpg\",\r\n    shortHint: \"You (yu) have a hook for a hand\",\r\n  },\r\n  ヨ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A8.jpg\",\r\n    shortHint: \"A <u>yo</u>gurt containers\",\r\n  },\r\n  ラ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A9.jpg\",\r\n    shortHint: \"It is a <u>ra</u>ptor wearing sweet <u>ra</u>y-bans\",\r\n  },\r\n  リ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AA.jpg\",\r\n    shortHint: \"It looks like the Hiragana り\",\r\n  },\r\n  ル: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AB.jpg\",\r\n    shortHint:\r\n      \"There are two <u>rou</u>tes (ru) you can take. Route 1 & Route 2.\",\r\n  },\r\n  レ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AC.jpg\",\r\n    shortHint: \"Look at that beautiful <u>re</u>d hair that <u>Re</u>i has!\",\r\n  },\r\n  ロ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AD.jpg\",\r\n    shortHint:\r\n      \"This <u>ro</u>ad goes around in a square, never ending. What a terrible <u>ro</u>ad this is.\",\r\n  },\r\n  ワ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AF.jpg\",\r\n    shortHint:\r\n      \"You often begin your question with the word <u>wha</u>t (wa). <u>Wha</u>t are you doing?\",\r\n  },\r\n  ヲ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%B2.jpg\",\r\n    shortHint: \"A dog <u>wo</u>ofing (wo) so hard its tongue is flying out\",\r\n  },\r\n  ン: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%B3.jpg\",\r\n    shortHint: \"This guy only has one eye. <u>N</u>oooo!\",\r\n  },\r\n};\r\n\r\nexport { katakanaToRomaji, katakanaHint };\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport { Input } from \"@material-ui/core\";\nimport SpellCheckerBuffer from \"../inputChecker\";\nimport { katakanaToRomaji } from \"../jap-char\";\nimport {\n  pressKey,\n  onCorrectChar,\n  onIncorrectChar,\n  typeAnswer,\n  pressSpace,\n  typeWrongAnswer,\n  completeChar,\n  pressEnter,\n  updateChar,\n  updateWord,\n  completeWord,\n} from \"../actions\";\n\nconst mapStatestoProps = (state) => {\n  return {\n    indexCurrentCard: state.changeCardState.indexCurrentCard,\n    romajiList: state.changeCardState.romajiList,\n    cardStateList: state.changeCardState.cardStateList,\n    curWrongChar: state.changeCardState.curWrongChar,\n    onIncorrectCard: state.changeCardState.onIncorrectCard,\n    wordCompleted: state.changeCardState.wordCompleted,\n    onHintedCard: state.changeCardState.onHintedCard,\n    currentRomaji: state.changeCardState.currentRomaji,\n    currentWord: state.changeCardState.currentWord,\n    charTimestamp: state.changeCardState.charTimestamp,\n    audioIsPlaying: state.changeGeneralState.audioIsPlaying,\n    inputBox: state.changeInputBox.inputBox,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onInputBoxChange: (event) => {\n      dispatch(typeAnswer(event.target.value));\n    },\n    onKeyPress: (key) => {\n      dispatch(pressKey(key));\n    },\n    onCorrectChar: () => {\n      dispatch(onCorrectChar());\n    },\n    onIncorrectChar: () => {\n      dispatch(onIncorrectChar());\n    },\n    onSpacePress: (context) => {\n      dispatch(pressSpace(context));\n    },\n    onWrongInput: (userChar, currentChar) => {\n      dispatch(typeWrongAnswer(userChar, currentChar));\n    },\n    onCompleteChar: (time, type) => {\n      dispatch(completeChar(time, type));\n    },\n    onEnterPress: (time) => {\n      dispatch(pressEnter(time));\n    },\n    setCurrentChar: (japchar, romaji) => {\n      dispatch(updateChar(japchar, romaji));\n    },\n    updateWord: (word, romajiList) => {\n      dispatch(updateWord(word, romajiList));\n    },\n    onWordCompletion: () => {\n      dispatch(completeWord());\n    },\n  };\n};\n\nclass CharInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formRef = React.createRef();\n    this.inputChecker = new SpellCheckerBuffer(\n      katakanaToRomaji,\n      this.checkFunction\n    );\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentChar,\n      romajiList,\n      indexCurrentCard,\n      currentWord,\n    } = this.props;\n\n    const curRomaji = romajiList[indexCurrentCard];\n    const curKana = currentWord[indexCurrentCard];\n    setCurrentChar(curKana, curRomaji);\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.user_uid === prevProps.user_uid) {\n    }\n  };\n\n  convertTimeToScoreDelta = (charTimestamp) => {\n    return charTimestamp.map((item) => {\n      var score_delta = 20000 / item.time;\n      if (item.type === \"hinted\") {\n        score_delta *= -1;\n      }\n      return {\n        char: item.char,\n        score_delta: score_delta,\n      };\n    });\n  };\n\n  checkFunction = (char) => {\n    const {\n      romajiList,\n      indexCurrentCard,\n      onCorrectChar,\n      onWrongInput,\n      onWordCompletion,\n      currentWord,\n      setCurrentChar,\n      onCompleteChar,\n    } = this.props;\n\n    if (char === romajiList[indexCurrentCard]) {\n      onCorrectChar();\n      onCompleteChar(Date.now(), \"correct\");\n      const newRomaji = romajiList[indexCurrentCard + 1];\n      const newKana = currentWord[indexCurrentCard + 1];\n      setCurrentChar(newKana, newRomaji);\n      if (indexCurrentCard === romajiList.length - 1) {\n        onWordCompletion();\n      }\n    } else {\n      // onIncorrectChar();\n      onWrongInput(char, romajiList[indexCurrentCard]);\n    }\n  };\n\n  onKeyDown = (event) => {\n    const {\n      onIncorrectCard,\n      curWrongChar,\n      onInputBoxChange,\n      onSpacePress,\n      onCompleteChar,\n      wordCompleted,\n      onHintedCard,\n      currentRomaji,\n      onEnterPress,\n      currentWord,\n      romajiList,\n      indexCurrentCard,\n      setCurrentChar,\n      charTimestamp,\n      updateWord,\n      updateCharScore,\n      updateWordScore,\n      onWordCompletion,\n      audioIsPlaying,\n      user_uid,\n      cardStateList,\n    } = this.props;\n\n    // disable input\n    if (audioIsPlaying) {\n      event.preventDefault();\n      return;\n    }\n\n    if (wordCompleted) {\n      event.preventDefault();\n    }\n    var lastCardState = cardStateList[cardStateList.length - 1];\n\n    if (\n      indexCurrentCard === romajiList.length - 1 &&\n      (lastCardState === \"correct\" || lastCardState === \"hinted\")\n    ) {\n      onWordCompletion();\n    }\n\n    // keycode 65 to 90 represents a-z\n    if (\n      event.which >= 65 &&\n      event.which <= 90 &&\n      !onIncorrectCard &&\n      !wordCompleted &&\n      !onHintedCard\n    ) {\n      var key = String.fromCharCode(event.which).toLowerCase();\n      this.props.onKeyPress(key);\n      this.inputChecker.checkInput(key);\n    } else {\n      event.preventDefault();\n\n      // handle SPACE press\n      if (event.which === 32) {\n        if (onIncorrectCard) {\n          // delete wrong input from inputBox\n          event.target.value = event.target.value.slice(\n            0,\n            -curWrongChar.length\n          );\n          onInputBoxChange(event);\n          onSpacePress(\"CONTINUE_AFTER_ERROR\");\n        } else if (!onIncorrectCard && !onHintedCard && !wordCompleted) {\n          // ask for hint\n          onSpacePress(\"REQUEST_HINT\");\n          onCompleteChar(Date.now(), \"hinted\");\n\n          // clear inputBox\n          event.target.value = this.inputChecker.buffer.length\n            ? event.target.value.slice(0, -this.inputChecker.buffer.length)\n            : event.target.value;\n          onInputBoxChange(event);\n\n          // clear inputChecker buffer\n          this.inputChecker.checkInput(\"clearBuffer\");\n        } else if (wordCompleted) {\n          // move on to next word\n          updateWord(\"\", [\"\"]);\n          const scoreDeltaList = this.convertTimeToScoreDelta(charTimestamp);\n          updateCharScore(user_uid, scoreDeltaList);\n          updateWordScore(user_uid, currentWord);\n\n          onSpacePress(\"CONTINUE_AFTER_COMPLETE\");\n\n          event.target.value = \"\";\n          onInputBoxChange(event);\n          const newRomaji = romajiList[0];\n          const newKana = currentWord[0];\n          setCurrentChar(newKana, newRomaji);\n        }\n      }\n\n      // handle ENTER press\n      if (event.which === 13) {\n        if (onHintedCard) {\n          if (indexCurrentCard === romajiList.length - 1) {\n            onWordCompletion();\n          }\n          // autofill correct answer\n          event.target.value = event.target.value.concat(currentRomaji);\n          onInputBoxChange(event);\n          onEnterPress(Date.now());\n\n          const curRomaji = romajiList[indexCurrentCard + 1];\n          const curKana = currentWord[indexCurrentCard + 1];\n          setCurrentChar(curKana, curRomaji);\n        }\n      }\n    }\n  };\n\n  render() {\n    return (\n      <form>\n        <Input\n          placeholder=\"Start typing here....\"\n          defaultValue={this.props.inputBox}\n          inputProps={{ \"aria-label\": \"description\" }}\n          onChange={this.props.onInputBoxChange}\n          onKeyDown={this.onKeyDown}\n          autoFocus\n          inputRef={this.formRef}\n          onPaste={(event) => {\n            event.preventDefault();\n          }}\n        />\n      </form>\n    );\n  }\n}\n\nexport default connect(mapStatestoProps, mapDispatchToProps, null, {\n  forwardRef: true,\n})(CharInput);\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst NavBar = ({ onRouteChange }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            color=\"inherit\"\n            className={classes.title}\n            align=\"left\"\n            style={{ color: \"white\" }}\n          >\n            Japanese vs. English words\n          </Typography>\n          <Button\n            style={{ color: \"white\" }}\n            color=\"inherit\"\n            onClick={() => onRouteChange(\"signin\")}\n          >\n            Signout\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\nexport default NavBar;\n","// Taken from this https://stackoverflow.com/questions/47686345/playing-sound-in-reactjs\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { onAudioPlay, onAudioPause } from \"../actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    audioIsPlaying: state.changeGeneralState.audioIsPlaying,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAudioPlay: () => {\r\n      dispatch(onAudioPlay());\r\n    },\r\n    onAudioPause: () => {\r\n      dispatch(onAudioPause());\r\n    },\r\n  };\r\n};\r\n\r\nclass Music extends React.Component {\r\n  state = {\r\n    play: false,\r\n    audio: new Audio(`${this.props.audioLink}`),\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.state.audio.addEventListener(\"ended\", () => {\r\n      this.setState({ play: false });\r\n      if (!this.props.noStoreUpdateWhenEnded) {\r\n        this.props.onAudioPause();\r\n      }\r\n    });\r\n    setTimeout(() => {\r\n      this.state.audio.play();\r\n      this.props.onAudioPlay();\r\n    }, this.props.delay);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.state.audio.removeEventListener(\"ended\", () =>\r\n      this.setState({ play: false })\r\n    );\r\n  }\r\n\r\n  componentDidUpdate = (prevProps) => {\r\n    if (prevProps.clickedHintCard !== this.props.clickedHintCard) {\r\n      this.state.audio.play();\r\n      this.props.onAudioPlay();\r\n    }\r\n  };\r\n\r\n  togglePlay = () => {\r\n    this.setState({ play: !this.state.play }, () => {\r\n      if (this.state.play) {\r\n        this.state.audio.play();\r\n        this.props.onAudioPlay();\r\n      } else {\r\n        this.state.audio.pause();\r\n        this.props.onAudioPause();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={this.togglePlay}\r\n          style={{ color: \"#ffffff\" }}\r\n        >\r\n          {this.state.play ? \"Pause Audio\" : \"Play Audio\"}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Music);\r\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Music from \"./Music\";\nimport { katakanaToRomaji, katakanaHint } from \"../jap-char\";\nimport { MEDIA_BASE_URL_CHAR } from \"../constants\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = (theme) => ({\n  root: {\n    maxWidth: 320,\n  },\n  media: {\n    height: 200,\n  },\n});\n\nconst parseoutUnderlineText = (sentence) => {\n  // replace <b> and </b> with comma\n  sentence = sentence.replace(/<\\/?u>/g, \",\");\n  return sentence.split(\",\");\n};\n\nclass Hint extends React.Component {\n  state = {\n    clickedHintCard: false,\n  };\n\n  onClickHandler = () => {\n    this.setState({ clickedHintCard: !this.state.clickedHintCard });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const romaji = katakanaToRomaji[this.props.currentHintedChar];\n    const sentenceFragments = parseoutUnderlineText(\n      katakanaHint[this.props.currentHintedChar].shortHint\n    );\n    const modified_romaji = romaji === \"nn\" ? \"n\" : romaji;\n    return (\n      <Card className={classes.root} onClick={this.onClickHandler}>\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            component=\"img\"\n            alt=\"Hint for character\"\n            image={katakanaHint[this.props.currentHintedChar].imageLink}\n            title=\"Hint for character\"\n          />\n          <CardContent>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {sentenceFragments[0]}\n              <u>{sentenceFragments[1]}</u>\n              {sentenceFragments[2]}\n            </Typography>\n            <br></br>\n            <Music\n              audioLink={MEDIA_BASE_URL_CHAR + modified_romaji + \".mp3\"}\n              delay={0}\n              noStoreUpdateWhenEnded={false}\n              clickedHintCard={this.state.clickedHintCard}\n            />\n          </CardContent>\n        </CardActionArea>\n        {/* <CardActions>\n          <Button size=\"small\" color=\"primary\">\n            Share\n          </Button>\n          <Button size=\"small\" color=\"primary\">\n            Learn More\n          </Button>\n        </CardActions> */}\n      </Card>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Hint);\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { SIGNIN_URL } from \"../constants\";\r\n\r\nconst useStyles = (theme) => ({\r\n  container: {\r\n    fontFamily: \"Roboto\",\r\n    backfround: \"white\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper2: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 500,\r\n      height: 450,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\",\r\n      emailErrorMsg: \"\",\r\n      passwordErrorMsg: \"\",\r\n    };\r\n  }\r\n\r\n  onEmailInput = (event) => {\r\n    this.setState({ signInEmail: event.target.value, emailErrorMsg: \"\" });\r\n  };\r\n\r\n  onPasswordInput = (event) => {\r\n    this.setState({ signInPassword: event.target.value, passwordErrorMsg: \"\" });\r\n  };\r\n\r\n  sendSigninInfoToBackend = () => {\r\n    const { signInEmail, signInPassword } = this.state;\r\n\r\n    fetch(SIGNIN_URL, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: signInEmail,\r\n        password: signInPassword,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (Object.keys(data).length === 4) {\r\n          this.props.loadUser(data);\r\n          this.props.onRouteChange(\"home\");\r\n          this.setState({\r\n            emailErrorMsg: \"\",\r\n            passwordErrorMsg: \"\",\r\n          });\r\n        } else {\r\n          // there is an error loggin in\r\n          console.log(\"Login Failed\", data);\r\n          if (data === \"email is not yet registered\") {\r\n            this.setState({ emailErrorMsg: data });\r\n          } else if (data === \"incorrect password\") {\r\n            this.setState({\r\n              passwordErrorMsg: data,\r\n              emailErrorMsg: \"\",\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error!\", error);\r\n      });\r\n  };\r\n\r\n  onSignIn = (event) => {\r\n    event.preventDefault();\r\n    const { signInEmail, signInPassword } = this.state;\r\n\r\n    // check that fields are not empty\r\n    if (!signInEmail) {\r\n      this.setState({ emailErrorMsg: \"please fill out your email\" });\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n    if (!signInPassword) {\r\n      this.setState({ passwordErrorMsg: \"please fill out your password\" });\r\n    } else {\r\n      this.setState({ passwordErrorMsg: \"\" });\r\n    }\r\n\r\n    if (signInEmail && signInPassword) {\r\n      this.sendSigninInfoToBackend();\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Paper className={classes.paper2} elevation={3}>\r\n        <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <form className={classes.form} noValidate>\r\n              <TextField\r\n                error={this.state.emailErrorMsg}\r\n                helperText={this.state.emailErrorMsg}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onChange={this.onEmailInput}\r\n              />\r\n              <TextField\r\n                error={this.state.passwordErrorMsg}\r\n                helperText={this.state.passwordErrorMsg}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={this.onPasswordInput}\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={this.onSignIn}\r\n                style={{ color: \"white\" }}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n              >\r\n                <Grid item xs>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    {\"Forgot password?\"}\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link\r\n                    component=\"button\"\r\n                    variant=\"body2\"\r\n                    onClick={() => this.props.onRouteChange(\"register\")}\r\n                  >\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Signin);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { REGISTER_URL } from \"../constants\";\r\n\r\nconst useStyles = (theme) => ({\r\n  container: {\r\n    fontFamily: \"Roboto\",\r\n    backfround: \"white\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper2: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 500,\r\n      height: 450,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      nameError: false,\r\n      emailError: false,\r\n      passwordError: false,\r\n      nameErrorMsg: \"\",\r\n      emailErrorMsg: \"\",\r\n      passwordErrorMsg: \"\",\r\n    };\r\n  }\r\n\r\n  validateEmail(email) {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  onNameInput = (event) => {\r\n    this.setState({ name: event.target.value, nameErrorMsg: \"\" });\r\n  };\r\n\r\n  onEmailInput = (event) => {\r\n    this.setState({ email: event.target.value, emailErrorMsg: \"\" });\r\n  };\r\n\r\n  onPasswordInput = (event) => {\r\n    this.setState({ password: event.target.value, passwordErrorMsg: \"\" });\r\n  };\r\n\r\n  sendFormDataToBackEnd = () => {\r\n    const { name, email, password } = this.state;\r\n\r\n    fetch(REGISTER_URL, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (Object.keys(data).length === 4) {\r\n          this.setState({ emailErrorMsg: \"\" });\r\n          this.props.loadUser(data);\r\n          this.props.onRouteChange(\"home\");\r\n        } else {\r\n          // if user already exist\r\n          this.setState({ emailErrorMsg: data });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error!\", error);\r\n      });\r\n  };\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { name, email, password } = this.state;\r\n\r\n    if (!name) {\r\n      this.setState({ nameErrorMsg: \"please fill out your name\" });\r\n    } else {\r\n      this.setState({ nameErrorMsg: \"\" });\r\n    }\r\n    if (!email) {\r\n      this.setState({ emailErrorMsg: \"please fill out your email\" });\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n    if (!password) {\r\n      this.setState({ passwordErrorMsg: \"please fill out your password\" });\r\n    } else {\r\n      this.setState({ passwordErrorMsg: \"\" });\r\n    }\r\n\r\n    if (!this.validateEmail(email)) {\r\n      this.setState({ emailErrorMsg: \"please enter a valid email address\" });\r\n      return;\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n\r\n    if (name && password && email) {\r\n      this.sendFormDataToBackEnd();\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { nameErrorMsg, emailErrorMsg, passwordErrorMsg } = this.state;\r\n    return (\r\n      <Paper className={classes.paper2}>\r\n        <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Register\r\n            </Typography>\r\n            <form className={classes.form} noValidate>\r\n              <TextField\r\n                error={nameErrorMsg}\r\n                helperText={nameErrorMsg}\r\n                variant=\"outlined\"\r\n                id=\"name\"\r\n                label=\"Your Name\"\r\n                autoFocus\r\n                required\r\n                fullWidth\r\n                onChange={this.onNameInput}\r\n              />\r\n              <TextField\r\n                error={emailErrorMsg}\r\n                helperText={emailErrorMsg}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={this.onEmailInput}\r\n              />\r\n              <TextField\r\n                error={passwordErrorMsg}\r\n                helperText={passwordErrorMsg}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={this.onPasswordInput}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={this.onFormSubmit}\r\n                style={{ color: \"#ffffff\" }}\r\n              >\r\n                Register\r\n              </Button>\r\n              <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <Link\r\n                    component=\"button\"\r\n                    variant=\"body2\"\r\n                    onClick={() => this.props.onRouteChange(\"signin\")}\r\n                  >\r\n                    {\"Already registered? Sign In\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Register);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Music from \"./Music\";\r\nimport { MEDIA_BASE_URL_SENTENCE, MEDIA_BASE_URL_WORD } from \"../constants\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nconst parseoutBoldText = (sentence) => {\r\n  // replace <b> and </b> with comma\r\n  sentence = sentence.replace(/<\\/?b>/g, \",\");\r\n  return sentence.split(\",\");\r\n};\r\n\r\nexport default function OutlinedCard({ wordInfo, word_audio_duration }) {\r\n  const classes = useStyles();\r\n\r\n  var el = document.createElement(\"html\");\r\n  el.innerHTML = \"<b>bolded text</b>\";\r\n  const sentenceSegments = parseoutBoldText(wordInfo.sentence_expression);\r\n\r\n  const parseAudio = (audio_string) => {\r\n    return audio_string.slice(7, audio_string.length - 1);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          Word Meaning\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {wordInfo.vocab_meaning} ({wordInfo.vocab_pos})\r\n          <Music\r\n            audioLink={`${MEDIA_BASE_URL_WORD}${parseAudio(\r\n              wordInfo.vocab_sound_local\r\n            )}`}\r\n            delay={0}\r\n            noStoreUpdateWhenEnded={true}\r\n          />\r\n        </Typography>\r\n        <br></br>\r\n\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          Sample Sentence\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {sentenceSegments[0]}\r\n          <b>\r\n            <u>{sentenceSegments[1]}</u>\r\n          </b>\r\n          {sentenceSegments[2]}\r\n          <Music\r\n            audioLink={`${MEDIA_BASE_URL_SENTENCE}${parseAudio(\r\n              wordInfo.sentence_sound_local\r\n            )}`}\r\n            delay={word_audio_duration * 1000 + 500}\r\n            noStoreUpdateWhenEnded={false}\r\n          />\r\n        </Typography>\r\n        <br></br>\r\n\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          Sentence Meaning\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {wordInfo.sentence_meaning}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","// https://stackoverflow.com/questions/32553158/detect-click-outside-react-component\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { isCompositeComponent } from \"react-dom/test-utils\";\r\n\r\nclass OutsideAlerter extends React.Component {\r\n  componentDidMount = () => {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  };\r\n\r\n  setWrapperRef = (node) => {\r\n    // console.log(\"setWrapperRef\", node);\r\n    // console.log(\"this\", this);\r\n    this.wrapperRef = node;\r\n  };\r\n\r\n  handleClickOutside = (event) => {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      // for some reason, need setTimeout to work, even if 0 delay\r\n      setTimeout(() => {\r\n        this.props.focusInputBox();\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <div ref={this.setWrapperRef}>{this.props.children}</div>;\r\n  }\r\n}\r\n\r\nOutsideAlerter.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default OutsideAlerter;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\nimport { TOFUGU_LINK, WORD_LINK } from \"../constants\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"main-footer\">\r\n      <div>\r\n        <p>\r\n          Mnemonics taken from <a href={TOFUGU_LINK}>tofugu.com</a>\r\n        </p>\r\n        <p>\r\n          Japanese words taken from{\" \"}\r\n          <a href={WORD_LINK}>reddit.com/r/LearnJapanese</a>\r\n        </p>\r\n      </div>\r\n      <hr />\r\n      <div className=\"copyright\">\r\n        <small>Copyright © 2020 Tuan Le, Lien Tran. All Rights Reserved</small>\r\n      </div>\r\n\r\n      {/* uncomment below for 2nd layout */}\r\n      {/* <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <ul className=\"list-unstyled\">\r\n              <li>\r\n                Mnemonics taken from <a href={TOFUGU_LINK}>tofugu.com</a>\r\n              </li>\r\n              <li>\r\n                Japanese words taken from{\" \"}\r\n                <a href={WORD_LINK}>reddit.com/r/LearnJapanese</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col copyright\">\r\n            <small>\r\n              Copyright © 2020 Tuan Le, Lien Tran. All Rights Reserved\r\n            </small>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CharList from \"./CharList.js\";\nimport CharInput from \"./CharInput\";\nimport NavBar from \"../components/NavBar\";\nimport Hint from \"../components/Hint\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { katakanaToRomaji } from \"../jap-char.js\";\nimport Signin from \"../components/Signin\";\nimport Register from \"../components/Register\";\nimport WordCard from \"../components/WordCard\";\nimport OutsideAlerter from \"../components/OutsideAlerter\";\nimport Footer from \"../components/Footer\";\nimport \"./App.css\";\nimport { updateChar, updateWord, resetStore } from \"../actions\";\nimport {\n  GETWORD_URL,\n  CHARSCORE_URL,\n  WORDSCORE_URL,\n  MEDIA_BASE_URL_WORD,\n} from \"../constants\";\n\nconst mapStateToProps = (state) => {\n  return {\n    currentJapChar: state.changeCardState.currentJapChar,\n    onIncorrectCard: state.changeCardState.onIncorrectCard,\n    curWrongChar: state.changeCardState.curWrongChar,\n    onHintedCard: state.changeCardState.onHintedCard,\n    wordCompleted: state.changeCardState.wordCompleted,\n    currentWord: state.changeCardState.currentWord,\n    charTimestamp: state.changeCardState.charTimestamp,\n    audioIsPlaying: state.changeGeneralState.audioIsPlaying,\n    indexCurrentCard: state.changeCardState.indexCurrentCard,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCurrentChar: (japchar, romaji) => {\n      dispatch(updateChar(japchar, romaji));\n    },\n    updateWord: (word, romajiList) => {\n      dispatch(updateWord(word, romajiList));\n    },\n    resetStore: () => {\n      dispatch(resetStore());\n    },\n  };\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: \"signin\",\n      userInfo: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        joined: \"\",\n      },\n      currentWordInfo: null,\n    };\n    this.charInputRef = React.createRef();\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (this.state.userInfo.id !== prevState.userInfo.id) {\n      this.props.resetStore();\n      this.requestNewWord();\n    }\n  };\n\n  onRouteChange = (route) => {\n    this.setState({ route: route });\n  };\n\n  parseJapaneseWord = (word) => {\n    var charsToRead = [];\n    for (const c of word) {\n      var c_romaji = katakanaToRomaji[c] || \"??\";\n      charsToRead.push({ char: c, romaji: c_romaji });\n    }\n    return charsToRead;\n  };\n\n  convertTimeToScoreDelta = (charTimestamp) => {\n    return charTimestamp.map((item) => {\n      var score_delta = 20000 / item.time;\n      if (item.type === \"hinted\") {\n        score_delta *= -1;\n      }\n      return {\n        char: item.char,\n        score_delta: score_delta,\n      };\n    });\n  };\n\n  updateCharScore = (user_uid, scoreDeltaList) => {\n    fetch(CHARSCORE_URL, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_uid: user_uid,\n        charScoreDeltaList: scoreDeltaList,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"Update Char Score:\", data);\n      })\n      .catch((error) => {\n        console.log(\"Failed to update char score\", error);\n      });\n  };\n\n  updateWordScore = (user_uid, word) => {\n    fetch(WORDSCORE_URL, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_uid: user_uid,\n        word: word,\n        unix_time: this.state.currentWord_unix_time,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"Update Word Score:\", data);\n        // once score is updated, request new word\n        this.requestNewWord();\n      })\n      .catch((error) => {\n        console.log(\"Failed to update word score\", error);\n      });\n  };\n\n  parseAudio = (audio_string) => {\n    return audio_string.slice(7, audio_string.length - 1);\n  };\n\n  requestNewWord = () => {\n    const { setCurrentChar, updateWord } = this.props;\n    var romajiList = [];\n    this.setState({ clickedJapChar: \"\" });\n\n    fetch(GETWORD_URL, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_uid: this.state.userInfo.id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((word) => {\n        var unix_time = Date.now();\n        romajiList = this.parseJapaneseWord(word.vocab_kana).map(\n          (item) => item.romaji\n        );\n        updateWord(word.vocab_kana, romajiList);\n        const curRomaji = romajiList[0];\n        const curKana = word.vocab_kana.charAt(0);\n        setCurrentChar(curKana, curRomaji);\n\n        this.setState({ currentWordInfo: word });\n        this.setState({ currentWord_unix_time: unix_time });\n        const word_audio = new Audio(\n          `${MEDIA_BASE_URL_WORD}${this.parseAudio(word.vocab_sound_local)}`\n        );\n        word_audio.addEventListener(\"loadedmetadata\", (event) => {\n          this.setState({\n            word_audio_duration: event.target.duration,\n          });\n        });\n      })\n      .catch((err) => {\n        console.log(\"Error in getting next word\", err);\n      });\n  };\n\n  loadUser = (user) => {\n    const { user_uid, name, email, joined } = user;\n    this.setState((prevState) => {\n      let userInfo = { ...prevState.userInfo };\n      userInfo.name = name;\n      userInfo.id = user_uid;\n      userInfo.email = email;\n      userInfo.joined = joined;\n      return { userInfo };\n    });\n    console.log(\"userInfo\", this.state.userInfo);\n  };\n\n  focusInputBox = () => {\n    this.charInputRef.current.formRef.current.focus();\n  };\n\n  onClickCard = (event) => {\n    const kana = event.target.innerText;\n    this.setState({ clickedJapChar: kana });\n  };\n\n  showHint = () => {\n    // once completed word, can review hint card\n    if (this.props.wordCompleted && this.state.clickedJapChar) {\n      return <Hint currentHintedChar={this.state.clickedJapChar} />;\n    }\n    if (this.props.onHintedCard) {\n      return <Hint currentHintedChar={this.props.currentJapChar} />;\n    }\n  };\n\n  displayWordInfo = () => {\n    if (this.props.wordCompleted) {\n      return (\n        <WordCard\n          wordInfo={this.state.currentWordInfo}\n          word_audio_duration={this.state.word_audio_duration}\n        />\n      );\n    }\n  };\n\n  displayMessage = () => {\n    const {\n      onIncorrectCard,\n      curWrongChar,\n      onHintedCard,\n      wordCompleted,\n      audioIsPlaying,\n    } = this.props;\n    if (audioIsPlaying) {\n      return (\n        <p>\n          <b>♬ playing audio ♬</b>\n        </p>\n      );\n    }\n    if (onIncorrectCard) {\n      return (\n        <div>\n          <p>\n            <b>{`This character is not \"${curWrongChar}\"`}</b>\n          </p>\n          <p>\n            <b>press SPACE to try again</b>\n          </p>\n        </div>\n      );\n    } else if (onHintedCard && !audioIsPlaying) {\n      return (\n        <p>\n          <b>press ENTER to continue</b>\n        </p>\n      );\n    } else if (wordCompleted && !audioIsPlaying) {\n      return (\n        <div>\n          <p>\n            <b>click on card to review mnemonic</b>\n          </p>\n          <p>\n            <b>press SPACE to continue</b>\n          </p>\n        </div>\n      );\n    } else if (!onHintedCard && !wordCompleted) {\n      return (\n        <p>\n          <b>You can press SPACE for hint</b>\n        </p>\n      );\n    } else {\n      return <p></p>;\n    }\n  };\n\n  renderRoute = (route) => {\n    switch (route) {\n      case \"signin\":\n        return (\n          <Signin onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n        );\n      case \"register\":\n        return (\n          <Register\n            onRouteChange={this.onRouteChange}\n            loadUser={this.loadUser}\n          />\n        );\n      case \"home\":\n        const { currentWord } = this.props;\n\n        return (\n          <div className=\"page-container\" style={{ position: \"relative\" }}>\n            <div className=\"content-wrap\">\n              <NavBar onRouteChange={this.onRouteChange} />\n              <div\n                className=\"tmw5 center bg-white br3 pa1 ma1 ba b--black-10 tl\"\n                style={{ color: \"#5D5D5D\" }}\n              >\n                <Paper elevation={0} />\n                <p>Welcome, {this.state.userInfo.name}! </p>\n                <ul>\n                  <li>\n                    Press SPACE to learn the character in the highlighted card\n                  </li>\n                  <li>\n                    Type the character as fast as you can if you've already\n                    known the character\n                  </li>\n                </ul>\n              </div>\n              <br />\n\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n                style={{ paddingBottom: \"100px\" }}\n              >\n                <Paper elevation={0} />\n                <OutsideAlerter focusInputBox={this.focusInputBox}>\n                  <CharInput\n                    updateCharScore={this.updateCharScore}\n                    updateWordScore={this.updateWordScore}\n                    user_uid={this.state.userInfo.id}\n                    ref={this.charInputRef}\n                  />\n                </OutsideAlerter>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                >\n                  <Grid item>\n                    <CharList\n                      charsToRead={this.parseJapaneseWord(currentWord)}\n                      onClickCard={this.onClickCard}\n                      clickedJapChar={this.state.clickedJapChar}\n                    />\n                  </Grid>\n                  <div>{this.displayMessage()}</div>\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    spacing=\"1\"\n                  >\n                    <Grid item>\n                      <Paper elevation={1} />\n                      {this.showHint()}\n                    </Grid>\n                    <br />\n\n                    <Grid item>{this.displayWordInfo()}</Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </div>\n            <Footer />\n          </div>\n        );\n      default:\n        return <div>Default</div>;\n    }\n  };\n\n  render() {\n    return <div className=\"tc\">{this.renderRoute(this.state.route)}</div>;\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { USER_INPUT } from \"./constants\";\r\n// import update from \"react-addons-update\";\r\n\r\nconst initialInputBox = {\r\n  inputBox: \"\",\r\n  keyPressed: \"\",\r\n};\r\n\r\nconst initialGeneralState = {\r\n  audioIsPlaying: false,\r\n};\r\n\r\nconst initialCardState = {\r\n  currentJapChar: \"\",\r\n  currentRomaji: \"\",\r\n  currentWord: \"\",\r\n  curWrongChar: \"\",\r\n  hintedCharList: [],\r\n  wrongCharList: {},\r\n  onIncorrectCard: false,\r\n  onHintedCard: false,\r\n  wordCompleted: false,\r\n  prevTimestamp: null,\r\n  charTimestamp: [],\r\n  allCharTimestamp: [],\r\n  romajiList: [],\r\n  indexCurrentCard: 0,\r\n  cardStateList: [],\r\n};\r\n\r\nexport const changeGeneralState = (\r\n  state = initialGeneralState,\r\n  action = {}\r\n) => {\r\n  switch (action.type) {\r\n    case \"PLAY_AUDIO\":\r\n      return { ...state, audioIsPlaying: true };\r\n    case \"PAUSE_AUDIO\":\r\n      return { ...state, audioIsPlaying: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const changeInputBox = (state = initialInputBox, action = {}) => {\r\n  switch (action.type) {\r\n    case USER_INPUT:\r\n      return { ...state, inputBox: action.payload };\r\n    case \"PRESS_KEY\":\r\n      return { ...state, keyPressed: action.payload };\r\n    case \"RESET_STORE\":\r\n      return { ...state, inputBox: \"\", keyPressed: \"\" };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const changeCardState = (state = initialCardState, action = {}) => {\r\n  switch (action.type) {\r\n    case \"CHAR_UPDATE\":\r\n      return {\r\n        ...state,\r\n        currentJapChar: action.currentJapChar,\r\n        currentRomaji: action.currentRomaji,\r\n      };\r\n    case \"ENTER_PRESS\":\r\n      state.cardStateList[state.indexCurrentCard] = \"hinted\";\r\n      return {\r\n        ...state,\r\n        hintedCharList: [...state.hintedCharList, state.currentRomaji],\r\n        onHintedCard: false,\r\n        prevTimestamp: action.time,\r\n        indexCurrentCard: state.indexCurrentCard + 1,\r\n      };\r\n    case \"WRONG_INPUT\":\r\n      state.wrongCharList[action.currentChar] = action.userInput;\r\n      state.cardStateList[state.indexCurrentCard] = \"incorrect\";\r\n      return {\r\n        ...state,\r\n        onIncorrectCard: true,\r\n        curWrongChar: action.userInput,\r\n      };\r\n    case \"SPACE_PRESS_TO_CONTINUE\":\r\n      state.cardStateList[state.indexCurrentCard] = \"\";\r\n      return { ...state, onIncorrectCard: false };\r\n    case \"SPACE_PRESS_FOR_HINT\":\r\n      return { ...state, onHintedCard: true };\r\n    case \"SPACE_PRESS_TO_GO_NEXT\":\r\n      return {\r\n        ...state,\r\n        wordCompleted: false,\r\n        charTimestamp: [],\r\n        allCharTimestamp: [...state.allCharTimestamp, state.charTimestamp],\r\n        // prevTimestamp: action.time,\r\n        hintedCharList: [],\r\n      };\r\n    case \"COMPLETE_WORD\":\r\n      return { ...state, wordCompleted: true };\r\n    case \"UPDATE_WORD\":\r\n      return {\r\n        ...state,\r\n        currentWord: action.payload,\r\n        romajiList: action.romajiList,\r\n        cardStateList: action.cardStateList,\r\n        indexCurrentCard: 0,\r\n      };\r\n    case \"COMPLETE_CHAR\":\r\n      const newTimestamp = {\r\n        char: state.currentJapChar,\r\n        time: action.time - state.prevTimestamp,\r\n        type: action.completionType,\r\n      };\r\n      console.log(\"TIME STAMP\", newTimestamp);\r\n      return {\r\n        ...state,\r\n        charTimestamp: [...state.charTimestamp, newTimestamp],\r\n        prevTimestamp: action.time,\r\n      };\r\n    case \"SET_NEW_WORD_TIME\":\r\n      return { ...state, prevTimestamp: action.time };\r\n    case \"INPUT_CORRECT_CHAR\":\r\n      // state.cardStateList[state.indexCurrentCard] = \"correct\";\r\n      return {\r\n        ...state,\r\n        indexCurrentCard: state.indexCurrentCard + 1,\r\n        cardStateList: state.cardStateList.map((item, idx) =>\r\n          idx === state.indexCurrentCard ? \"correct\" : item\r\n        ),\r\n      };\r\n    case \"INPUT_INCORRECT_CHAR\":\r\n      // state.cardStateList[state.indexCurrentCard] = \"incorrect\";\r\n      return {\r\n        ...state,\r\n        cardStateList: state.cardStateList.map((item, idx) =>\r\n          idx === state.indexCurrentCard ? \"incorrect\" : item\r\n        ),\r\n      };\r\n    case \"RESET_STORE\":\r\n      return {\r\n        ...state,\r\n        allCharTimestamp: [],\r\n        charTimestamp: [],\r\n        curWrongChar: null,\r\n        onHintedCard: false,\r\n        onIncorrectCard: false,\r\n        wordCompleted: false,\r\n        wrongCharList: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\nimport App from \"./containers/App.js\";\nimport {\n  changeGeneralState,\n  changeInputBox,\n  changeCardState,\n} from \"./reducers\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport \"typeface-roboto\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#1CB0F6\",\n    },\n    secondary: {\n      main: \"#43A6DF\",\n    },\n  },\n});\n\nconst rootReducer = combineReducers({\n  changeGeneralState,\n  changeInputBox,\n  changeCardState,\n});\nconst logger = createLogger();\n\nconst store = createStore(rootReducer, applyMiddleware(logger));\n// const store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}