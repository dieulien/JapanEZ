{"version":3,"sources":["serviceWorker.js","components/Char.js","constants.js","actions.js","containers/CharList.js","inputChecker.js","jap-char.js","containers/CharInput.js","components/NavBar.js","components/Music.js","components/Hint.js","components/Signin.js","components/Register.js","components/WordCard.js","components/OutsideAlerter.js","components/Footer.js","components/WelcomeBar.js","components/SmallChar.js","components/SmallCharList.js","containers/App.js","reducers.js","index.js"],"names":["Boolean","window","location","hostname","match","Char","className","this","props","cardState","wordCompleted","onClick","onClickCard","char","React","Component","REGISTER_URL","SIGNIN_URL","MEDIA_BASE_URL_WORD","updateChar","japchar","romaji","type","currentJapChar","currentRomaji","updateWord","word","romajiList","cardStateList","map","item","payload","CharList","componentDidMount","setNewWordTime","Date","now","componentDidUpdate","prevProps","JSON","stringify","charsToRead","setCardState","idx","indexCurrentCard","onHintedCard","clickedJapChar","concat","state","dispatchTime","charsArrayDisplay","Grid","key","container","direction","justify","alignItems","spacing","connect","changeCardState","dispatch","time","TrieNode","parent","children","end","Trie","root","prototype","getWord","output","node","unshift","join","insert","i","length","contains","find","prefix","findAllWords","arr","child","SpellCheckerBuffer","charAndRomaji","checkFunction","wordNotInDictAlert","dict","buffer","charTrie","Object","values","forEach","element","pendingChars","Array","isArray","katakanaToRomaji","ア","イ","ウ","エ","オ","カ","キ","ク","ケ","コ","サ","シ","ス","セ","ソ","タ","チ","ツ","テ","ト","ナ","ニ","ヌ","ネ","ノ","ハ","ヒ","フ","ヘ","ホ","マ","ミ","ム","メ","モ","ヤ","ユ","ヨ","ラ","リ","ル","レ","ロ","ワ","ヲ","ン","clearBuffer","katakanaHint","imageLink","shortHint","CharInput","user_uid","convertTimeToScoreDelta","charTimestamp","score_delta","result_type","result_time","onCorrectChar","onWrongInput","onWordCompletion","currentWord","setCurrentChar","onCompleteChar","newRomaji","onKeyDown","event","onIncorrectCard","curWrongChar","onInputBoxChange","onSpacePress","onEnterPress","updateCharScore","updateWordScore","audioIsPlaying","resetRomajiNotInDictAlert","preventDefault","lastCardState","which","target","value","slice","inputChecker","checkInput","curRomaji","String","fromCharCode","toLowerCase","onKeyPress","formRef","createRef","alertRomajiNotInDict","Input","placeholder","defaultValue","inputBox","inputProps","onChange","spellCheck","autoFocus","inputRef","onPaste","changeGeneralState","changeInputBox","pressKey","onIncorrectChar","context","pressSpace","userChar","currentChar","userInput","typeWrongAnswer","completionType","pressEnter","forwardRef","useStyles","makeStyles","theme","flexGrow","title","NavBar","onRouteChange","currentTab","classes","useState","open","setOpen","handleClose","AppBar","position","Toolbar","Typography","variant","color","align","Button","startIcon","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Music","play","audio","Audio","audioLink","stopAudioHandler","setState","noStoreUpdateWhenEnded","onAudioPause","simpleStopAudioHandler","newAudio","addEventListener","setTimeout","onAudioPlay","delay","togglePlay","removeEventListener","pause","Hint","currentHintedChar","sentenceFragments","replace","split","Card","onClickHandler","Divider","src","alt","CardContent","style","paddingTop","paddingBottom","component","Signin","onEmailInput","signInEmail","emailErrorMsg","onPasswordInput","signInPassword","passwordErrorMsg","sendSigninInfoToBackend","fetch","method","headers","body","email","password","then","response","json","data","keys","loadUser","console","log","catch","error","onSignIn","Paper","paper2","elevation","Container","maxWidth","CssBaseline","paper","form","noValidate","TextField","helperText","margin","fullWidth","label","name","autoComplete","FormControlLabel","control","Checkbox","submit","Link","withStyles","fontFamily","backfround","marginTop","display","flexDirection","marginBottom","padding","breakpoints","up","width","height","marginLeft","marginRight","Register","onNameInput","nameErrorMsg","sendFormDataToBackEnd","onFormSubmit","validateEmail","nameError","emailError","passwordError","test","minWidth","fontSize","pos","OutlinedCard","wordInfo","word_audio_duration","document","createElement","innerHTML","sentenceSegments","sentence_expression","parseAudio","audio_string","gutterBottom","vocab_meaning","vocab_pos","vocab_sound_local","sentence_sound_local","sentence_meaning","OutsideAlerter","handleClickOutside","componentWillUnmount","setWrapperRef","wrapperRef","focusInputBox","ref","Footer","href","WelcomeBar","userName","typography","cardBG","background","correctPercent","hintedPercent","SmallChar","correctNum","hintedNum","anchorEl","setAnchorEl","undefined","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","SmallCharList","requestGetCharScore","res","charResultList","err","computeCorrectPercentage","resultList","total_correct","result","Math","round","computeCorrectNum","reduce","acc","val","CircularProgress","kana","correctPercentage","hintedPercentage","LogRocket","init","App","prevState","userInfo","resetStore","requestNewWord","route","parseJapaneseWord","c","c_romaji","push","scoreDeltaList","charScoreDeltaList","unix_time","currentWord_unix_time","vocab_kana","curKana","charAt","currentWordInfo","duration","user","joined","identify","charInputRef","current","focus","innerText","showHint","displayWordInfo","getKeyByValue","object","displayMessage","romajiNotInDict","renderRoute","initialInputBox","keyPressed","initialGeneralState","initialCardState","hintedCharList","wrongCharList","prevTimestamp","allCharTimestamp","createMuiTheme","palette","primary","main","secondary","rootReducer","combineReducers","action","newTimestamp","logger","createLogger","store","createStore","applyMiddleware","reduxMiddleware","ReactDOM","render","ThemeProvider","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"uYAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mDCCSC,G,mLAXX,IAAMC,EAAS,gBAAYC,KAAKC,MAAMC,UAAvB,YACbF,KAAKC,MAAME,cAAgB,cAAgB,IAE7C,OACE,yBAAKJ,UAAWA,EAAWK,QAASJ,KAAKC,MAAMI,aAC7C,wBAAIN,UAAU,QAAQC,KAAKC,MAAMK,W,GAPtBC,IAAMC,Y,SCFrBC,EAAe,kCACfC,EAAa,gCASbC,EACF,iEAYEF,EAAe,uDACfC,EAAa,qDC1BV,IA+BME,EAAa,SAACC,EAASC,GAClC,MAAO,CACLC,KAAM,cACNC,eAAgBH,EAChBI,cAAeH,IA2BNI,EAAa,SAACC,EAAMC,GAC/B,IAAMC,EAAgBD,EAAWE,KAAI,SAACC,GAAD,MAAU,MAC/C,MAAO,CACLR,KAAM,cACNS,QAASL,EACTC,WAAYA,EACZC,cAAeA,IC5CbI,E,kDACJ,WAAYxB,GAAQ,IAAD,8BACjB,cAAMA,IAMRyB,kBAAoB,WAClB,EAAKzB,MAAM0B,eAAeC,KAAKC,QARd,EAWnBC,mBAAqB,SAACC,GAElBC,KAAKC,UAAU,EAAKhC,MAAMiC,eAC1BF,KAAKC,UAAUF,EAAUG,cAEzB,EAAKjC,MAAM0B,eAAeC,KAAKC,QAhBhB,EAoBnBM,aAAe,SAACC,EAAK9B,GAAU,IAAD,EAMxB,EAAKL,MAJPoC,EAF0B,EAE1BA,iBACAhB,EAH0B,EAG1BA,cACAiB,EAJ0B,EAI1BA,aACAnC,EAL0B,EAK1BA,cAEEJ,EAAY,GAEZI,GAA+C,KAA9B,EAAKF,MAAMsC,iBAE5BxC,EADEO,IAAS,EAAKL,MAAMsC,eACVxC,EAAUyC,OAAV,aAEAzC,EAAUyC,OAAV,YAIdzC,EADEqC,IAAQC,EACEtC,EAAUyC,OAAV,iBAEAzC,EAAUyC,OACpBF,EAAY,SAAcnC,EAAgB,GAAH,UAG3C,IAAID,EAAYmB,EAAce,GAE9B,OADArC,EAAYA,EAAUyC,OAAV,WAAqBtC,EAArB,OA1CZ,EAAKuC,MAAQ,CACXC,aAAc,GAHC,E,qDAgDT,IAAD,OACDC,EAAoB3C,KAAKC,MAAMiC,YAAYZ,KAAI,SAACC,EAAMa,GAC1D,OACE,kBAACQ,EAAA,EAAD,CAAMrB,MAAI,EAACsB,IAAKT,GACd,kBAAC,EAAD,CACE9B,KAAMiB,EAAKjB,KACXuC,IAAKT,EACLlC,UAAW,EAAKiC,aAAaC,EAAKb,EAAKjB,MACvCD,YAAa,EAAKJ,MAAMI,YACxBF,cAAe,EAAKF,MAAME,oBAMlC,OACE,kBAACyC,EAAA,EAAD,CACEE,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXC,QAAQ,KAEPP,O,GAxEcpC,IAAMC,WA8Ed2C,eAjGS,SAACV,GACvB,MAAO,CAGLJ,iBAAkBI,EAAMW,gBAAgBf,iBACxChB,cAAeoB,EAAMW,gBAAgB/B,cACrCiB,aAAcG,EAAMW,gBAAgBd,aACpCnC,cAAesC,EAAMW,gBAAgBjD,kBAId,SAACkD,GAC1B,MAAO,CACL1B,eAAgB,SAAC2B,GACfD,ED6DwB,SAACC,GAC7B,MAAO,CACLvC,KAAM,oBACNuC,KAAMA,GChEK3B,CAAe2B,QAmFfH,CAA6C1B,G,SChD5D,SAAS8B,EAASV,GAEhB7C,KAAK6C,IAAMA,EAGX7C,KAAKwD,OAAS,KAGdxD,KAAKyD,SAAW,GAGhBzD,KAAK0D,KAAM,EAoBb,SAASC,IACP3D,KAAK4D,KAAO,IAAIL,EAAS,MAhB3BA,EAASM,UAAUC,QAAU,WAI3B,IAHA,IAAIC,EAAS,GACTC,EAAOhE,KAEK,OAATgE,GACLD,EAAOE,QAAQD,EAAKnB,KACpBmB,EAAOA,EAAKR,OAGd,OAAOO,EAAOG,KAAK,KAYrBP,EAAKE,UAAUM,OAAS,SAAUhD,GAIhC,IAHA,IAAI6C,EAAOhE,KAAK4D,KAGPQ,EAAI,EAAGA,EAAIjD,EAAKkD,OAAQD,IAE1BJ,EAAKP,SAAStC,EAAKiD,MAEtBJ,EAAKP,SAAStC,EAAKiD,IAAM,IAAIb,EAASpC,EAAKiD,IAG3CJ,EAAKP,SAAStC,EAAKiD,IAAIZ,OAASQ,GAIlCA,EAAOA,EAAKP,SAAStC,EAAKiD,IAGtBA,IAAMjD,EAAKkD,OAAS,IAEtBL,EAAKN,KAAM,IAOjBC,EAAKE,UAAUS,SAAW,SAAUnD,GAIlC,IAHA,IAAI6C,EAAOhE,KAAK4D,KAGPQ,EAAI,EAAGA,EAAIjD,EAAKkD,OAAQD,IAAK,CAEpC,IAAIJ,EAAKP,SAAStC,EAAKiD,IAKrB,OAAO,EAHPJ,EAAOA,EAAKP,SAAStC,EAAKiD,IAQ9B,OAAOJ,EAAKN,KAKdC,EAAKE,UAAUU,KAAO,SAAUC,GAK9B,IAJA,IAAIR,EAAOhE,KAAK4D,KACZG,EAAS,GAGJK,EAAI,EAAGA,EAAII,EAAOH,OAAQD,IAAK,CAEtC,IAAIJ,EAAKP,SAASe,EAAOJ,IAIvB,OAAOL,EAHPC,EAAOA,EAAKP,SAASe,EAAOJ,IAUhC,OAIF,SAASK,EAAaT,EAAMU,GAEtBV,EAAKN,KACPgB,EAAIT,QAAQD,EAAKF,WAInB,IAAK,IAAIa,KAASX,EAAKP,SACrBgB,EAAaT,EAAKP,SAASkB,GAAQD,GAdrCD,CAAaT,EAAMD,GAEZA,G,IA2EMa,E,WAzCb,WAAYC,EAAeC,EAAeC,GAAqB,IAAD,2BAC5D/E,KAAKgF,KAAOH,EACZ7E,KAAK8E,cAAgBA,EACrB9E,KAAKiF,OAAS,GACdjF,KAAKkF,SAAW,IAAIvB,EACpB3D,KAAK+E,mBAAqBA,EAC1BI,OAAOC,OAAOpF,KAAKgF,MAAMK,SAAQ,SAACC,GAChC,EAAKJ,SAASf,OAAOmB,M,uDAIdhF,GACT,GAAa,gBAATA,EAKJ,GADAN,KAAKiF,QAAU3E,EACXN,KAAKkF,SAASZ,SAAStE,KAAKiF,QAC9BjF,KAAK8E,cAAc9E,KAAKiF,QACxBjF,KAAKiF,OAAS,OACT,CACL,IAAIM,EAAevF,KAAKkF,SAASX,KAAKvE,KAAKiF,QACtCO,MAAMC,QAAQF,IAAkBA,EAAalB,SAChDrE,KAAK+E,qBACL/E,KAAK8E,cAAc9E,KAAKiF,QACxBjF,KAAKiF,OAAS,SAZhBjF,KAAKiF,OAAS,O,KC9MdS,EAAmB,CACva,eAGTC,EAAe,CACnB/C,SAAG,CACD7E,OAAQ,IACR6H,UACE,mEACFC,UAAW,wBAEbhD,SAAG,CACD9E,OAAQ,IACR6H,UACE,mEACFC,UAAW,qCAEb/C,SAAG,CACD/E,OAAQ,IACR6H,UACE,mEACFC,UAAW,gCAEb9C,SAAG,CACD6C,UACE,mEACFC,UACE,+EAEJ7C,SAAG,CACD4C,UACE,mEACFC,UACE,oFAEJ5C,SAAG,CACD2C,UACE,mEACFC,UAAW,0CAEb3C,SAAG,CACD0C,UACE,mEACFC,UAAW,cAEb1C,SAAG,CACDyC,UACE,mEACFC,UAAW,kCAEbzC,SAAG,CACDwC,UACE,mEACFC,UAAW,0CAEbxC,SAAG,CACDuC,UACE,mEACFC,UAAW,sCAEbvC,SAAG,CACDsC,UACE,mEACFC,UAAW,sDAEbtC,SAAG,CACDqC,UACE,mEACFC,UAAW,0CAEbrC,SAAG,CACDoC,UACE,mEACFC,UAAW,0DAEbpC,SAAG,CACDmC,UACE,mEACFC,UAAW,qCAEbnC,SAAG,CACDkC,UACE,mEACFC,UAAW,iEAEblC,SAAG,CACDiC,UACE,mEACFC,UAAW,kDAEbjC,SAAG,CACDgC,UACE,mEACFC,UAAW,mDAEbhC,SAAG,CACD+B,UACE,mEACFC,UAAW,4BAEb/B,SAAG,CACD8B,UACE,mEACFC,UAAW,2BAEb9B,SAAG,CACD6B,UACE,mEACFC,UAAW,uBAEb7B,SAAG,CACD4B,UACE,mEACFC,UAAW,6BAEb5B,SAAG,CACD2B,UACE,mEACFC,UAAW,gDAEb3B,SAAG,CACD0B,UACE,mEACFC,UACE,2FAEJ1B,SAAG,CACDyB,UACE,mEACFC,UAAW,iDAEbzB,SAAG,CACDwB,UACE,mEACFC,UAAW,6BAEbxB,SAAG,CACDuB,UACE,mEACFC,UAAW,2BAEbvB,SAAG,CACDsB,UACE,mEACFC,UAAW,iEAEbtB,SAAG,CACDqB,UACE,mEACFC,UAAW,8BAEbrB,SAAG,CACDoB,UACE,mEACFC,UAAW,uCAEbpB,SAAG,CACDmB,UACE,mEACFC,UAAW,uBAEbnB,SAAG,CACDkB,UACE,mEACFC,UAAW,kEAEblB,SAAG,CACDiB,UACE,mEACFC,UAAW,0DAEbjB,SAAG,CACDgB,UACE,mEACFC,UAAW,gEAEbhB,SAAG,CACDe,UACE,mEACFC,UAAW,yCAEbf,SAAG,CACDc,UACE,mEACFC,UAAW,uCAEbd,SAAG,CACDa,UACE,mEACFC,UAAW,4CAEbb,SAAG,CACDY,UACE,mEACFC,UAAW,mCAEbZ,SAAG,CACDW,UACE,mEACFC,UAAW,8BAEbX,SAAG,CACDU,UACE,mEACFC,UAAW,uDAEbV,SAAG,CACDS,UACE,mEACFC,UAAW,qCAEbT,SAAG,CACDQ,UACE,mEACFC,UACE,qEAEJR,SAAG,CACDO,UACE,mEACFC,UAAW,+DAEbP,SAAG,CACDM,UACE,mEACFC,UACE,gGAEJN,SAAG,CACDK,UACE,mEACFC,UACE,4FAEJL,SAAG,CACDI,UACE,mEACFC,UAAW,8DAEbJ,SAAG,CACDG,UACE,mEACFC,UAAW,6CC9MTC,E,kDACJ,WAAY5I,GAAQ,IAAD,8BACjB,cAAMA,IAsBR6B,mBAAqB,SAACC,GAChB,EAAK9B,MAAM6I,SAAa/G,EAAU+G,UAxBrB,EA4BnBC,wBAA0B,SAACC,GACzB,OAAOA,EAAc1H,KAAI,SAACC,GACxB,IAAI0H,EAAc,IAAQ1H,EAAK+B,KAI/B,MAHkB,WAAd/B,EAAKR,OACPkI,IAAgB,GAEX,CACL3I,KAAMiB,EAAKjB,KACX2I,YAAaA,EACbC,YAAa3H,EAAKR,KAClBoI,YAAa5H,EAAK+B,UAtCL,EA2CnBwB,cAAgB,SAACxE,GAAU,IAAD,EAUpB,EAAKL,MARPmB,EAFsB,EAEtBA,WACAiB,EAHsB,EAGtBA,iBACA+G,EAJsB,EAItBA,cACAC,EALsB,EAKtBA,aACAC,EANsB,EAMtBA,iBACAC,EAPsB,EAOtBA,YACAC,EARsB,EAQtBA,eACAC,EATsB,EAStBA,eAEF,GAAInJ,IAASc,EAAWiB,GAAmB,CACzC+G,IACAK,EAAe7H,KAAKC,MAAO,WAC3B,IAAM6H,EAAYtI,EAAWiB,EAAmB,GAEhDmH,EADgBD,EAAYlH,EAAmB,GACvBqH,GACpBrH,IAAqBjB,EAAWiD,OAAS,GAC3CiF,SAIFD,EAAa/I,EAAMc,EAAWiB,KAjEf,EAqEnBsH,UAAY,SAACC,GAAW,IAAD,EAwBjB,EAAK3J,MAtBP4J,EAFmB,EAEnBA,gBACAC,EAHmB,EAGnBA,aACAC,EAJmB,EAInBA,iBACAC,EALmB,EAKnBA,aACAP,EANmB,EAMnBA,eACAtJ,EAPmB,EAOnBA,cACAmC,EARmB,EAQnBA,aACArB,EATmB,EASnBA,cACAgJ,EAVmB,EAUnBA,aACAV,EAXmB,EAWnBA,YACAnI,EAZmB,EAYnBA,WACAiB,EAbmB,EAanBA,iBACAmH,EAdmB,EAcnBA,eACAR,EAfmB,EAenBA,cACA9H,EAhBmB,EAgBnBA,WACAgJ,EAjBmB,EAiBnBA,gBACAC,EAlBmB,EAkBnBA,gBACAb,EAnBmB,EAmBnBA,iBACAc,EApBmB,EAoBnBA,eACAtB,EArBmB,EAqBnBA,SACAzH,EAtBmB,EAsBnBA,cACAgJ,EAvBmB,EAuBnBA,0BAIF,GAAID,EACFR,EAAMU,qBADR,CAKInK,GACFyJ,EAAMU,iBAER,IAAIC,EAAgBlJ,EAAcA,EAAcgD,OAAS,GAUzD,GAPEhC,IAAqBjB,EAAWiD,OAAS,GACtB,YAAlBkG,GAAiD,WAAlBA,GAEhCjB,MAKEM,EAAMY,OAAS,IAAMZ,EAAMY,OAAS,IAAuB,MAAhBZ,EAAMY,QAClDX,GACA1J,GACAmC,EAQI,CAIL,GAHAsH,EAAMU,iBAGc,KAAhBV,EAAMY,MACR,GAAIX,EAEFD,EAAMa,OAAOC,MAAQd,EAAMa,OAAOC,MAAMC,MACtC,GACCb,EAAazF,QAEhB0F,EAAiBH,GACjBI,EAAa,wBACbK,SACK,GAAKR,GAAoBvH,GAAiBnC,GAa1C,GAAIA,EAAe,CAExBe,EAAW,GAAI,CAAC,KAEhBgJ,EAAgBpB,EADO,EAAKC,wBAAwBC,IAEpDmB,EAAgBrB,EAAUS,GAE1BS,EAAa,2BAEbJ,EAAMa,OAAOC,MAAQ,GACrBX,EAAiBH,GACjB,IAAMF,EAAYtI,EAAW,GAE7BoI,EADgBD,EAAY,GACJG,SAxBxBM,EAAa,gBACbP,EAAe7H,KAAKC,MAAO,UAG3B+H,EAAMa,OAAOC,MAAQ,EAAKE,aAAa3F,OAAOZ,OAC1CuF,EAAMa,OAAOC,MAAMC,MAAM,GAAI,EAAKC,aAAa3F,OAAOZ,QACtDuF,EAAMa,OAAOC,MACjBX,EAAiBH,GAGjB,EAAKgB,aAAaC,WAAW,eAmBjC,GAAoB,KAAhBjB,EAAMY,OACJlI,EAAc,CACZD,IAAqBjB,EAAWiD,OAAS,GAC3CiF,IAGFM,EAAMa,OAAOC,MAAQd,EAAMa,OAAOC,MAAMlI,OAAOvB,GAC/C8I,EAAiBH,GACjBK,EAAarI,KAAKC,OAElB,IAAMiJ,EAAY1J,EAAWiB,EAAmB,GAEhDmH,EADgBD,EAAYlH,EAAmB,GACvByI,QAhE5B,CACA,IAAIjI,EACc,MAAhB+G,EAAMY,MACF,IACAO,OAAOC,aAAapB,EAAMY,OAAOS,cACvC,EAAKhL,MAAMiL,WAAWrI,GACtB,EAAK+H,aAAaC,WAAWhI,MA3H/B,EAAKsI,QAAU5K,IAAM6K,YACrB,EAAKR,aAAe,IAAIhG,EACtBc,EACA,EAAKZ,cACL,EAAK7E,MAAMoL,sBANI,E,gEAUE,IAAD,EAMdrL,KAAKC,MAJPuJ,EAFgB,EAEhBA,eACApI,EAHgB,EAGhBA,WACAiB,EAJgB,EAIhBA,iBACAkH,EALgB,EAKhBA,YAGIuB,EAAY1J,EAAWiB,GAE7BmH,EADgBD,EAAYlH,GACJyI,K,+BA0KxB,OACE,8BACE,kBAACQ,EAAA,EAAD,CACEC,YAAY,2BACZC,aAAcxL,KAAKC,MAAMwL,SACzBC,WAAY,CAAE,aAAc,eAC5BC,SAAU3L,KAAKC,MAAM8J,iBACrBJ,UAAW3J,KAAK2J,UAChBiC,YAAY,EACZC,WAAS,EACTC,SAAU9L,KAAKmL,QACfY,QAAS,SAACnC,GACRA,EAAMU,yB,GA3MM/J,IAAMC,WAmNf2C,eA/QU,SAACV,GACxB,MAAO,CACLJ,iBAAkBI,EAAMW,gBAAgBf,iBACxCjB,WAAYqB,EAAMW,gBAAgBhC,WAClCC,cAAeoB,EAAMW,gBAAgB/B,cACrCyI,aAAcrH,EAAMW,gBAAgB0G,aACpCD,gBAAiBpH,EAAMW,gBAAgByG,gBACvC1J,cAAesC,EAAMW,gBAAgBjD,cACrCmC,aAAcG,EAAMW,gBAAgBd,aACpCrB,cAAewB,EAAMW,gBAAgBnC,cACrCsI,YAAa9G,EAAMW,gBAAgBmG,YACnCP,cAAevG,EAAMW,gBAAgB4F,cACrCoB,eAAgB3H,EAAMuJ,mBAAmB5B,eACzCqB,SAAUhJ,EAAMwJ,eAAeR,aAGR,SAACpI,GAC1B,MAAO,CACL0G,iBAAkB,SAACH,GACjBvG,EJtCG,CACLtC,KDJsB,aCKtBS,QIoCsBoI,EAAMa,OAAOC,SAEnCQ,WAAY,SAACrI,GACXQ,EJyDkB,SAACR,GACvB,MAAO,CACL9B,KAAM,YACNS,QAASqB,GI5DEqJ,CAASrJ,KAEpBuG,cAAe,WACb/F,EJ8DG,CACLtC,KAAM,wBI7DNoL,gBAAiB,WACf9I,EJiEG,CACLtC,KAAM,0BIhENiJ,aAAc,SAACoC,GACb/I,EJ5CoB,SAAC+I,GACzB,OAAQA,GACN,IAAK,eACH,MAAO,CACLrL,KAAM,uBACNuC,KAAM1B,KAAKC,OAEf,IAAK,uBACH,MAAO,CACLd,KAAM,0BACNuC,KAAM1B,KAAKC,OAEf,IAAK,0BACH,MAAO,CACLd,KAAM,yBACNuC,KAAM1B,KAAKC,OAEf,QACE,MAAO,CACLd,KAAM,gBIyBCsL,CAAWD,KAEtB/C,aAAc,SAACiD,EAAUC,GACvBlJ,EJRyB,SAACiJ,EAAUC,GACxC,MAAO,CACLxL,KAAM,cACNyL,UAAWF,EACXC,YAAaA,EACbjJ,KAAM1B,KAAKC,OIGA4K,CAAgBH,EAAUC,KAErC9C,eAAgB,SAACnG,EAAMvC,GACrBsC,EJgBG,CACLtC,KAAM,gBACNuC,KIlBwBA,EJmBxBoJ,eInB8B3L,KAE9BkJ,aAAc,SAAC3G,GACbD,EJrBoB,SAACC,GACzB,MAAO,CACLvC,KAAM,cACNuC,KAAMA,GIkBKqJ,CAAWrJ,KAEtBkG,eAAgB,SAAC3I,EAASC,GACxBuC,EAASzC,EAAWC,EAASC,KAE/BI,WAAY,SAACC,EAAMC,GACjBiC,EAASnC,EAAWC,EAAMC,KAE5BkI,iBAAkB,WAChBjG,EJbG,CACLtC,KAAM,gBACNuC,KAAM1B,KAAKC,SIaXwJ,qBAAsB,WACpBhI,EJqDG,CACLtC,KAAM,uBIpDNsJ,0BAA2B,WACzBhH,EJwDG,CACLtC,KAAM,gCI+JmD,KAAM,CACjE6L,YAAY,GADCzJ,CAEZ0F,G,8KClRGgE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCnJ,KAAM,CACJoJ,SAAU,GAEZC,MAAO,CACLD,SAAU,OA4FCE,EAxFA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WACzBC,EAAUR,IADgC,EAGxBtM,IAAM+M,UAAS,GAHS,mBAGzCC,EAHyC,KAGnCC,EAHmC,KAS1CC,EAAc,WAClBD,GAAQ,IAGV,OACE,yBAAKzN,UAAWsN,EAAQzJ,MACtB,kBAAC8J,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,QAAQ,KACRC,MAAM,YACNhO,UAAWsN,EAAQJ,MACnBe,MAAM,QAEN,yBAAKjO,UAAU,gBAAf,+BAEF,kBAACkO,EAAA,EAAD,CACEH,QAAQ,OACRC,MAAM,YACN3N,QAvBc,WACtBoN,GAAQ,IAuBAU,UAAW,kBAAC,IAAD,OAEX,yBAAKnO,UAAU,sBAAf,SAEF,kBAACoO,EAAA,EAAD,CACEZ,KAAMA,EACNa,QAASX,EACTY,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB,eACtC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBF,GAAG,4BACpB,gMAKA,4EACA,sFACA,kFAGJ,kBAACG,EAAA,EAAD,KACE,kBAACV,EAAA,EAAD,CAAQ7N,QAASqN,EAAaM,MAAM,UAAUlC,WAAS,GAAvD,WAKJ,kBAACoC,EAAA,EAAD,CACEH,QAAwB,SAAfV,EAAwB,WAAa,OAC9CW,MAAM,YACN3N,QAAS,kBAAM+M,EAAc,SAC7Be,UAAW,kBAAC,IAAD,OAEX,yBAAKnO,UAAU,sBAAf,SAEF,kBAACkO,EAAA,EAAD,CACEH,QAAwB,aAAfV,EAA4B,WAAa,OAClDW,MAAM,YACN3N,QAAS,kBAAM+M,EAAc,aAC7Be,UAAW,kBAAC,IAAD,OAEX,yBAAKnO,UAAU,sBAAf,aAEF,kBAACkO,EAAA,EAAD,CACEF,MAAM,YACND,QAAwB,YAAfV,EAA2B,WAAa,OACjDhN,QAAS,kBAAM+M,EAAc,WAC7BpN,UAAU,aACVmO,UAAW,kBAAC,IAAD,OAEX,yBAAKnO,UAAU,sBAAf,gB,oBCvFN6O,I,mNACJnM,MAAQ,CACNoM,MAAM,EACNC,MAAO,IAAIC,MAAM,EAAK9O,MAAM+O,Y,EAG9BC,iBAAmB,WACjB,EAAKC,SAAS,CAAEL,MAAM,IACjB,EAAK5O,MAAMkP,wBACd,EAAKlP,MAAMmP,gB,EAIfC,uBAAyB,WACvB,EAAKH,SAAS,CAAEL,MAAM,IACtB,EAAK5O,MAAMmP,gB,EAWbtN,mBAAqB,SAACC,GACpB,GAAIA,EAAUiN,YAAc,EAAK/O,MAAM+O,UAAW,CAChD,IAAIM,EAAW,IAAIP,MAAM,EAAK9O,MAAM+O,WACpCM,EAASC,iBAAiB,QAAS,EAAKN,kBACxC,EAAKC,SAAS,CAAEJ,MAAOQ,IACvBE,YAAW,WACT,EAAK/M,MAAMqM,MAAMD,OACjB,EAAK5O,MAAMwP,gBACV,EAAKxP,MAAMyP,S,EAUlBC,WAAa,WACX,EAAKT,SAAS,CAAEL,MAAO,EAAKpM,MAAMoM,OAAQ,WACpC,EAAKpM,MAAMoM,MACb,EAAKpM,MAAMqM,MAAMD,OACjB,EAAK5O,MAAMwP,cAGX,EAAKhN,MAAMqM,MAAMc,oBAAoB,QAAS,EAAKX,kBACnD,EAAKxM,MAAMqM,MAAMc,oBACf,QACA,EAAKP,wBAEP,EAAK5M,MAAMqM,MAAMS,iBAAiB,QAAS,EAAKF,0BAEhD,EAAK5M,MAAMqM,MAAMe,QACjB,EAAK5P,MAAMmP,oB,kEAzCI,IAAD,OAClBpP,KAAKyC,MAAMqM,MAAMS,iBAAiB,QAASvP,KAAKiP,kBAChDO,YAAW,WACT,EAAK/M,MAAMqM,MAAMD,OACjB,EAAK5O,MAAMwP,gBACVzP,KAAKC,MAAMyP,S,6CAgBd1P,KAAKyC,MAAMqM,MAAMc,oBAAoB,QAAS5P,KAAKiP,kBACnDjP,KAAKyC,MAAMqM,MAAMc,oBAAoB,QAAS5P,KAAKqP,wBACnDrP,KAAKC,MAAMmP,iB,+BAwBX,OACE,6BACE,kBAACnB,EAAA,EAAD,CACEH,QAAQ,YACRC,MAAM,UACN3N,QAASJ,KAAK2P,WACd5P,UAAU,gBAEV,yBAAKA,UAAU,eACZC,KAAKyC,MAAMoM,KAAO,cAAgB,oB,GA1E3BtO,IAAMC,YAkFX2C,gBAnGS,SAACV,GACvB,MAAO,CACL2H,eAAgB3H,EAAMuJ,mBAAmB5B,mBAIlB,SAAC/G,GAC1B,MAAO,CACLoM,YAAa,WACXpM,EN0EG,CACLtC,KAAM,gBMzENqO,aAAc,WACZ/L,EN6EG,CACLtC,KAAM,oBMSKoC,CAA6CyL,I,UCjD7CkB,I,8KAvCX,IAAMhP,EAAS4E,EAAiB1F,KAAKC,MAAM8P,mBACrCC,EACJtH,EAAa1I,KAAKC,MAAM8P,mBAAmBnH,UAR3BqH,QAAQ,UAAW,KACvBC,MAAM,KAUdlB,ERLR,iFQIqC,OAAXlO,EAAkB,IAAMA,GACU,OAE1D,OACE,kBAACqP,GAAA,EAAD,CAAMpQ,UAAS,YAAeK,QAASJ,KAAKoQ,gBAC1C,yBAAKrQ,UAAU,qBACb,wBAAIA,UAAU,oBAAoBe,GAClC,kBAACuP,GAAA,EAAD,MACA,6BACE,yBACEC,IAAG,UAAK5H,EAAa1I,KAAKC,MAAM8P,mBAAmBpH,WACnD5I,UAAS,kBACTwQ,IAAI,eAGR,kBAACC,GAAA,EAAD,CAAaC,MAAO,CAAEC,WAAY,EAAGC,cAAe,IAClD,kBAAC9C,EAAA,EAAD,CAAYC,QAAQ,QAAQ8C,UAAU,KACpC,yBAAK7Q,UAAU,aACZiQ,EAAkB,GACnB,2BAAIA,EAAkB,IACrBA,EAAkB,KAGvB,kBAAC,GAAD,CACEhB,UAAWA,EACXU,MAAO,EACPP,wBAAwB,W,GAhCnB5O,IAAMC,Y,sFC+BnBqQ,I,wDACJ,WAAY5Q,GAAQ,IAAD,8BACjB,cAAMA,IASR6Q,aAAe,SAAClH,GACd,EAAKsF,SAAS,CAAE6B,YAAanH,EAAMa,OAAOC,MAAOsG,cAAe,MAX/C,EAcnBC,gBAAkB,SAACrH,GACjB,EAAKsF,SAAS,CAAEgC,eAAgBtH,EAAMa,OAAOC,MAAOyG,iBAAkB,MAfrD,EAkBnBC,wBAA0B,WAAO,IAAD,EACU,EAAK3O,MAArCsO,EADsB,EACtBA,YAAaG,EADS,EACTA,eAErBG,MAAM3Q,EAAY,CAChB4Q,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMxP,KAAKC,UAAU,CACnBwP,MAAOV,EACPW,SAAUR,MAGXS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAC4B,IAA7B3M,OAAO4M,KAAKD,GAAMzN,QACpB,EAAKpE,MAAM+R,SAASF,GACpB,EAAK7R,MAAMkN,cAAc,QACzB,EAAK+B,SAAS,CACZ8B,cAAe,GACfG,iBAAkB,OAIpBc,QAAQC,IAAI,eAAgBJ,GACf,gCAATA,EACF,EAAK5C,SAAS,CAAE8B,cAAec,IACb,uBAATA,GACT,EAAK5C,SAAS,CACZiC,iBAAkBW,EAClBd,cAAe,SAKtBmB,OAAM,SAACC,GACNH,QAAQC,IAAI,SAAUE,OApDT,EAwDnBC,SAAW,SAACzI,GACVA,EAAMU,iBADc,MAEoB,EAAK7H,MAArCsO,EAFY,EAEZA,YAAaG,EAFD,EAECA,eAGhBH,EAGH,EAAK7B,SAAS,CAAE8B,cAAe,KAF/B,EAAK9B,SAAS,CAAE8B,cAAe,+BAI5BE,EAGH,EAAKhC,SAAS,CAAEiC,iBAAkB,KAFlC,EAAKjC,SAAS,CAAEiC,iBAAkB,kCAKhCJ,GAAeG,GACjB,EAAKE,2BAvEP,EAAK3O,MAAQ,CACXsO,YAAa,GACbG,eAAgB,GAChBF,cAAe,GACfG,iBAAkB,IANH,E,qDA+ET,IAAD,OACC9D,EAAYrN,KAAKC,MAAjBoN,QACR,OACE,yBAAKtN,UAAU,kBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,SAAd,WACA,uBAAGA,UAAU,YAAb,uEAIF,yBAAKA,UAAU,UACb,kBAACuS,GAAA,EAAD,CAAOvS,UAAWsN,EAAQkF,OAAQC,UAAW,GAC3C,kBAACC,GAAA,EAAD,CACE7B,UAAU,OACV8B,SAAS,KACT3S,UAAWsN,EAAQvK,WAEnB,kBAAC6P,GAAA,EAAD,MACA,yBAAK5S,UAAWsN,EAAQuF,OACtB,kBAAC/E,EAAA,EAAD,CAAY+C,UAAU,KAAK9C,QAAQ,MAAnC,WAGA,0BAAM/N,UAAWsN,EAAQwF,KAAMC,YAAU,GACvC,kBAACC,GAAA,EAAD,CACEX,MAAOpS,KAAKyC,MAAMuO,cAClBgC,WAAYhT,KAAKyC,MAAMuO,cACvBlD,QAAQ,WACRmF,OAAO,SACPC,WAAS,EACT1E,GAAG,QACH2E,MAAM,gBACNC,KAAK,QACLC,aAAa,QAEb1H,SAAU3L,KAAK8Q,eAEjB,kBAACiC,GAAA,EAAD,CACEX,MAAOpS,KAAKyC,MAAM0O,iBAClB6B,WAAYhT,KAAKyC,MAAM0O,iBACvBrD,QAAQ,WACRmF,OAAO,SACPC,WAAS,EACTE,KAAK,WACLD,MAAM,WACNpS,KAAK,WACLyN,GAAG,WACH6E,aAAa,mBACb1H,SAAU3L,KAAKiR,kBAEjB,kBAACqC,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAU9I,MAAM,WAAWqD,MAAM,YAC1CoF,MAAM,gBAER,kBAAClF,EAAA,EAAD,CACElN,KAAK,SACLmS,WAAS,EACTpF,QAAQ,YACRC,MAAM,UACNhO,UAAWsN,EAAQoG,OACnBrT,QAASJ,KAAKqS,SACd5B,MAAO,CAAE1C,MAAO,UAPlB,WAWA,kBAACnL,EAAA,EAAD,CACEE,WAAS,EACTG,WAAW,SACXF,UAAU,SACVC,QAAQ,UAOR,kBAACJ,EAAA,EAAD,CAAMrB,MAAI,GACP,0BACD,kBAACmS,GAAA,EAAD,CACE9C,UAAU,SACV9C,QAAQ,QACR1N,QAAS,kBAAM,EAAKH,MAAMkN,cAAc,cAEvC,mBAUnB,yBAAKpN,UAAU,cACb,yBAAKA,UAAU,wBACb,6BACE,kEACA,mHAE0B,KAE1B,2JAKF,kBAACsQ,GAAA,EAAD,MACA,6BACE,qEACA,oEACA,+FAIF,kBAACA,GAAA,EAAD,MACA,6BACE,6DACA,0EACA,8FAIF,kBAACA,GAAA,EAAD,MACA,6BACE,gEACA,4EACA,6GAIA,kG,GAlNO9P,IAAMC,YA2NZmT,iBA1PG,SAAC5G,GAAD,MAAY,CAC5BjK,UAAW,CACT8Q,WAAY,SACZC,WAAY,SAEdjB,MAAO,CACLkB,UAAW/G,EAAM7J,QAAQ,GACzB6Q,QAAS,OACTC,cAAe,SACf/Q,WAAY,UAEdsP,OAAO,cACLuB,UAAW/G,EAAM7J,QAAQ,GACzB+Q,aAAclH,EAAM7J,QAAQ,GAC5BgR,QAASnH,EAAM7J,QAAQ,IACtB6J,EAAMoH,YAAYC,GAAG,IAAyB,EAAnBrH,EAAM7J,QAAQ,IAAU,CAClDmR,MAAO,IACPC,OAAQ,IACRC,WAAY,OACZC,YAAa,SAGjB3B,KAAM,CACJwB,MAAO,OACPP,UAAW/G,EAAM7J,QAAQ,IAE3BuQ,OAAQ,CACNR,OAAQlG,EAAM7J,QAAQ,EAAG,EAAG,OA+NjByQ,CAAsB9C,IC7N/B4D,G,kDACJ,WAAYxU,GAAQ,IAAD,8BACjB,cAAMA,IAmBRyU,YAAc,SAAC9K,GACb,EAAKsF,SAAS,CAAEkE,KAAMxJ,EAAMa,OAAOC,MAAOiK,aAAc,MArBvC,EAwBnB7D,aAAe,SAAClH,GACd,EAAKsF,SAAS,CAAEuC,MAAO7H,EAAMa,OAAOC,MAAOsG,cAAe,MAzBzC,EA4BnBC,gBAAkB,SAACrH,GACjB,EAAKsF,SAAS,CAAEwC,SAAU9H,EAAMa,OAAOC,MAAOyG,iBAAkB,MA7B/C,EAgCnByD,sBAAwB,WAAO,IAAD,EACM,EAAKnS,MAA/B2Q,EADoB,EACpBA,KAAM3B,EADc,EACdA,MAAOC,EADO,EACPA,SAErBL,MAAM5Q,EAAc,CAClB6Q,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMxP,KAAKC,UAAU,CACnBmR,KAAMA,EACN3B,MAAOA,EACPC,SAAUA,MAGXC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAC4B,IAA7B3M,OAAO4M,KAAKD,GAAMzN,QACpB,EAAK6K,SAAS,CAAE8B,cAAe,KAC/B,EAAK/Q,MAAM+R,SAASF,GACpB,EAAK7R,MAAMkN,cAAc,SAGzB,EAAK+B,SAAS,CAAE8B,cAAec,OAGlCK,OAAM,SAACC,GACNH,QAAQC,IAAI,SAAUE,OAxDT,EA4DnByC,aAAe,SAACjL,GACdA,EAAMU,iBADkB,MAEU,EAAK7H,MAA/B2Q,EAFgB,EAEhBA,KAAM3B,EAFU,EAEVA,MAAOC,EAFG,EAEHA,SAEhB0B,EAGH,EAAKlE,SAAS,CAAEyF,aAAc,KAF9B,EAAKzF,SAAS,CAAEyF,aAAc,8BAI3BlD,EAGH,EAAKvC,SAAS,CAAE8B,cAAe,KAF/B,EAAK9B,SAAS,CAAE8B,cAAe,+BAI5BU,EAGH,EAAKxC,SAAS,CAAEiC,iBAAkB,KAFlC,EAAKjC,SAAS,CAAEiC,iBAAkB,kCAK/B,EAAK2D,cAAcrD,IAItB,EAAKvC,SAAS,CAAE8B,cAAe,KAG7BoC,GAAQ1B,GAAYD,GACtB,EAAKmD,yBAPL,EAAK1F,SAAS,CAAE8B,cAAe,wCA/EjC,EAAKvO,MAAQ,CACX2Q,KAAM,GACN3B,MAAO,GACPC,SAAU,GACVqD,WAAW,EACXC,YAAY,EACZC,eAAe,EACfN,aAAc,GACd3D,cAAe,GACfG,iBAAkB,IAXH,E,0DAeLM,GAEZ,MADW,0JACDyD,KAAKnK,OAAO0G,GAAOxG,iB,+BA6ErB,IAAD,OACCoC,EAAYrN,KAAKC,MAAjBoN,QADD,EAEmDrN,KAAKyC,MAAvDkS,EAFD,EAECA,aAAc3D,EAFf,EAEeA,cAAeG,EAF9B,EAE8BA,iBACrC,OACE,yBAAKpR,UAAU,kBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,SAAd,WACA,uBAAGA,UAAU,YAAb,uEAIF,yBAAKA,UAAU,UACb,kBAACuS,GAAA,EAAD,CAAOvS,UAAWsN,EAAQkF,QACxB,kBAACE,GAAA,EAAD,CACE7B,UAAU,OACV8B,SAAS,KACT3S,UAAWsN,EAAQvK,WAEnB,kBAAC6P,GAAA,EAAD,MACA,yBAAK5S,UAAWsN,EAAQuF,OACtB,kBAAC/E,EAAA,EAAD,CAAY+C,UAAU,KAAK9C,QAAQ,MAAnC,YAGA,0BAAM/N,UAAWsN,EAAQwF,KAAMC,YAAU,GACvC,kBAACC,GAAA,EAAD,CACEX,MAAOuC,EACP3B,WAAY2B,EACZ7G,QAAQ,WACRU,GAAG,OACH2E,MAAM,YAEND,WAAS,EACTvH,SAAU3L,KAAK0U,cAEjB,kBAAC3B,GAAA,EAAD,CACEX,MAAOpB,EACPgC,WAAYhC,EACZlD,QAAQ,WACRmF,OAAO,SACPC,WAAS,EACT1E,GAAG,QACH2E,MAAM,gBACNC,KAAK,QACLC,aAAa,QACb1H,SAAU3L,KAAK8Q,eAEjB,kBAACiC,GAAA,EAAD,CACEX,MAAOjB,EACP6B,WAAY7B,EACZrD,QAAQ,WACRmF,OAAO,SACPC,WAAS,EACTE,KAAK,WACLD,MAAM,WACNpS,KAAK,WACLyN,GAAG,WACH6E,aAAa,mBACb1H,SAAU3L,KAAKiR,kBAEjB,kBAAChD,EAAA,EAAD,CACElN,KAAK,SACLmS,WAAS,EACTpF,QAAQ,YACRC,MAAM,UACNhO,UAAWsN,EAAQoG,OACnBrT,QAASJ,KAAK6U,aACdpE,MAAO,CAAE1C,MAAO,YAPlB,YAWA,kBAACnL,EAAA,EAAD,CACEE,WAAS,EACTG,WAAW,SACXF,UAAU,SACVC,QAAQ,UAER,kBAACJ,EAAA,EAAD,CAAMrB,MAAI,GACP,uBACD,kBAACmS,GAAA,EAAD,CACE9C,UAAU,SACV9C,QAAQ,QACR1N,QAAS,kBAAM,EAAKH,MAAMkN,cAAc,YAEvC,mBAUnB,yBAAKpN,UAAU,cACb,yBAAKA,UAAU,wBACb,6BACE,kEACA,iPAOF,kBAACsQ,GAAA,EAAD,MACA,6BACE,qEACA,oEACA,+FAIF,kBAACA,GAAA,EAAD,MACA,6BACE,6DACA,0IAKF,kBAACA,GAAA,EAAD,MACA,6BACE,gEACA,+N,GA3NS9P,IAAMC,WAwOdmT,iBAvQG,SAAC5G,GAAD,MAAY,CAC5BjK,UAAW,CACT8Q,WAAY,SACZC,WAAY,SAEdjB,MAAO,CACLkB,UAAW/G,EAAM7J,QAAQ,GACzB6Q,QAAS,OACTC,cAAe,SACf/Q,WAAY,UAEdsP,OAAO,cACLuB,UAAW/G,EAAM7J,QAAQ,GACzB+Q,aAAclH,EAAM7J,QAAQ,GAC5BgR,QAASnH,EAAM7J,QAAQ,IACtB6J,EAAMoH,YAAYC,GAAG,IAAyB,EAAnBrH,EAAM7J,QAAQ,IAAU,CAClDmR,MAAO,IACPC,OAAQ,IACRC,WAAY,OACZC,YAAa,SAGjB3B,KAAM,CACJwB,MAAO,OACPP,UAAW/G,EAAM7J,QAAQ,IAE3BuQ,OAAQ,CACNR,OAAQlG,EAAM7J,QAAQ,EAAG,EAAG,OA4OjByQ,CAAsBc,IC3Q/B5H,I,OAAYC,YAAW,CAC3BlJ,KAAM,CACJuR,SAAU,KAEZlI,MAAO,CACLmI,SAAU,IAEZC,IAAK,CACHpB,aAAc,OAUH,SAASqB,GAAT,GAA0D,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,oBACzCnI,EAAUR,KAEP4I,SAASC,cAAc,QAC7BC,UAAY,qBACf,IAAMC,EAAoCL,EAASM,oBAT/B5F,QAAQ,UAAW,KACvBC,MAAM,KAUhB4F,EAAa,SAACC,GAClB,OAAOA,EAAapL,MAAM,EAAGoL,EAAa1R,OAAS,IAGrD,OACE,kBAAC8L,GAAA,EAAD,CAAMpQ,UAAS,UAAKsN,EAAQzJ,KAAb,gBACb,kBAAC4M,GAAA,EAAD,KACE,kBAAC3C,EAAA,EAAD,CACE9N,UAAWsN,EAAQJ,MACnBc,MAAM,gBACNiI,cAAY,GAEZ,yBAAKjW,UAAU,oBAAf,iBAEF,kBAAC8N,EAAA,EAAD,CAAYC,QAAQ,KAAK8C,UAAU,MACjC,yBAAK7Q,UAAU,iBACZwV,EAASU,cADZ,KAC6BV,EAASW,UADtC,MAIF,kBAAC,GAAD,CACElH,UAAS,UAAKrO,GAAL,OAA2BmV,EAClCP,EAASY,oBAEXzG,MAAO,EACPP,wBAAwB,IAE1B,kBAACkB,GAAA,EAAD,CAASI,MAAO,CAAEqD,UAAW,uBAC7B,kBAACjG,EAAA,EAAD,CACE9N,UAAWsN,EAAQJ,MACnBc,MAAM,gBACNiI,cAAY,GAEZ,yBAAKjW,UAAU,oBAAf,oBAEF,kBAAC8N,EAAA,EAAD,CAAYC,QAAQ,KAAK8C,UAAU,MACjC,yBAAK7Q,UAAU,iBACZ6V,EAAiB,GAClB,uBAAG7V,UAAU,cAAc6V,EAAiB,IAC3CA,EAAiB,KAGtB,kBAAC,GAAD,CACE5G,UAAS,UXhEjB,sEWgEiB,OAA+B8G,EACtCP,EAASa,uBAEX1G,MAA6B,IAAtB8F,EAA6B,IACpCrG,wBAAwB,IAE1B,kBAACkB,GAAA,EAAD,CAASI,MAAO,CAAEqD,UAAW,uBAC7B,kBAACjG,EAAA,EAAD,CACE9N,UAAWsN,EAAQJ,MACnBc,MAAM,gBACNiI,cAAY,GAEZ,yBAAKjW,UAAU,oBAAf,qBAEF,kBAAC8N,EAAA,EAAD,CAAYC,QAAQ,QAAQ8C,UAAU,KACpC,yBAAKH,MAAO,CAAE2E,SAAU,uBACrBG,EAASc,qB,ICtDPC,G,4MAhCb5U,kBAAoB,WAClB+T,SAASlG,iBAAiB,YAAa,EAAKgH,qB,EAG9CC,qBAAuB,WACrBf,SAASlG,iBAAiB,YAAa,EAAKgH,qB,EAG9CE,cAAgB,SAACzS,GAGf,EAAK0S,WAAa1S,G,EAGpBuS,mBAAqB,SAAC3M,GAChB,EAAK8M,aAAe,EAAKA,WAAWpS,SAASsF,EAAMa,SAErD+E,YAAW,WACT,EAAKvP,MAAM0W,kBACV,I,uDAKL,OAAO,yBAAKC,IAAK5W,KAAKyW,eAAgBzW,KAAKC,MAAMwD,c,GAzBxBlD,IAAMC,WCwCpBqW,I,OA1CA,WACb,OACE,yBAAK9W,UAAU,eACb,6BACE,mDACuB,uBAAG+W,KbYhB,mDaZa,eAEvB,uDAC4B,IAC1B,uBAAGA,KbOX,8GaPQ,gCAGJ,6BACA,yBAAK/W,UAAU,aACb,mGCIOgX,I,OAlBI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpB,OACE,yBAAKjX,UAAU,YAAY0Q,MAAO,CAAE1C,MAAO,YACzC,kBAACuE,GAAA,EAAD,CAAOE,UAAW,IAClB,yBAAKzS,UAAU,gBACb,uCAAaiX,EAAb,MACA,4BACE,0FACA,gH,kBCHJnK,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCkK,WAAY,CACV/C,QAASnH,EAAM7J,QAAQ,IAEzBgU,OAAQ,CACNC,WAAY,SAAClX,GACX,OAAgC,IAAzBA,EAAMmX,gBAAgD,IAAxBnX,EAAMoX,cACvC,UADG,yCAE+BpX,EAAMmX,eAFrC,sBAEiEnX,EAAMmX,eAFvE,aAE0FnX,EAAMoX,cAFhG,YAiEEC,OA1Df,SAAmBrX,GAAQ,IACjBK,EAAgCL,EAAhCK,KAAMiX,EAA0BtX,EAA1BsX,WAAYC,EAAcvX,EAAduX,UACpBnK,EAAUR,GAAU5M,GAFF,EAGQM,IAAM+M,SAAS,MAHvB,mBAGjBmK,EAHiB,KAGPC,EAHO,KAalBnK,EAAO9N,QAAQgY,GACfjJ,EAAKjB,EAAO,sBAAmBoK,EAErC,OACE,6BACE,yBAAK5X,UAAS,oBAAuByO,GAAIA,EAAIpO,QAb7B,SAACwJ,GACnB8N,EAAY9N,EAAMgO,iBAad,yBAAK7X,UAAU,oBACb,yBAAKA,UAAS,yBAAoBsN,EAAQ6J,SACxC,8BACE,2BAAI5W,KAGR,yBAAKP,UAAU,iBACb,2BACGwX,EADH,IACe,0BAAMxX,UAAU,uBAE/B,2BACGyX,EADH,IACc,0BAAMzX,UAAU,yBAMpC,kBAAC8X,GAAA,EAAD,CACErJ,GAAIA,EACJjB,KAAMA,EACNkK,SAAUA,EACVrJ,QA/Bc,WAClBsJ,EAAY,OA+BRI,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,WAGd,kBAACnK,EAAA,EAAD,CAAY9N,UAAWsN,EAAQ4J,YAA/B,UACMM,EADN,qBAC6BC,EAD7B,e,UCgDOU,G,kDA/Gb,WAAYjY,GAAQ,IAAD,8BACjB,cAAMA,IAMRkY,oBAAsB,WACpB9G,MhBNF,2DgBM0B,CACtBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMxP,KAAKC,UAAU,CACnB6G,SAAU,EAAK7I,MAAM6I,aAGtB6I,MAAK,SAACyG,GAAD,OAASA,EAAIvG,UAClBF,MAAK,SAAC0G,GACL,EAAKnJ,SAAS,CAAEmJ,eAAgBA,OAEjClG,OAAM,SAACmG,GACNrG,QAAQC,IAAI,2CAA4CoG,OApB3C,EAwBnB5W,kBAAoB,WAClB,EAAKyW,uBAzBY,EA4BnBI,yBAA2B,SAACC,GAC1B,IAAIC,EAAgB,EACpB,OAA0B,IAAtBD,EAAWnU,QACL,GAEVmU,EAAWnT,SAAQ,SAACqT,GACH,YAAXA,IAAsBD,GAAiB,MAEtCE,KAAKC,MAAOH,EAAgBD,EAAWnU,OAAU,OApCvC,EAuCnBwU,kBAAoB,SAACL,GACnB,OAA6B,IAAtBA,EAAWnU,OACd,EACAmU,EAAWM,QAAO,SAACC,EAAKC,GAItB,MAHY,YAARA,IACFD,GAAO,GAEFA,IACN,IA7CP,EAAKtW,MAAQ,CACX4V,eAAgB,IAHD,E,qDAkDT,IAAD,OACP,GAAsD,IAAlDlT,OAAO4M,KAAK/R,KAAKyC,MAAM4V,gBAAgBhU,OACzC,OACE,6BACE,iDACA,kBAAC4U,GAAA,EAAD,OAIN,IAAMtW,EAAoBwC,OAAO4M,KAAKrM,GAAkBpE,KAAI,SAAC4X,EAAM9W,GACjE,GAAa,gBAAT8W,EAAwB,CAC1B,IAAIC,EAAoB,EACpBC,EAAmB,EACnB7B,EAAa,EAAKsB,kBACpB,EAAKpW,MAAM4V,eAAea,IAExB1B,EAAY,EAAK/U,MAAM4V,eAAea,GAAM7U,OAASkT,EAYzD,OAVIpS,OAAO4M,KAAK,EAAKtP,MAAM4V,gBAAgBhU,OAAS,IAIlD+U,EAAmB,KAHnBD,EAAoB,EAAKZ,yBACvB,EAAK9V,MAAM4V,eAAea,MAGD,IAAvBC,IACFA,EAAoB,EACpBC,EAAmB,IAIrB,kBAACxW,EAAA,EAAD,CAAMrB,MAAI,EAACsB,IAAKT,GACd,kBAAC,GAAD,CACE9B,KAAM4Y,EACNrW,IAAKT,EACLiV,cAAe+B,EACfhC,eAAgB+B,EAChB5B,WAAYA,EACZC,UAAWA,KAKjB,OAAO,QAIX,OACE,yBAAKzX,UAAU,mBACb,kBAAC6C,EAAA,EAAD,CACEE,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXC,QAAQ,KAEPP,Q,GAzGiBpC,IAAMC,W,oBCiBlC6Y,KAAUC,KAAK,4BAEf,IA6BMC,G,kDACJ,WAAYtZ,GAAQ,IAAD,8BACjB,cAAMA,IAcR6B,mBAAqB,SAACC,EAAWyX,GAC3B,EAAK/W,MAAMgX,SAASjL,KAAOgL,EAAUC,SAASjL,KAChD,EAAKvO,MAAMyZ,aACX,EAAKC,mBAlBU,EAsBnBxM,cAAgB,SAACyM,GACf,EAAK1K,SAAS,CAAE0K,MAAOA,KAvBN,EA0BnBC,kBAAoB,SAAC1Y,GACnB,IAD4B,EACxBe,EAAc,GADU,cAEZf,GAFY,IAE5B,2BAAsB,CAAC,IAAZ2Y,EAAW,QAChBC,EAAWrU,EAAiBoU,IAAM,KACtC5X,EAAY8X,KAAK,CAAE1Z,KAAMwZ,EAAGhZ,OAAQiZ,KAJV,8BAM5B,OAAO7X,GAhCU,EAmCnB6G,wBAA0B,SAACC,GACzB,OAAOA,EAAc1H,KAAI,SAACC,GACxB,IAAI0H,EAAc,IAAQ1H,EAAK+B,KAI/B,MAHkB,WAAd/B,EAAKR,OACPkI,IAAgB,GAEX,CACL3I,KAAMiB,EAAKjB,KACX2I,YAAaA,OA3CA,EAgDnBiB,gBAAkB,SAACpB,EAAUmR,GAC3B5I,MjBlGgB,wDiBkGK,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMxP,KAAKC,UAAU,CACnB6G,SAAUA,EACVoR,mBAAoBD,MAGrBtI,MAAK,SAACyG,GAAD,OAASA,EAAIvG,UAClBF,MAAK,SAACG,GACLG,QAAQC,IAAI,qBAAsBJ,MAEnCK,OAAM,SAACC,GACNH,QAAQC,IAAI,8BAA+BE,OA9D9B,EAkEnBjI,gBAAkB,SAACrB,EAAU3H,GAC3BkQ,MjBnHgB,wDiBmHK,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMxP,KAAKC,UAAU,CACnB6G,SAAUA,EACV3H,KAAMA,EACNgZ,UAAW,EAAK1X,MAAM2X,0BAGvBzI,MAAK,SAACyG,GAAD,OAASA,EAAIvG,UAClBF,MAAK,SAACG,GACLG,QAAQC,IAAI,qBAAsBJ,GAElC,EAAK6H,oBAENxH,OAAM,SAACC,GACNH,QAAQC,IAAI,8BAA+BE,OAnF9B,EAuFnB0D,WAAa,SAACC,GACZ,OAAOA,EAAapL,MAAM,EAAGoL,EAAa1R,OAAS,IAxFlC,EA2FnBsV,eAAiB,WAAO,IAAD,EACkB,EAAK1Z,MAApCuJ,EADa,EACbA,eAAgBtI,EADH,EACGA,WACpBE,EAAa,GACjB,EAAK8N,SAAS,CAAE3M,eAAgB,KAEhC8O,MjBlJc,0DiBkJK,CACjBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMxP,KAAKC,UAAU,CACnB6G,SAAU,EAAKrG,MAAMgX,SAASjL,OAG/BmD,MAAK,SAACyG,GAAD,OAASA,EAAIvG,UAClBF,MAAK,SAACxQ,GACL,IAAIgZ,EAAYvY,KAAKC,MACrBT,EAAa,EAAKyY,kBAAkB1Y,EAAKkZ,YAAY/Y,KACnD,SAACC,GAAD,OAAUA,EAAKT,UAEjBI,EAAWC,EAAKkZ,WAAYjZ,GAC5B,IAAM0J,EAAY1J,EAAW,GACvBkZ,EAAUnZ,EAAKkZ,WAAWE,OAAO,GACvC/Q,EAAe8Q,EAASxP,GAExB,EAAKoE,SAAS,CAAEsL,gBAAiBrZ,IACjC,EAAK+N,SAAS,CAAEkL,sBAAuBD,IACpB,IAAIpL,MAAJ,UACdpO,GADc,OACQ,EAAKmV,WAAW3U,EAAKgV,qBAErC5G,iBAAiB,kBAAkB,SAAC3F,GAC7C,EAAKsF,SAAS,CACZsG,oBAAqB5L,EAAMa,OAAOgQ,iBAIvCtI,OAAM,SAACmG,GACNrG,QAAQC,IAAI,6BAA8BoG,OA9H7B,EAkInBtG,SAAW,SAAC0I,GAAU,IACZ5R,EAAkC4R,EAAlC5R,SAAUsK,EAAwBsH,EAAxBtH,KAAM3B,EAAkBiJ,EAAlBjJ,MAAOkJ,EAAWD,EAAXC,OAC/B,EAAKzL,UAAS,SAACsK,GACb,IAAIC,EAAQ,eAAQD,EAAUC,UAK9B,OAJAA,EAASrG,KAAOA,EAChBqG,EAASjL,GAAK1F,EACd2Q,EAAShI,MAAQA,EACjBgI,EAASkB,OAASA,EACX,CAAElB,eAEXxH,QAAQC,IAAI,WAAY,EAAKzP,MAAMgX,UACnCJ,KAAUuB,SAAS9R,EAAU,CAC3BsK,KAAMA,EACN3B,MAAOA,EACPkJ,OAAQA,KAhJO,EAoJnBhE,cAAgB,WACd,EAAKkE,aAAaC,QAAQ3P,QAAQ2P,QAAQC,SArJzB,EAwJnB1a,YAAc,SAACuJ,GACb,IAAMsP,EAAOtP,EAAMa,OAAOuQ,UAC1B,EAAK9L,SAAS,CAAE3M,eAAgB2W,IAG5B,EAAKzW,MAAMF,iBAAmB2W,GAChC,EAAKhK,SAAS,CAAE3M,eAAgB,MA9JjB,EAkKnB0Y,SAAW,WAET,OAAI,EAAKhb,MAAME,eAAiB,EAAKsC,MAAMF,eAClC,kBAAC,GAAD,CAAMwN,kBAAmB,EAAKtN,MAAMF,iBAEzC,EAAKtC,MAAMqC,aACN,kBAAC,GAAD,CAAMyN,kBAAmB,EAAK9P,MAAMe,sBAD7C,GAvKiB,EA4KnBka,gBAAkB,WAChB,GAAI,EAAKjb,MAAME,cACb,OACE,kBAAC,GAAD,CACEoV,SAAU,EAAK9S,MAAM+X,gBACrBhF,oBAAqB,EAAK/S,MAAM+S,uBAjLrB,EAuLnB2F,cAAgB,SAACC,EAAQ1Q,GACvB,OAAOvF,OAAO4M,KAAKqJ,GAAQ7W,MAAK,SAAC1B,GAAD,OAASuY,EAAOvY,KAAS6H,MAxLxC,EA2LnB2Q,eAAiB,WAAO,IAAD,EASjB,EAAKpb,MAPP4J,EAFmB,EAEnBA,gBACAC,EAHmB,EAGnBA,aACAxH,EAJmB,EAInBA,aACAnC,EALmB,EAKnBA,cACAiK,EANmB,EAMnBA,eACAkR,EAPmB,EAOnBA,gBACAta,EARmB,EAQnBA,eAEF,OAAIoJ,EAEA,2BACE,2DAIFP,EAEA,6BACE,2BACE,2BACGyR,EAAe,qBACExR,EADF,wDAEEA,EAFF,2BAEiC,EAAKqR,cAChDzV,EACAoE,GAJU,iBAKF9I,KAGlB,2BACE,yDAIGsB,IAAiB8H,EAExB,2BACE,uDAGKjK,IAAkBiK,EAEzB,6BACE,2BACE,4FAII9H,GAAiBnC,EAOpB,4BALL,2BACE,gEA/OW,EAuPnBob,YAAc,SAAC3B,GACb,OAAQA,GACN,IAAK,WACH,OACE,yBAAK7Z,UAAU,2BACb,yBAAKA,UAAU,uBACb,kBAAC,EAAD,CACEoN,cAAe,EAAKA,cACpBC,WAAW,cAGf,yBAAKrN,UAAU,uBACb,kBAAC,GAAD,CAAe+I,SAAU,EAAKrG,MAAMgX,SAASjL,MAE/C,kBAAC,GAAD,OAGN,IAAK,SACH,OACE,kBAAC,GAAD,CAAQrB,cAAe,EAAKA,cAAe6E,SAAU,EAAKA,WAE9D,IAAK,WACH,OACE,kBAAC,GAAD,CACE7E,cAAe,EAAKA,cACpB6E,SAAU,EAAKA,WAGrB,IAAK,OAAL,IACUzI,EAAgB,EAAKtJ,MAArBsJ,YAER,OACE,yBAAKxJ,UAAU,iBAAiB0Q,MAAO,CAAE9C,SAAU,aACjD,yBAAK5N,UAAU,gBACb,kBAAC,EAAD,CAAQoN,cAAe,EAAKA,cAAeC,WAAW,SACtD,kBAAC,GAAD,CAAY4J,SAAU,EAAKvU,MAAMgX,SAASrG,OAC1C,kBAACxQ,EAAA,EAAD,CACEE,WAAS,EACTC,UAAU,SACVC,QAAQ,SACRC,WAAW,UAEX,kBAACqP,GAAA,EAAD,CAAOE,UAAW,IAClB,kBAAC,GAAD,CAAgBmE,cAAe,EAAKA,eAClC,kBAAC,EAAD,CACEzM,gBAAiB,EAAKA,gBACtBC,gBAAiB,EAAKA,gBACtBrB,SAAU,EAAKrG,MAAMgX,SAASjL,GAC9BoI,IAAK,EAAKiE,gBAGd,kBAACjY,EAAA,EAAD,CACEE,WAAS,EACTC,UAAU,SACVC,QAAQ,SACRC,WAAW,UAEX,kBAACL,EAAA,EAAD,CAAMrB,MAAI,GACR,kBAAC,EAAD,CACEW,YAAa,EAAK2X,kBAAkBtQ,GACpClJ,YAAa,EAAKA,YAClBkC,eAAgB,EAAKE,MAAMF,kBAG/B,6BAAM,EAAK8Y,kBACX,kBAACzY,EAAA,EAAD,CACEE,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXC,QAAQ,KAER,kBAACN,EAAA,EAAD,CAAMrB,MAAI,GACR,kBAAC+Q,GAAA,EAAD,CAAOE,UAAW,IACjB,EAAKyI,YAER,kBAACrY,EAAA,EAAD,CAAMrB,MAAI,GAAE,EAAK2Z,uBAKzB,kBAAC,GAAD,OAGN,QACE,OAAO,0CA1UX,EAAKzY,MAAQ,CACXmX,MAAO,SACPH,SAAU,CACRjL,GAAI,GACJ4E,KAAM,GACN3B,MAAO,GACPkJ,OAAQ,IAEVH,gBAAiB,MAEnB,EAAKK,aAAeta,IAAM6K,YAZT,E,qDAiVjB,OAAO,yBAAKrL,UAAU,MAAMC,KAAKub,YAAYvb,KAAKyC,MAAMmX,Y,GAlV1CpZ,aAsVH2C,gBAnXS,SAACV,GACvB,MAAO,CACLzB,eAAgByB,EAAMW,gBAAgBpC,eACtC6I,gBAAiBpH,EAAMW,gBAAgByG,gBACvCC,aAAcrH,EAAMW,gBAAgB0G,aACpCxH,aAAcG,EAAMW,gBAAgBd,aACpCnC,cAAesC,EAAMW,gBAAgBjD,cACrCoJ,YAAa9G,EAAMW,gBAAgBmG,YACnCP,cAAevG,EAAMW,gBAAgB4F,cACrCoB,eAAgB3H,EAAMuJ,mBAAmB5B,eACzC/H,iBAAkBI,EAAMW,gBAAgBf,iBACxCiZ,gBAAiB7Y,EAAMwJ,eAAeqP,oBAIf,SAACjY,GAC1B,MAAO,CACLmG,eAAgB,SAAC3I,EAASC,GACxBuC,EAASzC,EAAWC,EAASC,KAE/BI,WAAY,SAACC,EAAMC,GACjBiC,EAASnC,EAAWC,EAAMC,KAE5BsY,WAAY,WACVrW,EhBsEG,CACLtC,KAAM,oBgBoRKoC,CAA6CoW,I,SC3YtDiC,GAAkB,CACtB/P,SAAU,GACVgQ,WAAY,GACZH,iBAAiB,GAGbI,GAAsB,CAC1BtR,gBAAgB,GAGZuR,GAAmB,CACvB3a,eAAgB,GAChBC,cAAe,GACfsI,YAAa,GACbO,aAAc,GACd8R,eAAgB,GAChBC,cAAe,GACfhS,iBAAiB,EACjBvH,cAAc,EACdnC,eAAe,EACf2b,cAAe,KACf9S,cAAe,GACf+S,iBAAkB,GAClB3a,WAAY,GACZiB,iBAAkB,EAClBhB,cAAe,I,0BCVjBgY,KAAUC,KAAK,4BAEf,IAAMvM,GAAQiP,aAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,cAKNE,GAAcC,YAAgB,CAClCtQ,mBDDgC,WAG5B,IAFJvJ,EAEG,uDAFKiZ,GACRa,EACG,uDADM,GAET,OAAQA,EAAOxb,MACb,IAAK,aACH,OAAO,2BAAK0B,GAAZ,IAAmB2H,gBAAgB,IACrC,IAAK,cACH,OAAO,2BAAK3H,GAAZ,IAAmB2H,gBAAgB,IACrC,QACE,OAAO3H,ICRXwJ,eDY4B,WAA2C,IAA1CxJ,EAAyC,uDAAjC+Y,GAAiBe,EAAgB,uDAAP,GAC/D,OAAQA,EAAOxb,MACb,IlB/CsB,akBgDpB,OAAO,2BAAK0B,GAAZ,IAAmBgJ,SAAU8Q,EAAO/a,UACtC,IAAK,YACH,OAAO,2BAAKiB,GAAZ,IAAmBgZ,WAAYc,EAAO/a,UACxC,IAAK,cACH,OAAO,2BAAKiB,GAAZ,IAAmBgJ,SAAU,GAAIgQ,WAAY,KAC/C,IAAK,oBACH,OAAO,2BAAKhZ,GAAZ,IAAmB6Y,iBAAiB,IACtC,IAAK,0BACH,OAAO,2BAAK7Y,GAAZ,IAAmB6Y,iBAAiB,IACtC,QACE,OAAO7Y,ICxBXW,gBD4B6B,WAA4C,IAA3CX,EAA0C,uDAAlCkZ,GAAkBY,EAAgB,uDAAP,GACjE,OAAQA,EAAOxb,MACb,IAAK,cACH,OAAO,2BACF0B,GADL,IAEEzB,eAAgBub,EAAOvb,eACvBC,cAAesb,EAAOtb,gBAE1B,IAAK,cAEH,OADAwB,EAAMpB,cAAcoB,EAAMJ,kBAAoB,SACvC,2BACFI,GADL,IAEEmZ,eAAe,GAAD,oBAAMnZ,EAAMmZ,gBAAZ,CAA4BnZ,EAAMxB,gBAChDqB,cAAc,EACdwZ,cAAeS,EAAOjZ,KACtBjB,iBAAkBI,EAAMJ,iBAAmB,IAE/C,IAAK,cAGH,OAFAI,EAAMoZ,cAAcU,EAAOhQ,aAAegQ,EAAO/P,UACjD/J,EAAMpB,cAAcoB,EAAMJ,kBAAoB,YACvC,2BACFI,GADL,IAEEoH,iBAAiB,EACjBC,aAAcyS,EAAO/P,YAEzB,IAAK,0BAEH,OADA/J,EAAMpB,cAAcoB,EAAMJ,kBAAoB,GACvC,2BAAKI,GAAZ,IAAmBoH,iBAAiB,IACtC,IAAK,uBACH,OAAO,2BAAKpH,GAAZ,IAAmBH,cAAc,IACnC,IAAK,yBACH,OAAO,2BACFG,GADL,IAEEtC,eAAe,EACf6I,cAAe,GACf+S,iBAAiB,GAAD,oBAAMtZ,EAAMsZ,kBAAZ,CAA8BtZ,EAAMuG,gBAEpD4S,eAAgB,KAEpB,IAAK,gBACH,OAAO,2BAAKnZ,GAAZ,IAAmBtC,eAAe,IACpC,IAAK,cACH,OAAO,2BACFsC,GADL,IAEE8G,YAAagT,EAAO/a,QACpBJ,WAAYmb,EAAOnb,WACnBC,cAAekb,EAAOlb,cACtBgB,iBAAkB,IAEtB,IAAK,gBACH,IAAMma,EAAe,CACnBlc,KAAMmC,EAAMzB,eACZsC,KAAMiZ,EAAOjZ,KAAOb,EAAMqZ,cAC1B/a,KAAMwb,EAAO7P,gBAGf,OADAuF,QAAQC,IAAI,aAAcsK,GACnB,2BACF/Z,GADL,IAEEuG,cAAc,GAAD,oBAAMvG,EAAMuG,eAAZ,CAA2BwT,IACxCV,cAAeS,EAAOjZ,OAE1B,IAAK,oBACH,OAAO,2BAAKb,GAAZ,IAAmBqZ,cAAeS,EAAOjZ,OAC3C,IAAK,qBAEH,OAAO,2BACFb,GADL,IAEEJ,iBAAkBI,EAAMJ,iBAAmB,EAC3ChB,cAAeoB,EAAMpB,cAAcC,KAAI,SAACC,EAAMa,GAAP,OACrCA,IAAQK,EAAMJ,iBAAmB,UAAYd,OAGnD,IAAK,uBAEH,OAAO,2BACFkB,GADL,IAEEpB,cAAeoB,EAAMpB,cAAcC,KAAI,SAACC,EAAMa,GAAP,OACrCA,IAAQK,EAAMJ,iBAAmB,YAAcd,OAGrD,IAAK,cACH,OAAO,2BACFkB,GADL,IAEEsZ,iBAAkB,GAClB/S,cAAe,GACfc,aAAc,KACdxH,cAAc,EACduH,iBAAiB,EACjB1J,eAAe,EACf0b,cAAe,KAEnB,QACE,OAAOpZ,MCrHPga,GAASC,yBAGTC,GAAQC,YACZP,GACAQ,YAAgBJ,GAAQpD,KAAUyD,oBAIpCC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAACM,GAAA,EAAD,CAAelQ,MAAOA,IACpB,kBAAC,GAAD,QAGJ0I,SAASyH,eAAe,SrB+EpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1L,MAAK,SAAA2L,GACJA,EAAaC,gBAEdpL,OAAM,SAAAC,GACLH,QAAQG,MAAMA,EAAMoL,a","file":"static/js/main.85a3ee55.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport \"../scss/containers/App.scss\";\nimport \"../scss/components/Char.scss\";\n\n// tmw5 center bg-white br3 pa3 pa4-ns mv3 ba b--black-10\n\nclass Char extends React.Component {\n  render() {\n    const className = `card  ${this.props.cardState} ${\n      this.props.wordCompleted ? \"card-button\" : \"\"\n    }`;\n    return (\n      <div className={className} onClick={this.props.onClickCard}>\n        <h1 className=\"char\">{this.props.char}</h1>\n      </div>\n    );\n  }\n}\n\nexport default Char;\n","export const USER_INPUT = \"USER_INPUT\";\r\n\r\nconst method = \"tuanHeroku\";\r\n\r\nvar REGISTER_URL = \"https://localhost:3000/register\";\r\nvar SIGNIN_URL = \"https://localhost:3000/signin\";\r\nvar PROFILE_URL = \"https://localhost:3000/profile/\";\r\nvar GETWORD_URL = \"https://shrouded-harbor-11572.herokuapp.com/getnextword\";\r\nvar CHARSCORE_URL = \"https://shrouded-harbor-11572.herokuapp.com/charscore\";\r\nvar WORDSCORE_URL = \"https://shrouded-harbor-11572.herokuapp.com/wordscore\";\r\nvar GETCHARSCORE_URL =\r\n  \"https://shrouded-harbor-11572.herokuapp.com/getcharscore\";\r\nvar MEDIA_BASE_URL_SENTENCE =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/sentence-sound/\";\r\nvar MEDIA_BASE_URL_WORD =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/word-sound/\";\r\n// source: https://www.learn-japanese-adventure.com/learn-how-to-speak-japanese.html\r\nvar MEDIA_BASE_URL_CHAR =\r\n  \"https://s3.amazonaws.com/media.japanesereading.com/character-sound/kanasound-\"; // add {romaji}.mp3\r\nvar WORD_LINK =\r\n  \"https://www.reddit.com/r/LearnJapanese/comments/s2iop/heres_a_spreadsheet_of_the_6000_most_common/c4ak0xd/\";\r\nvar TOFUGU_LINK = \"https://www.tofugu.com/japanese/learn-katakana/\";\r\n\r\nswitch (method) {\r\n  case \"local\":\r\n    break;\r\n  case \"tuanHeroku\":\r\n    REGISTER_URL = \"https://shrouded-harbor-11572.herokuapp.com/register\";\r\n    SIGNIN_URL = \"https://shrouded-harbor-11572.herokuapp.com/signin\";\r\n    PROFILE_URL = \"https://shrouded-harbor-11572.herokuapp.com/profile/\";\r\n    break;\r\n  case \"lienHeroku\":\r\n    REGISTER_URL = \"https://peaceful-sands-25473.herokuapp.com/register\";\r\n    SIGNIN_URL = \"https://peaceful-sands-25473.herokuapp.com/signin\";\r\n    PROFILE_URL = \"https://peaceful-sands-25473.herokuapp.com/profile/\";\r\n    break;\r\n  default:\r\n    console.log(\"method should be either tuanHeroku, lienHeroku, or local\");\r\n    break;\r\n}\r\n\r\nexport {\r\n  REGISTER_URL,\r\n  SIGNIN_URL,\r\n  PROFILE_URL,\r\n  GETWORD_URL,\r\n  MEDIA_BASE_URL_SENTENCE,\r\n  MEDIA_BASE_URL_WORD,\r\n  MEDIA_BASE_URL_CHAR,\r\n  CHARSCORE_URL,\r\n  WORDSCORE_URL,\r\n  WORD_LINK,\r\n  TOFUGU_LINK,\r\n  GETCHARSCORE_URL,\r\n};\r\n","import { USER_INPUT } from \"./constants.js\";\r\n\r\nexport const typeAnswer = (text) => {\r\n  return {\r\n    type: USER_INPUT,\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const pressSpace = (context) => {\r\n  switch (context) {\r\n    case \"REQUEST_HINT\":\r\n      return {\r\n        type: \"SPACE_PRESS_FOR_HINT\",\r\n        time: Date.now(),\r\n      };\r\n    case \"CONTINUE_AFTER_ERROR\":\r\n      return {\r\n        type: \"SPACE_PRESS_TO_CONTINUE\",\r\n        time: Date.now(),\r\n      };\r\n    case \"CONTINUE_AFTER_COMPLETE\":\r\n      return {\r\n        type: \"SPACE_PRESS_TO_GO_NEXT\",\r\n        time: Date.now(),\r\n      };\r\n    default:\r\n      return {\r\n        type: \"SPACE_PRESS\",\r\n      };\r\n  }\r\n};\r\n\r\nexport const updateChar = (japchar, romaji) => {\r\n  return {\r\n    type: \"CHAR_UPDATE\",\r\n    currentJapChar: japchar,\r\n    currentRomaji: romaji,\r\n  };\r\n};\r\n\r\nexport const pressEnter = (time) => {\r\n  return {\r\n    type: \"ENTER_PRESS\",\r\n    time: time,\r\n  };\r\n};\r\n\r\nexport const typeWrongAnswer = (userChar, currentChar) => {\r\n  return {\r\n    type: \"WRONG_INPUT\",\r\n    userInput: userChar,\r\n    currentChar: currentChar,\r\n    time: Date.now(),\r\n  };\r\n};\r\n\r\nexport const completeWord = () => {\r\n  return {\r\n    type: \"COMPLETE_WORD\",\r\n    time: Date.now(), // when user complete last character Card\r\n  };\r\n};\r\n\r\nexport const updateWord = (word, romajiList) => {\r\n  const cardStateList = romajiList.map((item) => \"\");\r\n  return {\r\n    type: \"UPDATE_WORD\",\r\n    payload: word,\r\n    romajiList: romajiList,\r\n    cardStateList: cardStateList,\r\n  };\r\n};\r\n\r\nexport const completeChar = (timestamp, completionType) => {\r\n  return {\r\n    type: \"COMPLETE_CHAR\",\r\n    time: timestamp,\r\n    completionType: completionType,\r\n  };\r\n};\r\n\r\nexport const setNewWordTime = (time) => {\r\n  return {\r\n    type: \"SET_NEW_WORD_TIME\",\r\n    time: time,\r\n  };\r\n};\r\n\r\nexport const onAudioPlay = () => {\r\n  return {\r\n    type: \"PLAY_AUDIO\",\r\n  };\r\n};\r\n\r\nexport const onAudioPause = () => {\r\n  return {\r\n    type: \"PAUSE_AUDIO\",\r\n  };\r\n};\r\n\r\nexport const pressKey = (key) => {\r\n  return {\r\n    type: \"PRESS_KEY\",\r\n    payload: key,\r\n  };\r\n};\r\n\r\nexport const onCorrectChar = () => {\r\n  return {\r\n    type: \"INPUT_CORRECT_CHAR\",\r\n  };\r\n};\r\n\r\nexport const onIncorrectChar = () => {\r\n  return {\r\n    type: \"INPUT_INCORRECT_CHAR\",\r\n  };\r\n};\r\n\r\nexport const resetStore = () => {\r\n  return {\r\n    type: \"RESET_STORE\",\r\n  };\r\n};\r\n\r\nexport const alertRomajiNotInDict = () => {\r\n  return {\r\n    type: \"ALERT_NOT_IN_DICT\",\r\n  };\r\n};\r\n\r\nexport const resetRomajiNotInDictAlert = () => {\r\n  return {\r\n    type: \"RESET_NOT_IN_DICT_ALERT\",\r\n  };\r\n};\r\n","import React from \"react\";\nimport Char from \"../components/Char.js\";\nimport { Grid } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { setNewWordTime } from \"../actions\";\nimport \"../scss/components/Char.scss\";\n\nconst mapStateToProps = (state) => {\n  return {\n    // charTimestamp: state.changeCardState.charTimestamp,\n    // keyPressed: state.changeInputBox.keyPressed,\n    indexCurrentCard: state.changeCardState.indexCurrentCard,\n    cardStateList: state.changeCardState.cardStateList,\n    onHintedCard: state.changeCardState.onHintedCard,\n    wordCompleted: state.changeCardState.wordCompleted,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setNewWordTime: (time) => {\n      dispatch(setNewWordTime(time));\n    },\n  };\n};\n\nclass CharList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dispatchTime: 0,\n    };\n  }\n\n  componentDidMount = () => {\n    this.props.setNewWordTime(Date.now());\n  };\n\n  componentDidUpdate = (prevProps) => {\n    if (\n      JSON.stringify(this.props.charsToRead) !==\n      JSON.stringify(prevProps.charsToRead)\n    ) {\n      this.props.setNewWordTime(Date.now());\n    }\n  };\n\n  setCardState = (idx, char) => {\n    const {\n      indexCurrentCard,\n      cardStateList,\n      onHintedCard,\n      wordCompleted,\n    } = this.props;\n    var className = \"\";\n\n    if (wordCompleted && this.props.clickedJapChar !== \"\") {\n      if (char === this.props.clickedJapChar) {\n        className = className.concat(` clicked `);\n      } else {\n        className = className.concat(` o-100 `); // default o-100\n      }\n    }\n    if (idx === indexCurrentCard) {\n      className = className.concat(` highlighted `);\n    } else {\n      className = className.concat(\n        onHintedCard ? ` o-30 ` : wordCompleted ? \"\" : ` o-60 `\n      );\n    }\n    var cardState = cardStateList[idx];\n    className = className.concat(` ${cardState} `);\n    return className;\n  };\n\n  render() {\n    const charsArrayDisplay = this.props.charsToRead.map((item, idx) => {\n      return (\n        <Grid item key={idx}>\n          <Char\n            char={item.char}\n            key={idx}\n            cardState={this.setCardState(idx, item.char)}\n            onClickCard={this.props.onClickCard}\n            wordCompleted={this.props.wordCompleted}\n          />\n        </Grid>\n      );\n    });\n\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing=\"1\"\n      >\n        {charsArrayDisplay}\n      </Grid>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CharList);\n","// Trie.js - super simple JS implementation\r\n// https://en.wikipedia.org/wiki/Trie\r\n// https://gist.github.com/tpae/72e1c54471e88b689f85ad2b3940a8f0\r\n\r\n// -----------------------------------------\r\n\r\n// const katakanaToRomaji = {\r\n//   ア: \"a\",\r\n//   イ: \"i\",\r\n//   ウ: \"u\",\r\n//   エ: \"e\",\r\n//   オ: \"o\",\r\n//   ン: \"n'\",\r\n//   カ: \"ka\",\r\n//   キ: \"ki\",\r\n//   ク: \"ku\",\r\n//   ケ: \"ke\",\r\n//   コ: \"ko\",\r\n//   サ: \"sa\",\r\n//   シ: \"shi\",\r\n//   ス: \"su\",\r\n//   セ: \"se\",\r\n//   ソ: \"so\",\r\n//   タ: \"ta\",\r\n//   チ: \"chi\",\r\n//   ツ: \"tsu\",\r\n//   テ: \"te\",\r\n//   ト: \"to\",\r\n//   ナ: \"na\",\r\n//   ニ: \"ni\",\r\n//   ヌ: \"nu\",\r\n//   ネ: \"ne\",\r\n//   ノ: \"no\",\r\n//   ハ: \"ha\",\r\n//   ヒ: \"hi\",\r\n//   フ: \"fu\",\r\n//   ヘ: \"he\",\r\n//   ホ: \"ho\",\r\n//   マ: \"ma\",\r\n//   ミ: \"mi\",\r\n//   ム: \"mu\",\r\n//   メ: \"me\",\r\n//   モ: \"mo\",\r\n//   ヤ: \"ya\",\r\n//   ユ: \"yu\",\r\n//   ヨ: \"yo\",\r\n//   ラ: \"ra\",\r\n//   リ: \"ri\",\r\n//   ル: \"ru\",\r\n//   レ: \"re\",\r\n//   ロ: \"ro\",\r\n//   ワ: \"wa\",\r\n//   ヲ: \"wo\",\r\n// };\r\n\r\n// we start with the TrieNode\r\nfunction TrieNode(key) {\r\n  // the \"key\" value will be the character in sequence\r\n  this.key = key;\r\n\r\n  // we keep a reference to parent\r\n  this.parent = null;\r\n\r\n  // we have hash of children\r\n  this.children = {};\r\n\r\n  // check to see if the node is at the end\r\n  this.end = false;\r\n}\r\n\r\n// iterates through the parents to get the word.\r\n// time complexity: O(k), k = word length\r\nTrieNode.prototype.getWord = function () {\r\n  var output = [];\r\n  var node = this;\r\n\r\n  while (node !== null) {\r\n    output.unshift(node.key);\r\n    node = node.parent;\r\n  }\r\n\r\n  return output.join(\"\");\r\n};\r\n\r\n// -----------------------------------------\r\n\r\n// we implement Trie with just a simple root with null value.\r\nfunction Trie() {\r\n  this.root = new TrieNode(null);\r\n}\r\n\r\n// inserts a word into the trie.\r\n// time complexity: O(k), k = word length\r\nTrie.prototype.insert = function (word) {\r\n  var node = this.root; // we start at the root\r\n\r\n  // for every character in the word\r\n  for (var i = 0; i < word.length; i++) {\r\n    // check to see if character node exists in children.\r\n    if (!node.children[word[i]]) {\r\n      // if it doesn't exist, we then create it.\r\n      node.children[word[i]] = new TrieNode(word[i]);\r\n\r\n      // we also assign the parent to the child node.\r\n      node.children[word[i]].parent = node;\r\n    }\r\n\r\n    // proceed to the next depth in the trie.\r\n    node = node.children[word[i]];\r\n\r\n    // finally, we check to see if it's the last word.\r\n    if (i === word.length - 1) {\r\n      // if it is, we set the end flag to true.\r\n      node.end = true;\r\n    }\r\n  }\r\n};\r\n\r\n// check if it contains a whole word.\r\n// time complexity: O(k), k = word length\r\nTrie.prototype.contains = function (word) {\r\n  var node = this.root;\r\n\r\n  // for every character in the word\r\n  for (var i = 0; i < word.length; i++) {\r\n    // check to see if character node exists in children.\r\n    if (node.children[word[i]]) {\r\n      // if it exists, proceed to the next depth of the trie.\r\n      node = node.children[word[i]];\r\n    } else {\r\n      // doesn't exist, return false since it's not a valid word.\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // we finished going through all the words, but is it a whole word?\r\n  return node.end;\r\n};\r\n\r\n// returns every word with given prefix\r\n// time complexity: O(p + n), p = prefix length, n = number of child paths\r\nTrie.prototype.find = function (prefix) {\r\n  var node = this.root;\r\n  var output = [];\r\n\r\n  // for every character in the prefix\r\n  for (var i = 0; i < prefix.length; i++) {\r\n    // make sure prefix actually has words\r\n    if (node.children[prefix[i]]) {\r\n      node = node.children[prefix[i]];\r\n    } else {\r\n      // there's none. just return it.\r\n      return output;\r\n    }\r\n  }\r\n\r\n  // recursively find all words in the node\r\n  findAllWords(node, output);\r\n\r\n  return output;\r\n};\r\n\r\n// recursive function to find all words in the given node.\r\nfunction findAllWords(node, arr) {\r\n  // base case, if node is at a word, push to output\r\n  if (node.end) {\r\n    arr.unshift(node.getWord());\r\n  }\r\n\r\n  // iterate through each children, call recursive findAllWords\r\n  for (var child in node.children) {\r\n    findAllWords(node.children[child], arr);\r\n  }\r\n}\r\n\r\n// -----------------------------------------\r\n\r\n// instantiate our trie\r\n//   var trie = new Trie();\r\n\r\n//   // insert few values\r\n//   trie.insert(\"hello\");\r\n//   trie.insert(\"helium\");\r\n\r\n// check contains method\r\n//console.log(trie.contains(\"helium\"));  // true\r\n//console.log(trie.contains(\"kickass\")); // false\r\n\r\n// check find method\r\n//console.log(trie.find(\"hel\"));  // [ 'helium', 'hello' ]\r\n//console.log(trie.find(\"hell\")); // [ 'hello' ]\r\n\r\nclass SpellCheckerBuffer {\r\n  constructor(charAndRomaji, checkFunction, wordNotInDictAlert) {\r\n    this.dict = charAndRomaji;\r\n    this.checkFunction = checkFunction;\r\n    this.buffer = \"\";\r\n    this.charTrie = new Trie();\r\n    this.wordNotInDictAlert = wordNotInDictAlert;\r\n    Object.values(this.dict).forEach((element) => {\r\n      this.charTrie.insert(element);\r\n    });\r\n    //console.log(this.charTrie.find(\"\"));\r\n  }\r\n  checkInput(char) {\r\n    if (char === \"clearBuffer\") {\r\n      this.buffer = \"\";\r\n      return;\r\n    }\r\n    this.buffer += char;\r\n    if (this.charTrie.contains(this.buffer)) {\r\n      this.checkFunction(this.buffer);\r\n      this.buffer = \"\";\r\n    } else {\r\n      var pendingChars = this.charTrie.find(this.buffer);\r\n      if (!Array.isArray(pendingChars) || !pendingChars.length) {\r\n        this.wordNotInDictAlert();\r\n        this.checkFunction(this.buffer);\r\n        this.buffer = \"\";\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// uncomment below to test\r\n// const sp = new SpellCheckerBuffer(katakanaToRomaji, console.log);\r\n// sp.checkInput(\"n\");\r\n// sp.checkInput(\"i\");\r\n// sp.checkInput(\"n\");\r\n// sp.checkInput(\"a\");\r\n// sp.checkInput(\"t\");\r\n// sp.checkInput(\"s\");\r\n// sp.checkInput(\"u\");\r\n\r\nexport default SpellCheckerBuffer;\r\n","const katakanaToRomaji = {\r\n  ア: \"a\",\r\n  イ: \"i\",\r\n  ウ: \"u\",\r\n  エ: \"e\",\r\n  オ: \"o\",\r\n  カ: \"ka\",\r\n  キ: \"ki\",\r\n  ク: \"ku\",\r\n  ケ: \"ke\",\r\n  コ: \"ko\",\r\n  サ: \"sa\",\r\n  シ: \"shi\",\r\n  ス: \"su\",\r\n  セ: \"se\",\r\n  ソ: \"so\",\r\n  タ: \"ta\",\r\n  チ: \"chi\",\r\n  ツ: \"tsu\",\r\n  テ: \"te\",\r\n  ト: \"to\",\r\n  ナ: \"na\",\r\n  ニ: \"ni\",\r\n  ヌ: \"nu\",\r\n  ネ: \"ne\",\r\n  ノ: \"no\",\r\n  ハ: \"ha\",\r\n  ヒ: \"hi\",\r\n  フ: \"fu\",\r\n  ヘ: \"he\",\r\n  ホ: \"ho\",\r\n  マ: \"ma\",\r\n  ミ: \"mi\",\r\n  ム: \"mu\",\r\n  メ: \"me\",\r\n  モ: \"mo\",\r\n  ヤ: \"ya\",\r\n  ユ: \"yu\",\r\n  ヨ: \"yo\",\r\n  ラ: \"ra\",\r\n  リ: \"ri\",\r\n  ル: \"ru\",\r\n  レ: \"re\",\r\n  ロ: \"ro\",\r\n  ワ: \"wa\",\r\n  ヲ: \"wo\",\r\n  ン: \"n'\",\r\n  clearBuffer: \"clearBuffer\",\r\n};\r\n\r\nconst katakanaHint = {\r\n  ア: {\r\n    romaji: \"a\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A2.jpg\",\r\n    shortHint: \"Find the capital 'A'\",\r\n  },\r\n  イ: {\r\n    romaji: \"i\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A4.jpg\",\r\n    shortHint: \"It looks like an <u>ea</u>gle (i)\",\r\n  },\r\n  ウ: {\r\n    romaji: \"u\",\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A6.jpg\",\r\n    shortHint: \"ウ looks like う (u)\",\r\n  },\r\n  エ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%A8.jpg\",\r\n    shortHint:\r\n      \"Imagine this is the girders an <u>e</u>ngineer would use to build buildings\",\r\n  },\r\n  オ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AA.jpg\",\r\n    shortHint:\r\n      'A dude flapping open his trench coat to flash you. \"<u>Oh</u> MY GOD!\" you say. ',\r\n  },\r\n  カ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AB.jpg\",\r\n    shortHint: \"It looks just like the Hiragana か\",\r\n  },\r\n  キ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AD.jpg\",\r\n    shortHint: \"A key (ki)\",\r\n  },\r\n  ク: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%AF.jpg\",\r\n    shortHint: \"A long <u>coo</u>ks's (ku) hat\",\r\n  },\r\n  ケ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B1.jpg\",\r\n    shortHint: \"It looks like the letter <u>K</u> (ke)\",\r\n  },\r\n  コ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B3.jpg\",\r\n    shortHint: \"Two 90 degrees <u>co</u>rners (ko)\",\r\n  },\r\n  サ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B5.jpg\",\r\n    shortHint: \"Three <u>sa</u>rdines stacked on top of each other\",\r\n  },\r\n  シ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B7.jpg\",\r\n    shortHint: \"<u>She</u> has a very werid face (shi)\",\r\n  },\r\n  ス: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%B9.jpg\",\r\n    shortHint: \"A hanger where you hang up your fancy <u>su</u>it (su)\",\r\n  },\r\n  セ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BB.jpg\",\r\n    shortHint: \"It looks like the Hiragana せ\",\r\n  },\r\n  ソ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BD.jpg\",\r\n    shortHint: \"One needle and a long thread which you use to <u>sew</u> (so)\",\r\n  },\r\n  タ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%82%BF.jpg\",\r\n    shortHint: \"A <u>ti</u>dal wave racing across the sea (ta)\",\r\n  },\r\n  チ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%81.jpg\",\r\n    shortHint: \"A <u>chee</u>rleader doing a <u>chee</u>r (chi)\",\r\n  },\r\n  ツ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%84.jpg\",\r\n    shortHint: \"<u>Two</u> (tsu) needles\",\r\n  },\r\n  テ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%86.jpg\",\r\n    shortHint: \"A <u>te</u>lephone pole\",\r\n  },\r\n  ト: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%88.jpg\",\r\n    shortHint: \"A <u>to</u>tem pole\",\r\n  },\r\n  ナ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8A.jpg\",\r\n    shortHint: \"A majestic <u>na</u>rwhal\",\r\n  },\r\n  ニ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8B.jpg\",\r\n    shortHint: \"Two <u>nee</u>dles (ni) laying on their side\",\r\n  },\r\n  ヌ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8C.jpg\",\r\n    shortHint:\r\n      \"The chopsticks are grabbing onto some <u>noo</u>dles & pulling them out of a bowl. (nu)\",\r\n  },\r\n  ネ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8D.jpg\",\r\n    shortHint: \"A <u>ne</u>cromancer has summoned this zombie\",\r\n  },\r\n  ノ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8E.jpg\",\r\n    shortHint: \"A really long <u>no</u>se\",\r\n  },\r\n  ハ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%8F.jpg\",\r\n    shortHint: \"A rice paddy <u>ha</u>t\",\r\n  },\r\n  ヒ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%92.jpg\",\r\n    shortHint: \"<u>He</u> (hi) has no head. <u>He</u> is reaching out to you.\",\r\n  },\r\n  フ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%95.jpg\",\r\n    shortHint: \"A <u>fu</u>nny looking owl\",\r\n  },\r\n  ヘ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%98.jpg\",\r\n    shortHint: \"This looks like the Hiragana へ\",\r\n  },\r\n  ホ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9B.jpg\",\r\n    shortHint: \"A <u>ho</u>ly cross\",\r\n  },\r\n  マ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9E.jpg\",\r\n    shortHint: \"Look at all those angles! Those lengths! All that <u>ma</u>th!\",\r\n  },\r\n  ミ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%9F.jpg\",\r\n    shortHint: \"Three <u>mi</u>ssiles, flying towards you. Be careful!\",\r\n  },\r\n  ム: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A0.jpg\",\r\n    shortHint: \"It is shaped like a pile of poop. Cow poop. <u>Moo</u>. (mu)\",\r\n  },\r\n  メ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A1.jpg\",\r\n    shortHint: 'め <u>Me</u> is Japnese for \"eye\"',\r\n  },\r\n  モ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A2.jpg\",\r\n    shortHint: \"This looks like the Hiragana も\",\r\n  },\r\n  ヤ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A4.jpg\",\r\n    shortHint: \"This looks just like the Hiragana や\",\r\n  },\r\n  ユ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A6.jpg\",\r\n    shortHint: \"You (yu) have a hook for a hand\",\r\n  },\r\n  ヨ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A8.jpg\",\r\n    shortHint: \"A <u>yo</u>gurt containers\",\r\n  },\r\n  ラ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%A9.jpg\",\r\n    shortHint: \"It is a <u>ra</u>ptor wearing sweet <u>ra</u>y-bans\",\r\n  },\r\n  リ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AA.jpg\",\r\n    shortHint: \"It looks like the Hiragana り\",\r\n  },\r\n  ル: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AB.jpg\",\r\n    shortHint:\r\n      \"There are two <u>rou</u>tes (ru) you can take. Route 1 & Route 2.\",\r\n  },\r\n  レ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AC.jpg\",\r\n    shortHint: \"Look at that beautiful <u>re</u>d hair that <u>Re</u>i has!\",\r\n  },\r\n  ロ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AD.jpg\",\r\n    shortHint:\r\n      \"This <u>ro</u>ad goes around in a square, never ending. What a terrible <u>ro</u>ad this is.\",\r\n  },\r\n  ワ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%AF.jpg\",\r\n    shortHint:\r\n      \"You often begin your question with the word <u>wha</u>t (wa). <u>Wha</u>t are you doing?\",\r\n  },\r\n  ヲ: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%B2.jpg\",\r\n    shortHint: \"A dog <u>wo</u>ofing (wo) so hard its tongue is flying out\",\r\n  },\r\n  ン: {\r\n    imageLink:\r\n      \"https://s3.amazonaws.com/image.japanesereading.com/%E3%83%B3.jpg\",\r\n    shortHint: \"This guy only has one eye. <u>N</u>oooo!\",\r\n  },\r\n};\r\n\r\nexport { katakanaToRomaji, katakanaHint };\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../scss/containers/App.scss\";\nimport { Input } from \"@material-ui/core\";\nimport SpellCheckerBuffer from \"../inputChecker\";\nimport { katakanaToRomaji } from \"../jap-char\";\nimport {\n  pressKey,\n  onCorrectChar,\n  onIncorrectChar,\n  typeAnswer,\n  pressSpace,\n  typeWrongAnswer,\n  completeChar,\n  pressEnter,\n  updateChar,\n  updateWord,\n  completeWord,\n  alertRomajiNotInDict,\n  resetRomajiNotInDictAlert,\n} from \"../actions\";\n\nconst mapStatestoProps = (state) => {\n  return {\n    indexCurrentCard: state.changeCardState.indexCurrentCard,\n    romajiList: state.changeCardState.romajiList,\n    cardStateList: state.changeCardState.cardStateList,\n    curWrongChar: state.changeCardState.curWrongChar,\n    onIncorrectCard: state.changeCardState.onIncorrectCard,\n    wordCompleted: state.changeCardState.wordCompleted,\n    onHintedCard: state.changeCardState.onHintedCard,\n    currentRomaji: state.changeCardState.currentRomaji,\n    currentWord: state.changeCardState.currentWord,\n    charTimestamp: state.changeCardState.charTimestamp,\n    audioIsPlaying: state.changeGeneralState.audioIsPlaying,\n    inputBox: state.changeInputBox.inputBox,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onInputBoxChange: (event) => {\n      dispatch(typeAnswer(event.target.value));\n    },\n    onKeyPress: (key) => {\n      dispatch(pressKey(key));\n    },\n    onCorrectChar: () => {\n      dispatch(onCorrectChar());\n    },\n    onIncorrectChar: () => {\n      dispatch(onIncorrectChar());\n    },\n    onSpacePress: (context) => {\n      dispatch(pressSpace(context));\n    },\n    onWrongInput: (userChar, currentChar) => {\n      dispatch(typeWrongAnswer(userChar, currentChar));\n    },\n    onCompleteChar: (time, type) => {\n      dispatch(completeChar(time, type));\n    },\n    onEnterPress: (time) => {\n      dispatch(pressEnter(time));\n    },\n    setCurrentChar: (japchar, romaji) => {\n      dispatch(updateChar(japchar, romaji));\n    },\n    updateWord: (word, romajiList) => {\n      dispatch(updateWord(word, romajiList));\n    },\n    onWordCompletion: () => {\n      dispatch(completeWord());\n    },\n    alertRomajiNotInDict: () => {\n      dispatch(alertRomajiNotInDict());\n    },\n    resetRomajiNotInDictAlert: () => {\n      dispatch(resetRomajiNotInDictAlert());\n    },\n  };\n};\n\nclass CharInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formRef = React.createRef();\n    this.inputChecker = new SpellCheckerBuffer(\n      katakanaToRomaji,\n      this.checkFunction,\n      this.props.alertRomajiNotInDict\n    );\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentChar,\n      romajiList,\n      indexCurrentCard,\n      currentWord,\n    } = this.props;\n\n    const curRomaji = romajiList[indexCurrentCard];\n    const curKana = currentWord[indexCurrentCard];\n    setCurrentChar(curKana, curRomaji);\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.user_uid === prevProps.user_uid) {\n    }\n  };\n\n  convertTimeToScoreDelta = (charTimestamp) => {\n    return charTimestamp.map((item) => {\n      var score_delta = 20000 / item.time;\n      if (item.type === \"hinted\") {\n        score_delta *= -1;\n      }\n      return {\n        char: item.char,\n        score_delta: score_delta,\n        result_type: item.type,\n        result_time: item.time,\n      };\n    });\n  };\n\n  checkFunction = (char) => {\n    const {\n      romajiList,\n      indexCurrentCard,\n      onCorrectChar,\n      onWrongInput,\n      onWordCompletion,\n      currentWord,\n      setCurrentChar,\n      onCompleteChar,\n    } = this.props;\n    if (char === romajiList[indexCurrentCard]) {\n      onCorrectChar();\n      onCompleteChar(Date.now(), \"correct\");\n      const newRomaji = romajiList[indexCurrentCard + 1];\n      const newKana = currentWord[indexCurrentCard + 1];\n      setCurrentChar(newKana, newRomaji);\n      if (indexCurrentCard === romajiList.length - 1) {\n        onWordCompletion();\n      }\n    } else {\n      // onIncorrectChar();\n      onWrongInput(char, romajiList[indexCurrentCard]);\n    }\n  };\n\n  onKeyDown = (event) => {\n    const {\n      onIncorrectCard,\n      curWrongChar,\n      onInputBoxChange,\n      onSpacePress,\n      onCompleteChar,\n      wordCompleted,\n      onHintedCard,\n      currentRomaji,\n      onEnterPress,\n      currentWord,\n      romajiList,\n      indexCurrentCard,\n      setCurrentChar,\n      charTimestamp,\n      updateWord,\n      updateCharScore,\n      updateWordScore,\n      onWordCompletion,\n      audioIsPlaying,\n      user_uid,\n      cardStateList,\n      resetRomajiNotInDictAlert,\n    } = this.props;\n\n    // disable input\n    if (audioIsPlaying) {\n      event.preventDefault();\n      return;\n    }\n\n    if (wordCompleted) {\n      event.preventDefault();\n    }\n    var lastCardState = cardStateList[cardStateList.length - 1];\n\n    if (\n      indexCurrentCard === romajiList.length - 1 &&\n      (lastCardState === \"correct\" || lastCardState === \"hinted\")\n    ) {\n      onWordCompletion();\n    }\n\n    // keycode 65 to 90 represents a-z\n    if (\n      ((event.which >= 65 && event.which <= 90) || event.which === 222) &&\n      !onIncorrectCard &&\n      !wordCompleted &&\n      !onHintedCard\n    ) {\n      var key =\n        event.which === 222\n          ? \"'\"\n          : String.fromCharCode(event.which).toLowerCase();\n      this.props.onKeyPress(key);\n      this.inputChecker.checkInput(key);\n    } else {\n      event.preventDefault();\n\n      // handle SPACE press\n      if (event.which === 32) {\n        if (onIncorrectCard) {\n          // delete wrong input from inputBox\n          event.target.value = event.target.value.slice(\n            0,\n            -curWrongChar.length\n          );\n          onInputBoxChange(event);\n          onSpacePress(\"CONTINUE_AFTER_ERROR\");\n          resetRomajiNotInDictAlert();\n        } else if (!onIncorrectCard && !onHintedCard && !wordCompleted) {\n          // ask for hint\n          onSpacePress(\"REQUEST_HINT\");\n          onCompleteChar(Date.now(), \"hinted\");\n\n          // clear inputBox\n          event.target.value = this.inputChecker.buffer.length\n            ? event.target.value.slice(0, -this.inputChecker.buffer.length)\n            : event.target.value;\n          onInputBoxChange(event);\n\n          // clear inputChecker buffer\n          this.inputChecker.checkInput(\"clearBuffer\");\n        } else if (wordCompleted) {\n          // move on to next word\n          updateWord(\"\", [\"\"]);\n          const scoreDeltaList = this.convertTimeToScoreDelta(charTimestamp);\n          updateCharScore(user_uid, scoreDeltaList);\n          updateWordScore(user_uid, currentWord);\n\n          onSpacePress(\"CONTINUE_AFTER_COMPLETE\");\n\n          event.target.value = \"\";\n          onInputBoxChange(event);\n          const newRomaji = romajiList[0];\n          const newKana = currentWord[0];\n          setCurrentChar(newKana, newRomaji);\n        }\n      }\n\n      // handle ENTER press\n      if (event.which === 13) {\n        if (onHintedCard) {\n          if (indexCurrentCard === romajiList.length - 1) {\n            onWordCompletion();\n          }\n          // autofill correct answer\n          event.target.value = event.target.value.concat(currentRomaji);\n          onInputBoxChange(event);\n          onEnterPress(Date.now());\n\n          const curRomaji = romajiList[indexCurrentCard + 1];\n          const curKana = currentWord[indexCurrentCard + 1];\n          setCurrentChar(curKana, curRomaji);\n        }\n      }\n    }\n  };\n\n  render() {\n    return (\n      <form>\n        <Input\n          placeholder=\"Type here if you know it\"\n          defaultValue={this.props.inputBox}\n          inputProps={{ \"aria-label\": \"description\" }}\n          onChange={this.props.onInputBoxChange}\n          onKeyDown={this.onKeyDown}\n          spellCheck={false}\n          autoFocus\n          inputRef={this.formRef}\n          onPaste={(event) => {\n            event.preventDefault();\n          }}\n        />\n      </form>\n    );\n  }\n}\n\nexport default connect(mapStatestoProps, mapDispatchToProps, null, {\n  forwardRef: true,\n})(CharInput);\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"../scss/components/NavBar.scss\";\n\n// make help dialog\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\n// icons\nimport ExitToAppOutlinedIcon from \"@material-ui/icons/ExitToAppOutlined\";\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\nimport AssessmentOutlinedIcon from \"@material-ui/icons/AssessmentOutlined\";\nimport HelpOutlineOutlinedIcon from \"@material-ui/icons/HelpOutlineOutlined\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst NavBar = ({ onRouteChange, currentTab }) => {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            color=\"secondary\"\n            className={classes.title}\n            align=\"left\"\n          >\n            <div className=\"navbar-title\">Japanese vs. English words</div>\n          </Typography>\n          <Button\n            variant=\"text\"\n            color=\"secondary\"\n            onClick={handleClickOpen}\n            startIcon={<HelpOutlineOutlinedIcon />}\n          >\n            <div className=\"navbar-button-text\">Help</div>\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Instruction\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <p>\n                  In this app, you will learn Japanese Katakana alphabet. At\n                  each iteration, the app will display all the Katakana\n                  characters that make up a certain Japanese word.\n                </p>\n                <p>If you know the katakana, simply type romaji </p>\n                <p>If you don't know it, press SPACE to learn the romaji. </p>\n                <p>If your input is incorrect, press SPACE to retry.</p>\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\" autoFocus>\n                Close\n              </Button>\n            </DialogActions>\n          </Dialog>\n          <Button\n            variant={currentTab === \"home\" ? \"outlined\" : \"text\"}\n            color=\"secondary\"\n            onClick={() => onRouteChange(\"home\")}\n            startIcon={<HomeOutlinedIcon />}\n          >\n            <div className=\"navbar-button-text\">Home</div>\n          </Button>\n          <Button\n            variant={currentTab === \"progress\" ? \"outlined\" : \"text\"}\n            color=\"secondary\"\n            onClick={() => onRouteChange(\"progress\")}\n            startIcon={<AssessmentOutlinedIcon />}\n          >\n            <div className=\"navbar-button-text\">Progress</div>\n          </Button>\n          <Button\n            color=\"secondary\"\n            variant={currentTab === \"signout\" ? \"outlined\" : \"text\"}\n            onClick={() => onRouteChange(\"signin\")}\n            className=\"nav-button\"\n            startIcon={<ExitToAppOutlinedIcon />}\n          >\n            <div className=\"navbar-button-text\">Signout</div>\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\nexport default NavBar;\n","// Taken from this https://stackoverflow.com/questions/47686345/playing-sound-in-reactjs\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { onAudioPlay, onAudioPause } from \"../actions\";\r\nimport \"../scss/components/Music.scss\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    audioIsPlaying: state.changeGeneralState.audioIsPlaying,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAudioPlay: () => {\r\n      dispatch(onAudioPlay());\r\n    },\r\n    onAudioPause: () => {\r\n      dispatch(onAudioPause());\r\n    },\r\n  };\r\n};\r\n\r\nclass Music extends React.Component {\r\n  state = {\r\n    play: false,\r\n    audio: new Audio(this.props.audioLink),\r\n  };\r\n\r\n  stopAudioHandler = () => {\r\n    this.setState({ play: false });\r\n    if (!this.props.noStoreUpdateWhenEnded) {\r\n      this.props.onAudioPause();\r\n    }\r\n  };\r\n\r\n  simpleStopAudioHandler = () => {\r\n    this.setState({ play: false });\r\n    this.props.onAudioPause();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.state.audio.addEventListener(\"ended\", this.stopAudioHandler);\r\n    setTimeout(() => {\r\n      this.state.audio.play();\r\n      this.props.onAudioPlay();\r\n    }, this.props.delay);\r\n  }\r\n\r\n  componentDidUpdate = (prevProps) => {\r\n    if (prevProps.audioLink !== this.props.audioLink) {\r\n      var newAudio = new Audio(this.props.audioLink);\r\n      newAudio.addEventListener(\"ended\", this.stopAudioHandler);\r\n      this.setState({ audio: newAudio });\r\n      setTimeout(() => {\r\n        this.state.audio.play();\r\n        this.props.onAudioPlay();\r\n      }, this.props.delay);\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.state.audio.removeEventListener(\"ended\", this.stopAudioHandler);\r\n    this.state.audio.removeEventListener(\"ended\", this.simpleStopAudioHandler);\r\n    this.props.onAudioPause();\r\n  }\r\n\r\n  togglePlay = () => {\r\n    this.setState({ play: !this.state.play }, () => {\r\n      if (this.state.play) {\r\n        this.state.audio.play();\r\n        this.props.onAudioPlay();\r\n\r\n        // this is a wacky way of doing it, but basically I'm replacing the \"ended\" event listener\r\n        this.state.audio.removeEventListener(\"ended\", this.stopAudioHandler);\r\n        this.state.audio.removeEventListener(\r\n          \"ended\",\r\n          this.simpleStopAudioHandler\r\n        );\r\n        this.state.audio.addEventListener(\"ended\", this.simpleStopAudioHandler);\r\n      } else {\r\n        this.state.audio.pause();\r\n        this.props.onAudioPause();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={this.togglePlay}\r\n          className=\"music-button\"\r\n        >\r\n          <div className=\"button-text\">\r\n            {this.state.play ? \"Pause Audio\" : \"Play Audio\"}\r\n          </div>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Music);\r\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Music from \"./Music\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { katakanaToRomaji, katakanaHint } from \"../jap-char\";\nimport { MEDIA_BASE_URL_CHAR } from \"../constants\";\nimport \"../scss/components/Hint.scss\";\n\nconst parseoutUnderlineText = (sentence) => {\n  // replace <b> and </b> with comma\n  sentence = sentence.replace(/<\\/?u>/g, \",\");\n  return sentence.split(\",\");\n};\n\nclass Hint extends React.Component {\n  render() {\n    const romaji = katakanaToRomaji[this.props.currentHintedChar];\n    const sentenceFragments = parseoutUnderlineText(\n      katakanaHint[this.props.currentHintedChar].shortHint\n    );\n    const modified_romaji = romaji === \"n'\" ? \"n\" : romaji;\n    const audioLink = MEDIA_BASE_URL_CHAR + modified_romaji + \".mp3\";\n\n    return (\n      <Card className={`hint-card`} onClick={this.onClickHandler}>\n        <div className=\"hint-card-content\">\n          <h3 className=\"hint-card-romaji\">{romaji}</h3>\n          <Divider />\n          <div>\n            <img\n              src={`${katakanaHint[this.props.currentHintedChar].imageLink}`}\n              className={`hint-card-image`}\n              alt=\"Hint Card\"\n            />\n          </div>\n          <CardContent style={{ paddingTop: 0, paddingBottom: 0 }}>\n            <Typography variant=\"body2\" component=\"p\">\n              <div className=\"hint-text\">\n                {sentenceFragments[0]}\n                <u>{sentenceFragments[1]}</u>\n                {sentenceFragments[2]}\n              </div>\n            </Typography>\n            <Music\n              audioLink={audioLink}\n              delay={0}\n              noStoreUpdateWhenEnded={false}\n            />\n          </CardContent>\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default Hint;\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { SIGNIN_URL } from \"../constants\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport \"../scss/components/Signin.scss\";\r\n\r\nconst useStyles = (theme) => ({\r\n  container: {\r\n    fontFamily: \"Roboto\",\r\n    backfround: \"white\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(6),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper2: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 500,\r\n      height: 450,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\",\r\n      emailErrorMsg: \"\",\r\n      passwordErrorMsg: \"\",\r\n    };\r\n  }\r\n\r\n  onEmailInput = (event) => {\r\n    this.setState({ signInEmail: event.target.value, emailErrorMsg: \"\" });\r\n  };\r\n\r\n  onPasswordInput = (event) => {\r\n    this.setState({ signInPassword: event.target.value, passwordErrorMsg: \"\" });\r\n  };\r\n\r\n  sendSigninInfoToBackend = () => {\r\n    const { signInEmail, signInPassword } = this.state;\r\n\r\n    fetch(SIGNIN_URL, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: signInEmail,\r\n        password: signInPassword,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (Object.keys(data).length === 4) {\r\n          this.props.loadUser(data);\r\n          this.props.onRouteChange(\"home\");\r\n          this.setState({\r\n            emailErrorMsg: \"\",\r\n            passwordErrorMsg: \"\",\r\n          });\r\n        } else {\r\n          // there is an error loggin in\r\n          console.log(\"Login Failed\", data);\r\n          if (data === \"email is not yet registered\") {\r\n            this.setState({ emailErrorMsg: data });\r\n          } else if (data === \"incorrect password\") {\r\n            this.setState({\r\n              passwordErrorMsg: data,\r\n              emailErrorMsg: \"\",\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error!\", error);\r\n      });\r\n  };\r\n\r\n  onSignIn = (event) => {\r\n    event.preventDefault();\r\n    const { signInEmail, signInPassword } = this.state;\r\n\r\n    // check that fields are not empty\r\n    if (!signInEmail) {\r\n      this.setState({ emailErrorMsg: \"please fill out your email\" });\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n    if (!signInPassword) {\r\n      this.setState({ passwordErrorMsg: \"please fill out your password\" });\r\n    } else {\r\n      this.setState({ passwordErrorMsg: \"\" });\r\n    }\r\n\r\n    if (signInEmail && signInPassword) {\r\n      this.sendSigninInfoToBackend();\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className=\"flex-container\">\r\n        <div className=\"signin-box\">\r\n          <div className=\"header\">\r\n            <h1 className=\"title\">JapanEZ</h1>\r\n            <p className=\"subtitle\">\r\n              Learn Japanese Katakana as you explore English-like Japanese words\r\n            </p>\r\n          </div>\r\n          <div className=\"signin\">\r\n            <Paper className={classes.paper2} elevation={3}>\r\n              <Container\r\n                component=\"main\"\r\n                maxWidth=\"xs\"\r\n                className={classes.container}\r\n              >\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                  <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                  </Typography>\r\n                  <form className={classes.form} noValidate>\r\n                    <TextField\r\n                      error={this.state.emailErrorMsg}\r\n                      helperText={this.state.emailErrorMsg}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                      // autoFocus\r\n                      onChange={this.onEmailInput}\r\n                    />\r\n                    <TextField\r\n                      error={this.state.passwordErrorMsg}\r\n                      helperText={this.state.passwordErrorMsg}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      autoComplete=\"current-password\"\r\n                      onChange={this.onPasswordInput}\r\n                    />\r\n                    <FormControlLabel\r\n                      control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                      label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                      type=\"submit\"\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                      onClick={this.onSignIn}\r\n                      style={{ color: \"white\" }}\r\n                    >\r\n                      Sign In\r\n                    </Button>\r\n                    <Grid\r\n                      container\r\n                      alignItems=\"center\"\r\n                      direction=\"column\"\r\n                      justify=\"center\"\r\n                    >\r\n                      {/* <Grid item xs>\r\n                        <Link href=\"#\" variant=\"body2\">\r\n                          {\"Forgot password?\"}\r\n                        </Link>\r\n                      </Grid> */}\r\n                      <Grid item>\r\n                        {\"Don't have an account? \"}\r\n                        <Link\r\n                          component=\"button\"\r\n                          variant=\"body2\"\r\n                          onClick={() => this.props.onRouteChange(\"register\")}\r\n                        >\r\n                          {\"Sign Up\"}\r\n                        </Link>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </form>\r\n                </div>\r\n              </Container>\r\n            </Paper>\r\n          </div>\r\n        </div>\r\n        <div className=\"info-panel\">\r\n          <div className=\"flex-container-inner\">\r\n            <div>\r\n              <h2>Tailored to your learning progress</h2>\r\n              <p>\r\n                Assesses your progress as you use the tool, and gives you the\r\n                right content to learn.{\" \"}\r\n              </p>\r\n              <p>\r\n                Either you've just started out or you've been learning for a\r\n                while, the tool helps you master Katakana in an effective way.\r\n              </p>\r\n            </div>\r\n            <Divider />\r\n            <div>\r\n              <h2>Built-in mnemonics and smart feedback</h2>\r\n              <p>Built-in mnemonics and smart feedback</p>\r\n              <p>\r\n                Receive contextual feedback when you input the wrong character.\r\n              </p>\r\n            </div>\r\n            <Divider />\r\n            <div>\r\n              <h2>Words that sound like English</h2>\r\n              <p>Such as kisu (kiss), in'teru (intelligent).</p>\r\n              <p>\r\n                You'd be surprised how much Japanese you've already \"known\".\r\n              </p>\r\n            </div>\r\n            <Divider />\r\n            <div>\r\n              <h2>Learn real common Japanese words</h2>\r\n              <p>You can listen to audio from native speakers.</p>\r\n              <p>\r\n                This helps you compare and contrast the pronunciation of\r\n                Japanese and English.\r\n              </p>\r\n              <p>You can also see and hear how a word appears in a sentence.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Signin);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { REGISTER_URL } from \"../constants\";\r\nimport \"../scss/components/Signin.scss\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst useStyles = (theme) => ({\r\n  container: {\r\n    fontFamily: \"Roboto\",\r\n    backfround: \"white\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(5),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper2: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 500,\r\n      height: 450,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      nameError: false,\r\n      emailError: false,\r\n      passwordError: false,\r\n      nameErrorMsg: \"\",\r\n      emailErrorMsg: \"\",\r\n      passwordErrorMsg: \"\",\r\n    };\r\n  }\r\n\r\n  validateEmail(email) {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  onNameInput = (event) => {\r\n    this.setState({ name: event.target.value, nameErrorMsg: \"\" });\r\n  };\r\n\r\n  onEmailInput = (event) => {\r\n    this.setState({ email: event.target.value, emailErrorMsg: \"\" });\r\n  };\r\n\r\n  onPasswordInput = (event) => {\r\n    this.setState({ password: event.target.value, passwordErrorMsg: \"\" });\r\n  };\r\n\r\n  sendFormDataToBackEnd = () => {\r\n    const { name, email, password } = this.state;\r\n\r\n    fetch(REGISTER_URL, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (Object.keys(data).length === 4) {\r\n          this.setState({ emailErrorMsg: \"\" });\r\n          this.props.loadUser(data);\r\n          this.props.onRouteChange(\"home\");\r\n        } else {\r\n          // if user already exist\r\n          this.setState({ emailErrorMsg: data });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error!\", error);\r\n      });\r\n  };\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { name, email, password } = this.state;\r\n\r\n    if (!name) {\r\n      this.setState({ nameErrorMsg: \"please fill out your name\" });\r\n    } else {\r\n      this.setState({ nameErrorMsg: \"\" });\r\n    }\r\n    if (!email) {\r\n      this.setState({ emailErrorMsg: \"please fill out your email\" });\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n    if (!password) {\r\n      this.setState({ passwordErrorMsg: \"please fill out your password\" });\r\n    } else {\r\n      this.setState({ passwordErrorMsg: \"\" });\r\n    }\r\n\r\n    if (!this.validateEmail(email)) {\r\n      this.setState({ emailErrorMsg: \"please enter a valid email address\" });\r\n      return;\r\n    } else {\r\n      this.setState({ emailErrorMsg: \"\" });\r\n    }\r\n\r\n    if (name && password && email) {\r\n      this.sendFormDataToBackEnd();\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { nameErrorMsg, emailErrorMsg, passwordErrorMsg } = this.state;\r\n    return (\r\n      <div className=\"flex-container\">\r\n        <div className=\"signin-box\">\r\n          <div className=\"header\">\r\n            <h1 className=\"title\">JapanEZ</h1>\r\n            <p className=\"subtitle\">\r\n              Learn Japanese Katakana as you explore English-like Japanese words\r\n            </p>\r\n          </div>\r\n          <div className=\"signin\">\r\n            <Paper className={classes.paper2}>\r\n              <Container\r\n                component=\"main\"\r\n                maxWidth=\"xs\"\r\n                className={classes.container}\r\n              >\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                  <Typography component=\"h1\" variant=\"h5\">\r\n                    Register\r\n                  </Typography>\r\n                  <form className={classes.form} noValidate>\r\n                    <TextField\r\n                      error={nameErrorMsg}\r\n                      helperText={nameErrorMsg}\r\n                      variant=\"outlined\"\r\n                      id=\"name\"\r\n                      label=\"Your Name\"\r\n                      // autoFocus\r\n                      fullWidth\r\n                      onChange={this.onNameInput}\r\n                    />\r\n                    <TextField\r\n                      error={emailErrorMsg}\r\n                      helperText={emailErrorMsg}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                      onChange={this.onEmailInput}\r\n                    />\r\n                    <TextField\r\n                      error={passwordErrorMsg}\r\n                      helperText={passwordErrorMsg}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      autoComplete=\"current-password\"\r\n                      onChange={this.onPasswordInput}\r\n                    />\r\n                    <Button\r\n                      type=\"submit\"\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                      onClick={this.onFormSubmit}\r\n                      style={{ color: \"#ffffff\" }}\r\n                    >\r\n                      Register\r\n                    </Button>\r\n                    <Grid\r\n                      container\r\n                      alignItems=\"center\"\r\n                      direction=\"column\"\r\n                      justify=\"center\"\r\n                    >\r\n                      <Grid item>\r\n                        {\"Already registered? \"}\r\n                        <Link\r\n                          component=\"button\"\r\n                          variant=\"body2\"\r\n                          onClick={() => this.props.onRouteChange(\"signin\")}\r\n                        >\r\n                          {\"Sign In\"}\r\n                        </Link>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </form>\r\n                </div>\r\n              </Container>\r\n            </Paper>\r\n          </div>\r\n        </div>\r\n        <div className=\"info-panel\">\r\n          <div className=\"flex-container-inner\">\r\n            <div>\r\n              <h2>Tailored to your learning progress</h2>\r\n              <p>\r\n                Assesses your progress as you use the tool, and gives you the\r\n                right content to learn. Either you've just started out or you've\r\n                been learning for a while, the tool helps you master Katakana in\r\n                an effective way.\r\n              </p>\r\n            </div>\r\n            <Divider />\r\n            <div>\r\n              <h2>Built-in mnemonics and smart feedback</h2>\r\n              <p>Built-in mnemonics and smart feedback</p>\r\n              <p>\r\n                Receive contextual feedback when you input the wrong character.\r\n              </p>\r\n            </div>\r\n            <Divider />\r\n            <div>\r\n              <h2>Words that sound like English</h2>\r\n              <p>\r\n                Such as kisu (kiss), in'teru (intelligent). You'd be surprised\r\n                how much Japanese you've already \"known\".\r\n              </p>\r\n            </div>\r\n            <Divider />\r\n            <div>\r\n              <h2>Learn real common Japanese words</h2>\r\n              <p>\r\n                You can listen to audio from native speakers. This helps you\r\n                compare and contrast the pronunciation of Japanese and English.\r\n                You can also see and hear how a word appears in a sentence.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Register);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Music from \"./Music\";\r\nimport { MEDIA_BASE_URL_SENTENCE, MEDIA_BASE_URL_WORD } from \"../constants\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport \"../scss/components/WordCard.scss\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nconst parseoutBoldText = (sentence) => {\r\n  // replace <b> and </b> with comma\r\n  sentence = sentence.replace(/<\\/?b>/g, \",\");\r\n  return sentence.split(\",\");\r\n};\r\n\r\nexport default function OutlinedCard({ wordInfo, word_audio_duration }) {\r\n  const classes = useStyles();\r\n\r\n  var el = document.createElement(\"html\");\r\n  el.innerHTML = \"<b>bolded text</b>\";\r\n  const sentenceSegments = parseoutBoldText(wordInfo.sentence_expression);\r\n\r\n  const parseAudio = (audio_string) => {\r\n    return audio_string.slice(7, audio_string.length - 1);\r\n  };\r\n\r\n  return (\r\n    <Card className={`${classes.root} word-card `}>\r\n      <CardContent>\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          <div className=\"wordcard-subtext\">Word Meaning</div>\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          <div className=\"wordcard-text\">\r\n            {wordInfo.vocab_meaning} ({wordInfo.vocab_pos})\r\n          </div>\r\n        </Typography>\r\n        <Music\r\n          audioLink={`${MEDIA_BASE_URL_WORD}${parseAudio(\r\n            wordInfo.vocab_sound_local\r\n          )}`}\r\n          delay={0}\r\n          noStoreUpdateWhenEnded={true}\r\n        />\r\n        <Divider style={{ marginTop: \"calc(5px + 0.5vh)\" }} />\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          <div className=\"wordcard-subtext\">Sample Sentence</div>\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          <div className=\"wordcard-text\">\r\n            {sentenceSegments[0]}\r\n            <b className=\"vocab-word\">{sentenceSegments[1]}</b>\r\n            {sentenceSegments[2]}\r\n          </div>\r\n        </Typography>\r\n        <Music\r\n          audioLink={`${MEDIA_BASE_URL_SENTENCE}${parseAudio(\r\n            wordInfo.sentence_sound_local\r\n          )}`}\r\n          delay={word_audio_duration * 1000 + 750}\r\n          noStoreUpdateWhenEnded={false}\r\n        />\r\n        <Divider style={{ marginTop: \"calc(5px + 0.5vh)\" }} />\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          <div className=\"wordcard-subtext\">Sentence Meaning</div>\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          <div style={{ fontSize: \"calc(12px + 0.4vh)\" }}>\r\n            {wordInfo.sentence_meaning}\r\n          </div>\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","// https://stackoverflow.com/questions/32553158/detect-click-outside-react-component\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { isCompositeComponent } from \"react-dom/test-utils\";\r\n\r\nclass OutsideAlerter extends React.Component {\r\n  componentDidMount = () => {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  };\r\n\r\n  setWrapperRef = (node) => {\r\n    // console.log(\"setWrapperRef\", node);\r\n    // console.log(\"this\", this);\r\n    this.wrapperRef = node;\r\n  };\r\n\r\n  handleClickOutside = (event) => {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      // for some reason, need setTimeout to work, even if 0 delay\r\n      setTimeout(() => {\r\n        this.props.focusInputBox();\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <div ref={this.setWrapperRef}>{this.props.children}</div>;\r\n  }\r\n}\r\n\r\nOutsideAlerter.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default OutsideAlerter;\r\n","import React from \"react\";\r\nimport \"../scss/components/Footer.scss\";\r\nimport { TOFUGU_LINK, WORD_LINK } from \"../constants\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"main-footer\">\r\n      <div>\r\n        <p>\r\n          Mnemonics taken from <a href={TOFUGU_LINK}>tofugu.com</a>\r\n        </p>\r\n        <p>\r\n          Japanese words taken from{\" \"}\r\n          <a href={WORD_LINK}>reddit.com/r/LearnJapanese</a>\r\n        </p>\r\n      </div>\r\n      <hr />\r\n      <div className=\"copyright\">\r\n        <small>Copyright © 2020 Tuan Le, Lien Tran. All Rights Reserved.</small>\r\n      </div>\r\n\r\n      {/* uncomment below for 2nd layout */}\r\n      {/* <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <ul className=\"list-unstyled\">\r\n              <li>\r\n                Mnemonics taken from <a href={TOFUGU_LINK}>tofugu.com</a>\r\n              </li>\r\n              <li>\r\n                Japanese words taken from{\" \"}\r\n                <a href={WORD_LINK}>reddit.com/r/LearnJapanese</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col copyright\">\r\n            <small>\r\n              Copyright © 2020 Tuan Le, Lien Tran. All Rights Reserved\r\n            </small>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport \"../scss/components/WelcomeBar.scss\";\r\n\r\nconst WelcomeBar = ({ userName }) => {\r\n  return (\r\n    <div className=\"container\" style={{ color: \"#5D5D5D\" }}>\r\n      <Paper elevation={0} />\r\n      <div className=\"welcome-text\">\r\n        <p>Welcome, {userName}! </p>\r\n        <ul>\r\n          <li>Press SPACE to learn the character in the highlighted card</li>\r\n          <li>\r\n            Type the character as fast as you can if you've already known the\r\n            character\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomeBar;\r\n","import React from \"react\";\r\nimport \"../scss/components/SmallChar.scss\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// links below shows how to transition between gradient background\r\n// https://medium.com/@dave_lunny/animating-css-gradients-using-only-css-d2fd7671e759\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  cardBG: {\r\n    background: (props) => {\r\n      return props.correctPercent === 0 && props.hintedPercent === 0\r\n        ? \"#d6d6d6\"\r\n        : `linear-gradient(0deg, green 0% ${props.correctPercent}%, #f2b50c ${props.correctPercent}% ${props.hintedPercent}%)`;\r\n    },\r\n  },\r\n}));\r\n\r\nfunction SmallChar(props) {\r\n  const { char, correctNum, hintedNum } = props;\r\n  const classes = useStyles(props);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <div className={`noselect flipcard`} id={id} onClick={handleClick}>\r\n        <div className=\"flipcard-content\">\r\n          <div className={`flipcard-front ${classes.cardBG}`}>\r\n            <span>\r\n              <b>{char}</b>\r\n            </span>\r\n          </div>\r\n          <div className=\"flipcard-back\">\r\n            <p>\r\n              {correctNum} <span className=\"dot correct-color\"></span>\r\n            </p>\r\n            <p>\r\n              {hintedNum} <span className=\"dot hinted-color\"></span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <Typography className={classes.typography}>\r\n          {`${correctNum} correct, ${hintedNum} hinted`}\r\n        </Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SmallChar;\r\n","import React from \"react\";\r\nimport SmallChar from \"../components/SmallChar.js\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { katakanaToRomaji } from \"../jap-char\";\r\nimport { GETCHARSCORE_URL } from \"../constants\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport \"../scss/components/SmallChar.scss\";\r\n\r\nclass SmallCharList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      charResultList: {},\r\n    };\r\n  }\r\n\r\n  requestGetCharScore = () => {\r\n    fetch(GETCHARSCORE_URL, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_uid: this.props.user_uid,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((charResultList) => {\r\n        this.setState({ charResultList: charResultList });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error in getting characters' familiarity\", err);\r\n      });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.requestGetCharScore();\r\n  };\r\n\r\n  computeCorrectPercentage = (resultList) => {\r\n    var total_correct = 0;\r\n    if (resultList.length === 0) {\r\n      return -1;\r\n    }\r\n    resultList.forEach((result) => {\r\n      if (result === \"correct\") total_correct += 1;\r\n    });\r\n    return Math.round((total_correct / resultList.length) * 100);\r\n  };\r\n\r\n  computeCorrectNum = (resultList) => {\r\n    return resultList.length === 0\r\n      ? 0\r\n      : resultList.reduce((acc, val) => {\r\n          if (val === \"correct\") {\r\n            acc += 1;\r\n          }\r\n          return acc;\r\n        }, 0);\r\n  };\r\n\r\n  render() {\r\n    if (Object.keys(this.state.charResultList).length === 0) {\r\n      return (\r\n        <div>\r\n          <div>Fetching Data...</div>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n    const charsArrayDisplay = Object.keys(katakanaToRomaji).map((kana, idx) => {\r\n      if (kana !== \"clearBuffer\") {\r\n        var correctPercentage = 0;\r\n        var hintedPercentage = 0;\r\n        var correctNum = this.computeCorrectNum(\r\n          this.state.charResultList[kana]\r\n        );\r\n        var hintedNum = this.state.charResultList[kana].length - correctNum;\r\n\r\n        if (Object.keys(this.state.charResultList).length > 0) {\r\n          correctPercentage = this.computeCorrectPercentage(\r\n            this.state.charResultList[kana]\r\n          );\r\n          hintedPercentage = 100 - correctPercentage;\r\n          if (correctPercentage === -1) {\r\n            correctPercentage = 0;\r\n            hintedPercentage = 0;\r\n          }\r\n        }\r\n        return (\r\n          <Grid item key={idx}>\r\n            <SmallChar\r\n              char={kana}\r\n              key={idx}\r\n              hintedPercent={hintedPercentage}\r\n              correctPercent={correctPercentage}\r\n              correctNum={correctNum}\r\n              hintedNum={hintedNum}\r\n            />\r\n          </Grid>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className=\"characters-list\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing=\"2\"\r\n        >\r\n          {charsArrayDisplay}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SmallCharList;\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CharList from \"./CharList\";\nimport CharInput from \"./CharInput\";\nimport NavBar from \"../components/NavBar\";\nimport Hint from \"../components/Hint\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { katakanaToRomaji } from \"../jap-char\";\nimport Signin from \"../components/Signin\";\nimport Register from \"../components/Register\";\nimport WordCard from \"../components/WordCard\";\nimport OutsideAlerter from \"../components/OutsideAlerter\";\nimport Footer from \"../components/Footer\";\nimport WelcomeBar from \"../components/WelcomeBar\";\nimport SmallCharList from \"../components/SmallCharList\";\nimport \"../scss/containers/App.scss\";\nimport { updateChar, updateWord, resetStore } from \"../actions\";\nimport {\n  GETWORD_URL,\n  CHARSCORE_URL,\n  WORDSCORE_URL,\n  MEDIA_BASE_URL_WORD,\n} from \"../constants\";\n\nimport LogRocket from \"logrocket\";\nLogRocket.init(\"zskhtw/japanese-learning\");\n\nconst mapStateToProps = (state) => {\n  return {\n    currentJapChar: state.changeCardState.currentJapChar,\n    onIncorrectCard: state.changeCardState.onIncorrectCard,\n    curWrongChar: state.changeCardState.curWrongChar,\n    onHintedCard: state.changeCardState.onHintedCard,\n    wordCompleted: state.changeCardState.wordCompleted,\n    currentWord: state.changeCardState.currentWord,\n    charTimestamp: state.changeCardState.charTimestamp,\n    audioIsPlaying: state.changeGeneralState.audioIsPlaying,\n    indexCurrentCard: state.changeCardState.indexCurrentCard,\n    romajiNotInDict: state.changeInputBox.romajiNotInDict,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCurrentChar: (japchar, romaji) => {\n      dispatch(updateChar(japchar, romaji));\n    },\n    updateWord: (word, romajiList) => {\n      dispatch(updateWord(word, romajiList));\n    },\n    resetStore: () => {\n      dispatch(resetStore());\n    },\n  };\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: \"signin\",\n      userInfo: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        joined: \"\",\n      },\n      currentWordInfo: null,\n    };\n    this.charInputRef = React.createRef();\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (this.state.userInfo.id !== prevState.userInfo.id) {\n      this.props.resetStore();\n      this.requestNewWord();\n    }\n  };\n\n  onRouteChange = (route) => {\n    this.setState({ route: route });\n  };\n\n  parseJapaneseWord = (word) => {\n    var charsToRead = [];\n    for (const c of word) {\n      var c_romaji = katakanaToRomaji[c] || \"??\";\n      charsToRead.push({ char: c, romaji: c_romaji });\n    }\n    return charsToRead;\n  };\n\n  convertTimeToScoreDelta = (charTimestamp) => {\n    return charTimestamp.map((item) => {\n      var score_delta = 20000 / item.time;\n      if (item.type === \"hinted\") {\n        score_delta *= -1;\n      }\n      return {\n        char: item.char,\n        score_delta: score_delta,\n      };\n    });\n  };\n\n  updateCharScore = (user_uid, scoreDeltaList) => {\n    fetch(CHARSCORE_URL, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_uid: user_uid,\n        charScoreDeltaList: scoreDeltaList,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"Update Char Score:\", data);\n      })\n      .catch((error) => {\n        console.log(\"Failed to update char score\", error);\n      });\n  };\n\n  updateWordScore = (user_uid, word) => {\n    fetch(WORDSCORE_URL, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_uid: user_uid,\n        word: word,\n        unix_time: this.state.currentWord_unix_time,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"Update Word Score:\", data);\n        // once score is updated, request new word\n        this.requestNewWord();\n      })\n      .catch((error) => {\n        console.log(\"Failed to update word score\", error);\n      });\n  };\n\n  parseAudio = (audio_string) => {\n    return audio_string.slice(7, audio_string.length - 1);\n  };\n\n  requestNewWord = () => {\n    const { setCurrentChar, updateWord } = this.props;\n    var romajiList = [];\n    this.setState({ clickedJapChar: \"\" });\n\n    fetch(GETWORD_URL, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_uid: this.state.userInfo.id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((word) => {\n        var unix_time = Date.now();\n        romajiList = this.parseJapaneseWord(word.vocab_kana).map(\n          (item) => item.romaji\n        );\n        updateWord(word.vocab_kana, romajiList);\n        const curRomaji = romajiList[0];\n        const curKana = word.vocab_kana.charAt(0);\n        setCurrentChar(curKana, curRomaji);\n\n        this.setState({ currentWordInfo: word });\n        this.setState({ currentWord_unix_time: unix_time });\n        const word_audio = new Audio(\n          `${MEDIA_BASE_URL_WORD}${this.parseAudio(word.vocab_sound_local)}`\n        );\n        word_audio.addEventListener(\"loadedmetadata\", (event) => {\n          this.setState({\n            word_audio_duration: event.target.duration,\n          });\n        });\n      })\n      .catch((err) => {\n        console.log(\"Error in getting next word\", err);\n      });\n  };\n\n  loadUser = (user) => {\n    const { user_uid, name, email, joined } = user;\n    this.setState((prevState) => {\n      let userInfo = { ...prevState.userInfo };\n      userInfo.name = name;\n      userInfo.id = user_uid;\n      userInfo.email = email;\n      userInfo.joined = joined;\n      return { userInfo };\n    });\n    console.log(\"userInfo\", this.state.userInfo);\n    LogRocket.identify(user_uid, {\n      name: name,\n      email: email,\n      joined: joined,\n    });\n  };\n\n  focusInputBox = () => {\n    this.charInputRef.current.formRef.current.focus();\n  };\n\n  onClickCard = (event) => {\n    const kana = event.target.innerText;\n    this.setState({ clickedJapChar: kana });\n\n    // unclick\n    if (this.state.clickedJapChar === kana) {\n      this.setState({ clickedJapChar: \"\" });\n    }\n  };\n\n  showHint = () => {\n    // once completed word, can review hint card\n    if (this.props.wordCompleted && this.state.clickedJapChar) {\n      return <Hint currentHintedChar={this.state.clickedJapChar} />;\n    }\n    if (this.props.onHintedCard) {\n      return <Hint currentHintedChar={this.props.currentJapChar} />;\n    }\n  };\n\n  displayWordInfo = () => {\n    if (this.props.wordCompleted) {\n      return (\n        <WordCard\n          wordInfo={this.state.currentWordInfo}\n          word_audio_duration={this.state.word_audio_duration}\n        />\n      );\n    }\n  };\n\n  getKeyByValue = (object, value) => {\n    return Object.keys(object).find((key) => object[key] === value);\n  };\n\n  displayMessage = () => {\n    const {\n      onIncorrectCard,\n      curWrongChar,\n      onHintedCard,\n      wordCompleted,\n      audioIsPlaying,\n      romajiNotInDict,\n      currentJapChar,\n    } = this.props;\n    if (audioIsPlaying) {\n      return (\n        <p>\n          <b>♬ playing audio ♬</b>\n        </p>\n      );\n    }\n    if (onIncorrectCard) {\n      return (\n        <div>\n          <p>\n            <b>\n              {romajiNotInDict\n                ? `The romaji ${curWrongChar} does not exist in the alphabet`\n                : `The romaji ${curWrongChar} corresponds to ${this.getKeyByValue(\n                    katakanaToRomaji,\n                    curWrongChar\n                  )}, not ${currentJapChar}`}\n            </b>\n          </p>\n          <p>\n            <b>press SPACE to try again</b>\n          </p>\n        </div>\n      );\n    } else if (onHintedCard && !audioIsPlaying) {\n      return (\n        <p>\n          <b>press ENTER to continue</b>\n        </p>\n      );\n    } else if (wordCompleted && !audioIsPlaying) {\n      return (\n        <div>\n          <p>\n            <b>click on card to review mnemonic or press SPACE to continue</b>\n          </p>\n        </div>\n      );\n    } else if (!onHintedCard && !wordCompleted) {\n      return (\n        <p>\n          <b>press SPACE to learn the romaji</b>\n        </p>\n      );\n    } else {\n      return <p></p>;\n    }\n  };\n\n  renderRoute = (route) => {\n    switch (route) {\n      case \"progress\":\n        return (\n          <div className=\"progress-flex-container\">\n            <div className=\"progress-flex-item1\">\n              <NavBar\n                onRouteChange={this.onRouteChange}\n                currentTab=\"progress\"\n              />\n            </div>\n            <div className=\"progress-flex-item2\">\n              <SmallCharList user_uid={this.state.userInfo.id} />\n            </div>\n            <Footer />\n          </div>\n        );\n      case \"signin\":\n        return (\n          <Signin onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n        );\n      case \"register\":\n        return (\n          <Register\n            onRouteChange={this.onRouteChange}\n            loadUser={this.loadUser}\n          />\n        );\n      case \"home\":\n        const { currentWord } = this.props;\n\n        return (\n          <div className=\"page-container\" style={{ position: \"relative\" }}>\n            <div className=\"content-wrap\">\n              <NavBar onRouteChange={this.onRouteChange} currentTab=\"home\" />\n              <WelcomeBar userName={this.state.userInfo.name} />\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Paper elevation={0} />\n                <OutsideAlerter focusInputBox={this.focusInputBox}>\n                  <CharInput\n                    updateCharScore={this.updateCharScore}\n                    updateWordScore={this.updateWordScore}\n                    user_uid={this.state.userInfo.id}\n                    ref={this.charInputRef}\n                  />\n                </OutsideAlerter>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                >\n                  <Grid item>\n                    <CharList\n                      charsToRead={this.parseJapaneseWord(currentWord)}\n                      onClickCard={this.onClickCard}\n                      clickedJapChar={this.state.clickedJapChar}\n                    />\n                  </Grid>\n                  <div>{this.displayMessage()}</div>\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    spacing=\"2\"\n                  >\n                    <Grid item>\n                      <Paper elevation={1} />\n                      {this.showHint()}\n                    </Grid>\n                    <Grid item>{this.displayWordInfo()}</Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </div>\n            <Footer />\n          </div>\n        );\n      default:\n        return <div>Default</div>;\n    }\n  };\n\n  render() {\n    return <div className=\"tc\">{this.renderRoute(this.state.route)}</div>;\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { USER_INPUT } from \"./constants\";\r\n// import update from \"react-addons-update\";\r\n\r\nconst initialInputBox = {\r\n  inputBox: \"\",\r\n  keyPressed: \"\",\r\n  romajiNotInDict: false,\r\n};\r\n\r\nconst initialGeneralState = {\r\n  audioIsPlaying: false,\r\n};\r\n\r\nconst initialCardState = {\r\n  currentJapChar: \"\",\r\n  currentRomaji: \"\",\r\n  currentWord: \"\",\r\n  curWrongChar: \"\",\r\n  hintedCharList: [],\r\n  wrongCharList: {},\r\n  onIncorrectCard: false,\r\n  onHintedCard: false,\r\n  wordCompleted: false,\r\n  prevTimestamp: null,\r\n  charTimestamp: [],\r\n  allCharTimestamp: [],\r\n  romajiList: [],\r\n  indexCurrentCard: 0,\r\n  cardStateList: [],\r\n};\r\n\r\nexport const changeGeneralState = (\r\n  state = initialGeneralState,\r\n  action = {}\r\n) => {\r\n  switch (action.type) {\r\n    case \"PLAY_AUDIO\":\r\n      return { ...state, audioIsPlaying: true };\r\n    case \"PAUSE_AUDIO\":\r\n      return { ...state, audioIsPlaying: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const changeInputBox = (state = initialInputBox, action = {}) => {\r\n  switch (action.type) {\r\n    case USER_INPUT:\r\n      return { ...state, inputBox: action.payload };\r\n    case \"PRESS_KEY\":\r\n      return { ...state, keyPressed: action.payload };\r\n    case \"RESET_STORE\":\r\n      return { ...state, inputBox: \"\", keyPressed: \"\" };\r\n    case \"ALERT_NOT_IN_DICT\":\r\n      return { ...state, romajiNotInDict: true };\r\n    case \"RESET_NOT_IN_DICT_ALERT\":\r\n      return { ...state, romajiNotInDict: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const changeCardState = (state = initialCardState, action = {}) => {\r\n  switch (action.type) {\r\n    case \"CHAR_UPDATE\":\r\n      return {\r\n        ...state,\r\n        currentJapChar: action.currentJapChar,\r\n        currentRomaji: action.currentRomaji,\r\n      };\r\n    case \"ENTER_PRESS\":\r\n      state.cardStateList[state.indexCurrentCard] = \"hinted\";\r\n      return {\r\n        ...state,\r\n        hintedCharList: [...state.hintedCharList, state.currentRomaji],\r\n        onHintedCard: false,\r\n        prevTimestamp: action.time,\r\n        indexCurrentCard: state.indexCurrentCard + 1,\r\n      };\r\n    case \"WRONG_INPUT\":\r\n      state.wrongCharList[action.currentChar] = action.userInput;\r\n      state.cardStateList[state.indexCurrentCard] = \"incorrect\";\r\n      return {\r\n        ...state,\r\n        onIncorrectCard: true,\r\n        curWrongChar: action.userInput,\r\n      };\r\n    case \"SPACE_PRESS_TO_CONTINUE\":\r\n      state.cardStateList[state.indexCurrentCard] = \"\";\r\n      return { ...state, onIncorrectCard: false };\r\n    case \"SPACE_PRESS_FOR_HINT\":\r\n      return { ...state, onHintedCard: true };\r\n    case \"SPACE_PRESS_TO_GO_NEXT\":\r\n      return {\r\n        ...state,\r\n        wordCompleted: false,\r\n        charTimestamp: [],\r\n        allCharTimestamp: [...state.allCharTimestamp, state.charTimestamp],\r\n        // prevTimestamp: action.time,\r\n        hintedCharList: [],\r\n      };\r\n    case \"COMPLETE_WORD\":\r\n      return { ...state, wordCompleted: true };\r\n    case \"UPDATE_WORD\":\r\n      return {\r\n        ...state,\r\n        currentWord: action.payload,\r\n        romajiList: action.romajiList,\r\n        cardStateList: action.cardStateList,\r\n        indexCurrentCard: 0,\r\n      };\r\n    case \"COMPLETE_CHAR\":\r\n      const newTimestamp = {\r\n        char: state.currentJapChar,\r\n        time: action.time - state.prevTimestamp,\r\n        type: action.completionType,\r\n      };\r\n      console.log(\"TIME STAMP\", newTimestamp);\r\n      return {\r\n        ...state,\r\n        charTimestamp: [...state.charTimestamp, newTimestamp],\r\n        prevTimestamp: action.time,\r\n      };\r\n    case \"SET_NEW_WORD_TIME\":\r\n      return { ...state, prevTimestamp: action.time };\r\n    case \"INPUT_CORRECT_CHAR\":\r\n      // state.cardStateList[state.indexCurrentCard] = \"correct\";\r\n      return {\r\n        ...state,\r\n        indexCurrentCard: state.indexCurrentCard + 1,\r\n        cardStateList: state.cardStateList.map((item, idx) =>\r\n          idx === state.indexCurrentCard ? \"correct\" : item\r\n        ),\r\n      };\r\n    case \"INPUT_INCORRECT_CHAR\":\r\n      // state.cardStateList[state.indexCurrentCard] = \"incorrect\";\r\n      return {\r\n        ...state,\r\n        cardStateList: state.cardStateList.map((item, idx) =>\r\n          idx === state.indexCurrentCard ? \"incorrect\" : item\r\n        ),\r\n      };\r\n    case \"RESET_STORE\":\r\n      return {\r\n        ...state,\r\n        allCharTimestamp: [],\r\n        charTimestamp: [],\r\n        curWrongChar: null,\r\n        onHintedCard: false,\r\n        onIncorrectCard: false,\r\n        wordCompleted: false,\r\n        wrongCharList: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport \"./scss/index.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import \"tachyons\"; // mess with material-ui Textfield\nimport App from \"./containers/App.js\";\nimport {\n  changeGeneralState,\n  changeInputBox,\n  changeCardState,\n} from \"./reducers\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport \"typeface-roboto\";\nimport LogRocket from \"logrocket\";\n\nLogRocket.init(\"zskhtw/japanese-learning\");\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#1CB0F6\",\n    },\n    secondary: {\n      main: \"#ffffff\",\n    },\n  },\n});\n\nconst rootReducer = combineReducers({\n  changeGeneralState,\n  changeInputBox,\n  changeCardState,\n});\n\nconst logger = createLogger();\n\n// const store = createStore(rootReducer, applyMiddleware(logger));\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(logger, LogRocket.reduxMiddleware())\n);\n// const store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}